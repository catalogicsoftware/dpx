version: "3.7"
#
# When making any changes to this compose file please validate them by running:
# >docker-compose -f <this_file_name> config
#
# Standard service configuration:
# -Docker image name should match (Compose) service name
# -Place any environment variables common to all services in file dpx.env
#  Note: This file is dynamically generated by make (Makefile)
# -Every service should have ability to set the service port(s) via an env
# -Service container organization:
#  /app        - Service application root
#  /app/bin    - Service executable(s)
#  /app/lib    - Library dependencies
#  /app/logs   - Service log files (mounted host folder)
#  /app/config - Service configuration files
# -Service logging configured to write log files to /logs folder
#  Note: The fluentd logging driver should only be used when native logging is not feasible
# -
#

services:

# DPX core REST API service
# TODO:
# -Rename service to "dpxcore"
# -Change port to 8095:8095 [DONE]
# -Change Tag to TAG_DPXCORE [DONE]
  rest:
    image: catalogicsoftware/dpx-rest:${TAG_DPXCORE}
    env_file:
      - ./dpx.env
    environment:
      - _JAVA_OPTIONS=-Dlogging.level.com.catalogic.dpx.rest.commons.DBConn=DEBUG -Dauth.server.public.key.file.path=/key/catalogic.pub
      - DPX_MASTER_SSPRODIR=/opt/DPX
      - DPX_MAX_CONNECTIONS_PER_USER=6
      - START_DATE=${START_DATE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://sql-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=secret
    deploy:
      replicas: 2
      update_config:
        failure_action: rollback
    ports:
      - "8095:8095"
    volumes:
      - "./opt-apigateway:/key"
      - "./opt-apigateway:/opt"
      - "./stack-logs:/logs"
    networks:
      - "webnet"
    depends_on:
      - "sql-db"

# PostgreSQL database service
  sql-db:
    image: postgres:${TAG_SQLDB}
    deploy:
      replicas: 1
    ports:
      - target: 5432
        published: 5433
        protocol: tcp
        mode: host
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - "./rest-db:/var/lib/postgresql/data/pgdata"
    networks:
      - "webnet"
    logging:
      driver: "fluentd"
      options:
        tag: dpx-sql-db

# DPX vSphere plug-in manager service
# TODO:
# -Change SVC_SERVER_URL to DPXCORE_SERVER_URL
# -Change DPXCORE URL host from rest to dpxcore
# -Change DPXCORE URL port from 8080 to 8095 [DONE]
  vplugin-mgr:
    image: catalogicsoftware/dpx-vplugin-mgr:${TAG_VPLUGIN_MGR}
    env_file:
      - ./dpx.env
      - ./dpx-vplugin-mgr.env
    environment:
      - AUTH_SERVER_URL=http://auth:8091
      - SVC_SERVER_URL=http://rest:8095
      - S3_BUCKET_FOLDER_NAME=released
      - START_DATE=${START_DATE}
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 10s
    healthcheck:
      test: wget -qO- http://localhost:8082/actuator/health | grep -q '"UP"' || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "8082:8082"
    volumes:
      - "./plugins:/app/plugins"
    networks:
      - webnet
    logging:
      driver: "fluentd"
      options:
        tag: dpx-vplugin-mgr

# DPX authentication service
# TODO:
# -Change port to 8091:8091
  auth:
    image: catalogicsoftware/dpx-auth:${TAG_AUTH}
    env_file:
      - ./dpx.env
      - ./dpx-auth.env
    environment:
      - RS_HOSTNAME=discovery
      - MS_PORT=8091
      - CONFIG_PATH=config
      - START_DATE=${START_DATE}
    deploy:
      replicas: 2
      update_config:
        failure_action: rollback
    healthcheck:
#      test: wget -qO- http://localhost:8091/management/health | grep -q '"UP"' || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "8091:8091"
    volumes:
      - "./config/auth:/app/config"
      - "./stack-logs:/app/logs"
    networks:
      - webnet

# DPX vSphere plug-in configuration UI service
# TODO:
# -Change Tag to TAG_CONFIGUI [DONE]
  config-ui:
    image: catalogicsoftware/dpx-ui:${TAG_CONFIGUI}
    environment:
      - START_DATE=${START_DATE}
    deploy:
      replicas: 2
      update_config:
        failure_action: rollback
    healthcheck:
      test: wget -qO- http://localhost:8088/ || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "8088:8088"
    networks:
      - webnet
    logging:
      driver: "fluentd"
      options:
        tag: dpx-config-ui

# DPX application main UI service
# TODO:
# -Consider changing port to 8096:8096
  dpxui:
    image: catalogicsoftware/dpx-webui:${TAG_DPXUI}
    deploy:
      replicas: 1
    ports:
      - "8096:80"
    networks:
      - webnet
    logging:
      driver: "fluentd"
      options:
        tag: dpx-ui

# DPX gateway service
# TODO:
# -Rename service to "gateway" [DONE]
# -Change port to 443:8443 [DONE]
# -Change port to 80:8080 [DONE]
# -Change Tag to TAG_GATEWAY [DONE]
# -Update service port numbers in route specifications
# -Add uppercase variants for env variables [DONE]
#  Need to also cover env definitions in file: dpx-apigateway.env (generated) [DONE]
#  Remove definition for server_port from the env file [DONE]
# -Eventually remove lower case variants for env variables [DONE]
# -Change env for "app" to use "dpx"
# -Add mount point /app/config for service config data (opt-apigateway) [DONE]
  gateway:
    image: catalogicsoftware/dpx-apigateway:${TAG_GATEWAY}
    env_file:
      - ./dpx.env
      - ./dpx-apigateway.env
    environment:
      - RS_HOSTNAME=discovery
      - MS_PORT=8443
      - HTTP_PORT=8080
      - SOCKET_TIMEOUT_MILLIS=120000
      - START_DATE=${START_DATE}
      - ROUTE_ROOT_PREFIX=/
      - ROUTE_URL_ADMIN=http://admin:8092/
      - ROUTE_URL_AUTH=http://auth:8091/
      - ROUTE_URL_BIRT=http://${SVC_HOST}:8099/
      - ROUTE_URL_CONFIG_UI=http://config-ui:8088/
      - ROUTE_URL_DISCOVERY=http://discovery:8090/
      - ROUTE_URL_DPXCORE=http://dpxcore:8095/
      - ROUTE_URL_APP=http://rest:8095/
      - ROUTE_URL_DPXUI=http://dpxui:80/
      - ROUTE_URL_GATEWAY=http://gateway:8080/
      - ROUTE_URL_PLUGIN_MGR=http://vplugin-mgr:8082/
      - ROUTE_URL_REPORT=http://report:8094/
    deploy:
      replicas: 2
      update_config:
        failure_action: rollback
    healthcheck:
      test: wget -qO- http://localhost:8080/ || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "443:8443"
      - "80:8080"
    volumes:
      - "./config/gateway:/app/config"
      - "./stack-logs:/app/logs"
# TODO: Remove following after service stabalizes
#     - "./opt-apigateway:/app/config" [LAST]
#     - "./opt-apigateway:/opt"        [OLDER]
    networks:
      -  webnet

# DPX discovery service
  discovery:
    image: catalogicsoftware/discovery:${TAG_DISCOVERY}
    env_file:
      - ./dpx.env
    environment:
      - RS_PORT=8090
    deploy:
      replicas: 1
    ports:
      - "8090:8090"
    volumes:
      - "./stack-logs:/app/logs"
    networks:
      - webnet

# DPX report service
# TODO:
# -Change port to 8094:8094 [DONE]
# -Add mount point for config [DONE]
  report:
    image: catalogicsoftware/report:${TAG_REPORT}
    env_file:
      - ./dpx.env
    environment:
      - RS_HOSTNAME=discovery
      - MS_PORT=8094
      - CONFIG_PATH=config
      - BIRT_SVC_HOST=${SVC_HOST}
    deploy:
      replicas: 1
    ports:
      - "8094:8094"
    volumes:
      - "./config/report:/app/config"
      - "./data:/app/data"
      - "./TestData:/app/TestData"
      - "./stack-logs:/app/logs"
    networks:
      - webnet

# DPX BIRT service
# TODO:
  birt:
    image: catalogicsoftware/birt:${TAG_BIRT}
    env_file:
      - ./dpx.env
    environment:
      - RS_HOSTNAME=discovery
      - MS_PORT=8099
      - CONFIG_PATH=config
    deploy:
      replicas: 1
    ports:
      - "8099:8099"
    volumes:
      - "./config/birt:/app/config"
      - "./data:/app/data"
      - "./stack-logs:/app/logs"
      - "./stack-logs:/data/log/oda/"
    networks:
      - webnet

# Docker logging driver
# Note:
# Should only be used for services where native logging is not practical
# All logs should be consolidated in the same mounted host folder
  fluentd:
    image: fluent/fluentd:${TAG_FLUENTD}
    volumes:
#     - "./config/fluent.conf:/fluentd/etc/fluent.conf"
      - "./stack-logs:/fluentd/log"
    ports:
      - "24224:24224"
    configs:
      - source: fluentd_conf
        target: /fluentd/etc/fluent.conf
    networks:
      - webnet

configs:
  fluentd_conf:
    name: fluentd_conf${FLUENTD_CONFIG_DIGEST}
    file: ./config/fluent.conf

networks:
    webnet:

<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.1.v201309091055 Build &lt;4.3.1.v20130917-1035></property>
    <simple-property-list name="includeResource">
        <value>reports</value>
    </simple-property-list>
    <list-property name="includeScripts">
        <property>Wraplines.js</property>
    </list-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[//nullString = "------";
nullString = "";
//nullAge = "-- --:--";
nullAge = "";
NoBackUpNodes = new Array();  //this array will populate NodeNotBackedUpDataSet


]]></method>
    <method name="beforeFactory"><![CDATA[

 
   ]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">syncsort_library.rptlibrary</property>
            <property name="namespace">syncsort_library</property>
        </structure>
    </list-property>
    <list-property name="cssStyleSheets">
        <structure>
            <property name="fileName">syncsort.css</property>
            <property name="useExternalCss">false</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="report_displayname" id="791">
            <property name="hidden">true</property>
            <text-property name="helpText">View nodes and volumes that are protected using DPX Backup.</text-property>
            <text-property name="promptText">Protected Systems</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="report_category" id="792">
            <property name="hidden">true</property>
            <text-property name="helpText">Displays the protection status of volumes and qtrees using NetAppâ€™s SnapMirror or SnapVault software</text-property>
            <text-property name="promptText">Storage Protection</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="display_RPObasedOn" id="5671">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Days</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="display_LagTimeThreshold" id="1206">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1 day</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <cascading-parameter-group name="Master_Server" id="6908">
            <property name="dataSet">MasterServerParam</property>
            <property name="dataSetMode">multiple</property>
            <parameters>
                <scalar-parameter name="MasterServer" id="6909">
                    <text-property name="promptText" key="DPxMasterServerNode"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">MasterServerParam</property>
                    <expression name="valueExpr">row["id"]</expression>
                    <expression name="labelExpr">row["name"]</expression>
                    <expression name="sortByColumn">dataSetRow["name"]</expression>
                    <property name="sortDirection">asc</property>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">false</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="NodeGroup" id="7984">
                    <text-property name="promptText" key="DPxMasterServerNodeGroup"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">DPX_ClientNodeGroups</property>
                    <expression name="valueExpr">row["groupName"]</expression>
                    <expression name="labelExpr">row["groupName"]</expression>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">true</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="Node" id="7985">
                    <text-property name="promptText" key="DPxMasterServerClientNodes"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">NodeListParam</property>
                    <expression name="valueExpr">row["nodeName"]</expression>
                    <expression name="labelExpr">row["nodeName"]</expression>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">multi-value</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">true</property>
                    <structure name="format"/>
                </scalar-parameter>
            </parameters>
        </cascading-parameter-group>
        <scalar-parameter name="JobType" id="3741">
            <property name="hidden">false</property>
            <text-property name="helpText" key="SupportedBackupJobTypes"></text-property>
            <text-property name="promptText" key="JobType"></text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="sortBy">value</property>
            <property name="sortDirection">asc</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">(All)</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">BACKUP_FILE</property>
                    <property name="label">File</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_NDMP</property>
                    <property name="label">NDMP</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_BLOCK</property>
                    <property name="label">Block</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_VIRTUALIZATION</property>
                    <property name="label">Virtualization</property>
                </structure>
                <structure>
                    <property name="value">(All)</property>
                    <property name="label">(All)</property>
                </structure>
            </list-property>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="LagTimeThreshold" id="968">
            <text-property name="helpText" key="BackupTimeHelp"></text-property>
            <text-property name="promptText" key="ReportPeriod">Days Since Last Backup:</text-property>
            <property name="valueType">static</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">86400</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">86400</property>
                    <property name="label">1 day</property>
                </structure>
                <structure>
                    <property name="value">172800</property>
                    <property name="label">2 days</property>
                </structure>
                <structure>
                    <property name="value">259200</property>
                    <property name="label">3 days</property>
                </structure>
                <structure>
                    <property name="value">345600</property>
                    <property name="label">4 days</property>
                </structure>
                <structure>
                    <property name="value">432000</property>
                    <property name="label">5 days</property>
                </structure>
                <structure>
                    <property name="value">518400</property>
                    <property name="label">6 days</property>
                </structure>
                <structure>
                    <property name="value">604800</property>
                    <property name="label">7 days</property>
                </structure>
                <structure>
                    <property name="value">2592000</property>
                    <property name="label">30 days</property>
                </structure>
                <structure>
                    <property name="value">7776000</property>
                    <property name="label">90 days</property>
                </structure>
                <structure>
                    <property name="value">15552000</property>
                    <property name="label">180 days</property>
                </structure>
                <structure>
                    <property name="value">31536000</property>
                    <property name="label">365 days</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ReportDays" id="6366">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">32760</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">7</property>
                </structure>
                <structure>
                    <property name="value">30</property>
                </structure>
                <structure>
                    <property name="value">60</property>
                </structure>
                <structure>
                    <property name="value">90</property>
                </structure>
                <structure>
                    <property name="value">180</property>
                </structure>
                <structure>
                    <property name="value">360</property>
                </structure>
                <structure>
                    <property name="value">32760</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="run_by" id="2598">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">DefaultUser</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="ScriptedArray" id="2356"/>
        <oda-data-source extensionID="com.syncsort.dp.xsb.reports.data.oda.rest" name="DPXprovider" id="3786">
            <property name="Base URI">http://report:8094/dpx</property>
            <property name="Auth URI">http://auth:8091/session</property>
            <property name="Username">sysadmin</property>
            <encrypted-property name="Password" encryptionID="base64">c3lzYWRtaW4K</encrypted-property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderDataSet" id="3787">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Compliant</property>
                    <expression name="expression">//using seconds rather than days as per RG.   &#13;
var now = new Date()/1000  &#13;
var ageInSecs = (now - row["jobId"])&#13;
//if some error then set false and bail out &#13;
if (row["errorMessage"].length > 0){&#13;
false&#13;
}&#13;
//parameter value is in seconds &#13;
else if (ageInSecs > params["LagTimeThreshold"].value){&#13;
false&#13;
}&#13;
else if (ageInSecs &lt;= params["LagTimeThreshold"].value){&#13;
true&#13;
}&#13;
//don't want false positives  &#13;
else {&#13;
false &#13;
}</expression>
                    <property name="dataType">boolean</property>
                </structure>
                <structure>
                    <property name="name">RecordCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["jobId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["jobId"] != ""</expression>
                </structure>
                <structure>
                    <property name="name">CompliantCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["name"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["Compliant"] == true</expression>
                </structure>
                <structure>
                    <property name="name">msCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNTDISTINCT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["dpxId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["dpxId"] != "(All)"</expression>
                </structure>
                <structure>
                    <property name="name">exception Count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">1</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["errorMessage"].length >0</expression>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobId</text-property>
                    <text-property name="heading">jobId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobName</text-property>
                    <text-property name="heading">jobName</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">srcNode</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">srcNode</text-property>
                    <text-property name="heading">srcNode</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">vmNode</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">vmNode</text-property>
                    <text-property name="heading">vmNode</text-property>
                </structure>
                <structure>
                    <property name="columnName">errorMessage</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <text-property name="heading">errorMessage</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">not-like</property>
                    <expression name="expr" type="javascript">row["jobType"]</expression>
                    <simple-property-list name="value1">
                        <value>"BACKUP_IMAGE"</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["jobType"]</expression>
                    <simple-property-list name="value1">
                        <value>/RESTORE/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">match</property>
                    <expression name="expr" type="javascript">//this filter removes VM's leaving vCenter tasks intact.  &#13;
if (row["jobType"]== "BACKUP_VIRTUALIZATION") {&#13;
  row["vmNode"]&#13;
  }&#13;
  else {&#13;
  "NA"&#13;
  }</expression>
                    <simple-property-list name="value1">
                        <value>/NA/</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">// DPX Unprotected Node Report Main Query &#13;
 // modified query supporting multi select on src node: &#13;
 // modifed to support job type parameter &#13;
 // modified to support Node Groups.  &#13;
&#13;
var msId = params["MasterServer"].value;&#13;
var SourceNode = params["Node"].toString();&#13;
var reportDays = params["ReportDays"].value;&#13;
msIdFilter = "{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}";&#13;
&#13;
var queryStr = "";&#13;
var sep = ",";&#13;
var msId = params["MasterServer"].value;&#13;
if (msId == "(All)") {&#13;
   msId = "*"; &#13;
   }&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
queryStr += "["+"{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},{\"property\":\"resource\", \"op\":\"=\",\"value\":\"volume\"}"&#13;
&#13;
var SourceNode = params["Node"].toString();  &#13;
 if(SourceNode != "(All)"){  //add source node filter if specified&#13;
    SourceNode=SourceNode.replace(/\(All\)\s/,"");  // remove "(All)" if exists in source node object  &#13;
    SourceNodeFilter = "{\"property\":\"srcNode\",\"op\":\"=\",\"value\":\""+SourceNode.replace(/,/g," ")+"\"}"  &#13;
    queryStr += sep+SourceNodeFilter&#13;
    }&#13;
  if ((nodeGroup != "(All)")&amp;&amp;(SourceNode == "(All)")) {   //add  node group filter only  if no specific node is selected &#13;
     queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}"  &#13;
     }&#13;
     &#13;
if (params["JobType"].toString() != "(All)") {&#13;
    var jobType = params["JobType"].toString(); &#13;
    jobType = jobType.replace(/,/g," ")                            &#13;
    queryStr += ",{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+jobType+"\"}"&#13;
    } &#13;
&#13;
 var instanceFlagFilter = ",{\"property\":\"instanceFlag\",\"op\":\"=\",\"value\":\"lastgood\"}" // OR possibly "latest"&#13;
 var reportDaysFilter = ",{\"property\":\"reportDays\",\"op\":\"=\",\"value\":\""+reportDays+"\"}"&#13;
&#13;
 queryStr += instanceFlagFilter + reportDaysFilter + "]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">jobId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">jobName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">srcNode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">vmNode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">errorMessage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Compliant</property>
                        <property name="dataType">boolean</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">RecordCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">CompliantCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">msCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">exception Count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[//var errors = new Array(); //this will hold error messages 
//var nodeStatus = new java.util.HashMap(); //holds compliance status of each client node. 
//var nodeLastBackup = new java.util.HashMap(); //holds jobId of last backup for each client node. 

//reportContext.setPersistentGlobalVariable("errors", errors );
//reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus );
//reportContext.setPersistentGlobalVariable("nodeLastBackup", nodeLastBackup );
]]></method>
            <method name="onFetch"><![CDATA[if (!reportContext.getPersistentGlobalVariable("errors")) {
  var errors = new Array(); //this will hold error messages
}
else {
  var errors = reportContext.getPersistentGlobalVariable("errors");
}


if (!reportContext.getPersistentGlobalVariable("nodeStatus")) {
  nodeStatus = new java.util.HashMap(); //holds compliance status of each client node. 
}
else {
  var nodeStatus = reportContext.getPersistentGlobalVariable("nodeStatus")
}


if (!reportContext.getPersistentGlobalVariable("nodeLastBackup")) {
  var nodeLastBackup = new java.util.HashMap(); //holds jobId of last backup for each client node.  
}
else {
  var nodeLastBackup = reportContext.getPersistentGlobalVariable("nodeLastBackup")
}


var lastBackup = row["jobId"]+"!"+row["jobName"]+"!"+row["jobType"];


  
  if (row["errorMessage"] != ""){
     var myStr  = row["dpxId"]+":"+row["errorMessage"] 
     errors.push(myStr);
     reportContext.setPersistentGlobalVariable("errors", errors );
      }
     
   else {
      myKey  = row["dpxId"]+":"+row["srcNode"] 
      var status = "";
      if (row["Compliant"] == true ){
       status = "Yes"
      }
      else {
      status = "No"
      }
         
     
      nodeStatus.put(myKey,status);
      
      //need to verify really last backup 
      var myStr = nodeLastBackup.get(myKey)
         
      if (myStr == null){
        nodeLastBackup.put(myKey,lastBackup);
        }
       else if (myStr != null){
            if (myStr.slice(0,10) < row["jobId"]){
             nodeLastBackup.put(myKey,lastBackup);
              
            }
         }
         reportContext.setPersistentGlobalVariable("nodeLastBackup", nodeLastBackup );
         reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus );
      }   //ends no errorMessage block

 
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">jobId</property>
                    <property name="nativeName">jobId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">jobName</property>
                    <property name="nativeName">jobName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">srcNode</property>
                    <property name="nativeName">srcNode</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">vmNode</property>
                    <property name="nativeName">vmNode</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">errorMessage</property>
                    <property name="nativeName">errorMessage</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{volumes[*]}(dpxId,jobId,jobName,name,srcNode,jobType,vmNode,errorMessage)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="MasterServerParam" id="3788">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["name"] != "(All)"</expression>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">hostAddress</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">hostAddress</text-property>
                    <text-property name="heading">hostAddress</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">hostAddress</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[//var map = new java.util.HashMap();
//reportContext.setPersistentGlobalVariable("map", map);]]></method>
            <method name="onFetch"><![CDATA[//onFetch()

if (reportContext.getPersistentGlobalVariable("map") != null){
    var map = reportContext.getPersistentGlobalVariable("map")
   }
   else {
    var map = new java.util.HashMap()
   }




if (row["count"] < 1){ //no masters are registered in this case 
map.put(row["id"],row["name"])
}

if (row["id"] != "(All)" ){
map.put(row["id"],row["name"])
}
reportContext.setPersistentGlobalVariable("map", map);]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">hostAddress</property>
                    <property name="nativeName">hostAddress</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{dpxs[*]}(name,hostAddress,id)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderSrcNodes" id="3946">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">row["name"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">is-not-null</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                </structure>
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+params["MasterServer"].value+"\"},"+&#13;
"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"node\"}]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(name,dpxId,nodeType)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <script-data-set name="RPOBasedOnDataSet" id="5653">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">RPObasedOn</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">DisplayText</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">RPObasedOn</property>
                </structure>
                <structure>
                    <property name="columnName">DisplayText</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">RPObasedOn</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">DisplayText</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">ScriptedArray</property>
            <method name="open"><![CDATA[colNums = ["days","job"];
idx = 0;]]></method>
            <method name="fetch"><![CDATA[  if (idx < 2) {
    row["RPObasedOn"] = colNums[idx];
       if (idx == 0) {  
    row["RPObasedOn"] = "days";
    row["DisplayText"] = "Days"
    }
    
     if (idx == 1) {  
    row["RPObasedOn"] = "job";
    row["DisplayText"] = "Jobs"
    }
    
        idx++;
    return true;
}else{
    return false;
}   ]]></method>
        </script-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderSrcNodesKey" id="5847">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">join-col</property>
                    <expression name="expression">row["dpxId"]+":"+row["nodeName"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">IsBackedUp</property>
                    <expression name="expression">var myHash =  reportContext.getPersistentGlobalVariable("nodeStatus");&#13;
var myKey = row["join-col"]&#13;
if (myHash != null){&#13;
myHash.get(myKey)&#13;
switch(myHash.get(myKey)) {&#13;
    case "Yes":&#13;
        true&#13;
        break;&#13;
    case "No": &#13;
        true&#13;
        break;&#13;
    case null: {&#13;
    NoBackUpNodes.push(myKey)&#13;
     false&#13;
     }&#13;
     break;&#13;
     &#13;
    default: &#13;
         false   &#13;
   }&#13;
  }</expression>
                    <property name="dataType">boolean</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeName</text-property>
                    <text-property name="heading">nodeName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">is-not-null</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                </structure>
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">gt</property>
                    <expression name="expr" type="javascript">var myStr1 = params["Node"].toString();&#13;
var myStr2 = row["nodeName"];&#13;
if (myStr1 != "(All)"){&#13;
myStr1.indexOf(myStr2)&#13;
}&#13;
else 2 //always > -1 ...turns off filter</expression>
                    <simple-property-list name="value1">
                        <value>-1</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var queryStr = "";&#13;
var sep = ",";&#13;
var msId = params["MasterServer"].value;&#13;
if (msId == "(All)") {&#13;
   msId = "*"; &#13;
   }&#13;
queryStr += "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},{\"property\":\"resource\", \"op\":\"=\",\"value\":\"catNode\"}"&#13;
&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
&#13;
if (nodeGroup != "(All)"){  &#13;
   queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}]"  &#13;
 }&#13;
else {&#13;
queryStr += "]"&#13;
}&#13;
queryStr</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">nodeName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">join-col</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">IsBackedUp</property>
                        <property name="dataType">boolean</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeClose"><![CDATA[

]]></method>
            <method name="onFetch"><![CDATA[
 

]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">nodeName</property>
                    <property name="nativeName">nodeName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(name,nodeName,dpxId,nodeType)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="DPX_ClientNodeGroups" id="7986">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">groupName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">groupName</text-property>
                    <text-property name="heading">groupName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">recordCount</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">recordCount</text-property>
                    <text-property name="heading">recordCount</text-property>
                </structure>
            </list-property>
            <list-property name="filter"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var msId = params["MasterServer"].value&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},"+&#13;
"{\"property\":\"resource\",\"op\":\"=\",\"value\":\"catGroup\"}]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">recordCount</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">groupName</property>
                    <property name="nativeName">groupName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">recordCount</property>
                    <property name="nativeName">recordCount</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{groups[*]}(groupName,dpxId,recordCount)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="NodeListParam" id="7987">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">row["name"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">rowCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["nodeName"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeName</text-property>
                    <text-property name="heading">nodeName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
                <structure>
                    <property name="columnName">groupName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">groupName</text-property>
                    <text-property name="heading">groupName</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">eq</property>
                    <expression name="expr" type="javascript">if (params["MasterServer"].value == "(All)"){&#13;
    if (row["groupName"] == "(All)" ) {&#13;
       true&#13;
       }&#13;
          else {&#13;
           false&#13;
           }&#13;
    }&#13;
else {  //(params["MasterServer"].value != "(All)")&#13;
&#13;
&#13;
   if (params["NodeGroup"].value == "(All)"){     &#13;
          if (row["groupName"] == "(All)" ) {   //only shows (All)&#13;
       true&#13;
       }&#13;
            else  false &#13;
      } &#13;
 &#13;
 &#13;
    &#13;
  else {    //params["NodeGroup"].value != "(All)" &#13;
       if (row["groupName"] == params["NodeGroup"].value) {&#13;
       true&#13;
       }&#13;
       else if (row["groupName"] == "(All)" ) {&#13;
       true&#13;
       } &#13;
    }&#13;
 }</expression>
                    <simple-property-list name="value1">
                        <value>true</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var queryStr = "";&#13;
var msId = params["MasterServer"].value;&#13;
var resource = "catNode";&#13;
//if (msId == "(All)") {&#13;
//   msId = "*"; &#13;
//   }&#13;
&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
queryStr += "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
&#13;
 if (nodeGroup != "(All)") {   //add node group filter   &#13;
     queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}"&#13;
     }     &#13;
queryStr+"]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">nodeName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">rowCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[//onFetch()
if (params["MasterServer"].value != "(All)"){
   if (params["NodeGroup"].value != "(All)"){ 
      if (row["nodeName"] != "(All)"){
          GroupNodeList += " "+ row["nodeName"]
          GroupNodeArray.push(row["nodeName"])
      }
   }
 }    
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">nodeName</property>
                    <property name="nativeName">nodeName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">groupName</property>
                    <property name="nativeName">groupName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(name,nodeName,dpxId,nodeType,groupName)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="syncsort_master_page" id="933" extends="syncsort_library.syncsort_master_page">
            <property name="topMargin">0in</property>
            <overridden-values>
                <ref-entry baseId="56" name="company_logo" id="56"/>
                <ref-entry baseId="58" name="NewGrid" id="58"/>
                <ref-entry baseId="59" id="59"/>
                <ref-entry baseId="60" id="60"/>
                <ref-entry baseId="61" id="61"/>
                <ref-entry baseId="62" id="62"/>
                <ref-entry baseId="63" id="63"/>
                <ref-entry baseId="64" name="NewAutoText" id="64"/>
                <ref-entry baseId="65" id="65"/>
                <ref-entry baseId="66" name="NewText" id="66"/>
                <ref-entry baseId="67" id="67"/>
                <ref-entry baseId="68" name="NewAutoText1" id="68"/>
            </overridden-values>
        </simple-master-page>
    </page-setup>
    <body>
        <grid name="Title+ParamBox" id="373">
            <property name="width">100%</property>
            <column id="374"/>
            <row id="375">
                <cell id="376">
                    <property name="paddingTop">3pt</property>
                    <text name="PrimaryReportTitle" id="251">
                        <property name="style">primaryReportTitle</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<VALUE-OF>reportContext.getMessage("DPxUnprotectedNodesRepTitle",reportContext.getLocale());</VALUE-OF>
]]></text-property>
                    </text>
                    <text name="ReportProperties" id="845">
                        <property name="style">primaryReportSubTitle</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#4389bc"
this.getStyle().fontSize = "1.2em"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"
this.text = "Report Properties" ]]></method>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Report Properties]]></text-property>
                    </text>
                    <text name="ReportParameters" id="928">
                        <property name="dataSet">MasterServerParam</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">hostAddress</property>
                                <text-property name="displayName">hostAddress</text-property>
                                <expression name="expression" type="javascript">dataSetRow["hostAddress"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;color:black; background:white;  font-weight:normal; font-size:1.0em;width:100%;">
<dl>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportCreationDate", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF> new Date().toLocaleString()  </VALUE-OF>  </dd> <br>
		
	<dt> <b><VALUE-OF>reportContext.getMessage("ReportGeneratedBy", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF>params["run_by"].value  </VALUE-OF>  </dd> <br>
		<br>
	
<br>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportParameters", reportContext.getLocale());</VALUE-OF></b> </dt>
 <dd> <b><VALUE-OF>reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());</VALUE-OF></b> 

 <VALUE-OF> if (params["MasterServer"].value != "(All)") {
  var map= reportContext.getPersistentGlobalVariable("map");
  var key  = params["MasterServer"].value;
  map.get(key).toString();
  } 
  else {params["MasterServer"].value} </VALUE-OF> </dd>

<!--------------------------------------------------Node Group------------------------------------------------>
 
  <dd>
 <VALUE-OF format="HTML"> 
   str1 = reportContext.getMessage("DPxMasterServerNodeGroup", reportContext.getLocale());
   str2 = params["NodeGroup"].toString();
   str1.bold()+" "+str2 
 </VALUE-OF>
</dd>

<!-------------------------------------------------- Nodes --------------------------------------------------->
<dd>
 <VALUE-OF format="HTML"> 
   if(params["Node"].length > 1){
   str1 = reportContext.getMessage("DPxMasterServerClientNodes", reportContext.getLocale());
   str2 = params["Node"].toString().replace(/\(All\),/,"");
   str2 = str2.replace(/,/g,", ")
   }
   else {
   str1 = reportContext.getMessage("DPxMasterServerClientNode", reportContext.getLocale());
   str2 = params["Node"].toString();
   }
   str1.bold()+" "+str2 
 </VALUE-OF>
</dd


<!--------------------------------------------------jobtypes--------------------------------------------->
<dd> <b><VALUE-OF>reportContext.getMessage("JobType", reportContext.getLocale());</VALUE-OF>: </b> <VALUE-OF format="HTML">
var jobTypeStr = params["JobType"].toString();

jobTypeStr = jobTypeStr.replace(/BACKUP_BLOCK/,"Block")
jobTypeStr = jobTypeStr.replace(/BACKUP_FILE/,"File")
jobTypeStr = jobTypeStr.replace(/BACKUP_NDMP/,"NDMP")
jobTypeStr = jobTypeStr.replace(/BACKUP_IMAGE/,"Image")
jobTypeStr = jobTypeStr.replace(/BACKUP_VIRTUALIZATION/,"Virtualization")
jobTypeStr = jobTypeStr.replace(/\(All\),/,"")

jobTypeStr = jobTypeStr.replace(/,/g,", ")
</VALUE-OF> </dd> 
<dd>
<!---->
<dd> <b> <VALUE-OF>reportContext.getMessage("ReportPeriod", reportContext.getLocale()); </VALUE-OF></b> <VALUE-OF>params["display_LagTimeThreshold"].value </VALUE-OF> </dd>
<!---->
</dd>
<dl>
<div>]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
        <grid name="Summary-Detail-Day" id="533">
            <property name="width">100%</property>
            <property name="dataSet">dpxProviderDataSet</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">dpxId</property>
                    <text-property name="displayName">dpxId</text-property>
                    <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">jobId</property>
                    <text-property name="displayName">jobId</text-property>
                    <expression name="expression" type="javascript">dataSetRow["jobId"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">jobName</property>
                    <text-property name="displayName">jobName</text-property>
                    <expression name="expression" type="javascript">dataSetRow["jobName"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">name</property>
                    <text-property name="displayName">name</text-property>
                    <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">srcNode</property>
                    <text-property name="displayName">srcNode</text-property>
                    <expression name="expression" type="javascript">dataSetRow["srcNode"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">jobType</property>
                    <text-property name="displayName">jobType</text-property>
                    <expression name="expression" type="javascript">dataSetRow["jobType"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">vmNode</property>
                    <text-property name="displayName">vmNode</text-property>
                    <expression name="expression" type="javascript">dataSetRow["vmNode"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">errorMessage</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Compliant</property>
                    <text-property name="displayName">Compliant</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Compliant"]</expression>
                    <property name="dataType">boolean</property>
                </structure>
                <structure>
                    <property name="name">RecordCount</property>
                    <text-property name="displayName">RecordCount</text-property>
                    <expression name="expression" type="javascript">dataSetRow["RecordCount"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">CompliantCount</property>
                    <text-property name="displayName">CompliantCount</text-property>
                    <expression name="expression" type="javascript">dataSetRow["CompliantCount"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">msCount</property>
                    <text-property name="displayName">msCount</text-property>
                    <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">exception Count</property>
                    <text-property name="displayName">exception Count</text-property>
                    <expression name="expression" type="javascript">dataSetRow["exception Count"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <method name="onCreate"><![CDATA[
]]></method>
            <column id="534">
                <property name="width">10.541666666666666in</property>
            </column>
            <row id="6074">
                <cell id="6075"/>
            </row>
            <row id="6332">
                <cell id="6333">
                    <table name="NodesWithoutBackup" id="5876">
                        <property name="dataSet">dpxProviderSrcNodesKey</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">nodeType</property>
                                <text-property name="displayName">nodeType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["nodeType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">join-col</property>
                                <text-property name="displayName">join-col</text-property>
                                <expression name="expression" type="javascript">dataSetRow["join-col"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">MasterServerName</property>
                                <expression name="expression" type="javascript">//MasterServerName&#13;
if (row._outer["RecordCount"] > 0) {&#13;
var map= reportContext.getPersistentGlobalVariable("map");&#13;
var key  = dataSetRow["dpxId"];&#13;
map.get(key).toString();&#13;
 }&#13;
 else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">Debug</property>
                                <expression name="expression" type="javascript">row["join-col"]+" "+dataSetRow["IsBackedUp"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">IsBackedUp</property>
                                <text-property name="displayName">IsBackedUp</text-property>
                                <expression name="expression" type="javascript">dataSetRow["IsBackedUp"]</expression>
                                <property name="dataType">boolean</property>
                            </structure>
                            <structure>
                                <property name="name">Age</property>
                                <expression name="expression" type="javascript">if (row._outer["RecordCount"] > 0) {&#13;
var myHash =  reportContext.getPersistentGlobalVariable("nodeLastBackup");&#13;
var myKey = row["join-col"]&#13;
var myStr = myHash.get(myKey)&#13;
if (myStr == null){&#13;
    nullAge&#13;
    }&#13;
    else { &#13;
var d = new Date();&#13;
var now = d.getTime()/1000;&#13;
var age = (now - row["jobId"])&#13;
&#13;
function secondsToDays(seconds) {&#13;
   var numdays = Math.floor(seconds / 86400); &#13;
   return numdays&#13;
 }&#13;
 &#13;
(secondsToDays(age))+" "+reportContext.getMessage("d", reportContext.getLocale());&#13;
     &#13;
   }&#13;
}&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobId</property>
                                <expression name="expression" type="javascript">if (row._outer["RecordCount"] > 0){&#13;
var myHash =  reportContext.getPersistentGlobalVariable("nodeLastBackup");&#13;
var myKey = row["join-col"]&#13;
var myData = myHash.get(myKey)&#13;
if (myData == null){&#13;
         nullString&#13;
   }&#13;
 else {  &#13;
     var myStr = myData.toString(); &#13;
     var a = myStr.split("!")&#13;
     a[0]&#13;
      }&#13;
   }&#13;
   else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobName</property>
                                <expression name="expression" type="javascript">if (row._outer["RecordCount"]> 0){&#13;
&#13;
if (reportContext.getPersistentGlobalVariable("nodeLastBackup")){&#13;
&#13;
var myHash =  reportContext.getPersistentGlobalVariable("nodeLastBackup");&#13;
var myKey = row["join-col"]&#13;
var myData = myHash.get(myKey)&#13;
if (myData == null){&#13;
         nullString&#13;
   }&#13;
 else {  &#13;
     var myStr = myData.toString(); &#13;
     var a = myStr.split("!")&#13;
     a[1]&#13;
     //myStr.toString();&#13;
      }&#13;
  }&#13;
}&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobType</property>
                                <expression name="expression" type="javascript">if (row._outer["RecordCount"]> 0){&#13;
var myHash =  reportContext.getPersistentGlobalVariable("nodeLastBackup");&#13;
var myKey = row["join-col"]&#13;
var myData = myHash.get(myKey)&#13;
if (myData == null){&#13;
         nullString&#13;
   }&#13;
 else {  &#13;
     var myStr = myData.toString(); &#13;
     var a = myStr.split("!")&#13;
     a[2]&#13;
       }&#13;
  }&#13;
  else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobTypeStr</property>
                                <expression name="expression" type="javascript">if (row._outer["RecordCount"]> 0){&#13;
&#13;
switch (row["jobType"]) {&#13;
 //FILE BACKUP TYPES&#13;
 case "BACKUP_FILE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_BASE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_INCR":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_DIFR":&#13;
 "File"&#13;
 break;&#13;
 &#13;
   case "BACKUP_CATALOG":&#13;
 "File"&#13;
 break;&#13;
 &#13;
 //IMAGE&#13;
  case "BACKUP_IMAGE":&#13;
 "Image"&#13;
 break;&#13;
 //NDMP&#13;
  case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
  case "BACKUP_ADS":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_ADS_INCR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
   case "BACKUP_ADS_DIFR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
 &#13;
  case "BACKUP_BLOCK":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
 //SNAPVAULT &#13;
  case "BACKUP_SNAPVAULT":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_SNAPVAULT_INCR":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_VIRTUALIZATION":&#13;
  "Virtualization"&#13;
 break;&#13;
 &#13;
 //VIRTUALIZATION&#13;
    case "BACKUP_VIRTUALIZATION_INCR":&#13;
  "Virtualization"&#13;
 break;&#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
row["jobType"];&#13;
 }&#13;
}&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">DPXrecordCpunt</property>
                                <expression name="expression" type="javascript">row._outer["RecordCount"]</expression>
                                <property name="dataType">integer</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">nodeName</property>
                                <text-property name="displayName">nodeName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["nodeName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <property name="pageBreakInterval">10000</property>
                        <list-property name="sort">
                            <structure>
                                <expression name="key" type="javascript">row["name"].toUpperCase()</expression>
                                <property name="direction">asc</property>
                                <property name="strength">-1</property>
                            </structure>
                        </list-property>
                        <column id="6392"/>
                        <column id="6910"/>
                        <column id="6928"/>
                        <column id="6901"/>
                        <column id="6919"/>
                        <header>
                            <row id="5877">
                                <property name="backgroundColor">white</property>
                                <property name="color">#ECF1F7</property>
                                <cell id="5878">
                                    <property name="colSpan">5</property>
                                    <property name="rowSpan">1</property>
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <property name="paddingTop">20pt</property>
                                    <text name="NonCompliantJobsTableBanner1" id="5926">
                                        <property name="fontSize">1em</property>
                                        <property name="fontWeight">bold</property>
                                        <property name="color">#005596</property>
                                        <property name="marginTop">0pt</property>
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">0px</property>
                                        <property name="paddingBottom">0pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <method name="onCreate"><![CDATA[var myStr = reportContext.getMessage("DPxTT5", reportContext.getLocale());
this.helpText = myStr;
 
]]></method>
                                        <property name="contentType">html</property>
                                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;background:#4389bc; color:white; font-weight:bold; font-size:1.0em; width:100%;">
<VALUE-OF format="HTML">
var str1 =  reportContext.getMessage("DPxNodesWithoutBackup", reportContext.getLocale());
var str2 =  params["LagTimeThreshold"].value/86400;

if (str2 == 1) {
   str1+" "+str2+" "+reportContext.getMessage("Day", reportContext.getLocale());
   }
   else if (str2 > 1){ 
    str1+" "+str2+" "+reportContext.getMessage("Days", reportContext.getLocale());
    }
</VALUE-OF>
<div>




]]></text-property>
                                    </text>
                                </cell>
                            </row>
                        </header>
                        <group id="5909">
                            <property name="groupName">GroupByMaster</property>
                            <expression name="keyExpr" type="javascript">row["dpxId"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["dpxId"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="5910">
                                    <method name="onCreate"><![CDATA[myDetailRowCount = 0;]]></method>
                                    <property name="backgroundColor">#C4D4E6</property>
                                    <property name="color">#C4D4E6</property>
                                    <property name="verticalAlign">middle</property>
                                    <cell id="5912">
                                        <property name="colSpan">4</property>
                                        <property name="rowSpan">1</property>
                                        <text-data id="5927">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="paddingTop">4pt</property>
                                            <property name="paddingLeft">7px</property>
                                            <property name="paddingBottom">5px</property>
                                            <property name="paddingRight">0pt</property>
                                            <expression name="valueExpr" type="javascript">var myLabel=reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());&#13;
if (row._outer["RecordCount"] > 0){&#13;
var thisMaster=row["MasterServerName"]&#13;
}&#13;
&#13;
else {&#13;
  var map= reportContext.getPersistentGlobalVariable("map");&#13;
  var key  = params["MasterServer"].value;&#13;
  var thisMaster=map.get(key).toString();&#13;
}&#13;
&#13;
myLabel+" "+thisMaster</expression>
                                            <property name="contentType">auto</property>
                                        </text-data>
                                    </cell>
                                    <cell id="6913"/>
                                </row>
                                <row id="5929">
                                    <method name="onCreate"><![CDATA[myNotBackedUpNodeList = ""; //reset with every master server ]]></method>
                                    <property name="backgroundColor">#D8E5F1</property>
                                    <property name="color">#D8E5F1</property>
                                    <property name="verticalAlign">middle</property>
                                    <property name="height">0.2in</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row._outer["errorMessage"].search(/is not compatible/) >= 0 ){
true
}
else false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6389">
                                        <label id="6079">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="paddingTop">3pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">3pt</property>
                                            <text-property name="text" key="SourceNode">dpxId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6905">
                                        <label id="6083">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobName">jobName</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6923">
                                        <label id="6310">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobType">jobType</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6896">
                                        <label id="6081">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="LatestBackup">jobId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6914">
                                        <label id="6298">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="paddingRight">1cm</property>
                                            <property name="textAlign">right</property>
                                            <text-property name="text" key="Age"></text-property>
                                        </label>
                                    </cell>
                                </row>
                            </header>
                            <footer>
                                <row id="6657">
                                    <method name="onCreate"><![CDATA[myNotBackedUpNodeList = myNotBackedUpNodeList.replace(/^,/,""); //remove the leading comma
myNotBackedUpNodeList= myNotBackedUpNodeList.replace(/,/g,", "); //add a space after each remaining comma
myArray = myNotBackedUpNodeList.split(",")]]></method>
                                    <property name="height">0.15in</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (myDetailRowCount &lt; 1){&#13;
false &#13;
}&#13;
else true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6658">
                                        <property name="colSpan">5</property>
                                        <property name="rowSpan">1</property>
                                        <property name="borderBottomStyle">none</property>
                                        <property name="borderLeftStyle">none</property>
                                        <property name="borderRightStyle">none</property>
                                        <property name="borderTopColor">#C4D4E6</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">1px</property>
                                        <text-data name="AllGood" id="6937">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingLeft">7pt</property>
                                            <expression name="valueExpr">reportContext.getMessage("AllGood", reportContext.getLocale());</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                </row>
                                <row id="6946">
                                    <method name="onCreate"><![CDATA[myNotBackedUpNodeList = myNotBackedUpNodeList.replace(/^,/,""); //remove the leading comma
myNotBackedUpNodeList= myNotBackedUpNodeList.replace(/,/g,", "); //add a space after each remaining comma
myArray = myNotBackedUpNodeList.split(",")]]></method>
                                    <property name="height">0.15in</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row._outer["errorMessage"].search(/is not compatible/) >= 0 ){&#13;
false&#13;
}&#13;
else if (row._outer["msCount"] &lt; 1) {&#13;
true&#13;
}&#13;
else false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6947">
                                        <property name="colSpan">5</property>
                                        <property name="rowSpan">1</property>
                                        <property name="borderBottomStyle">none</property>
                                        <property name="borderLeftStyle">none</property>
                                        <property name="borderRightStyle">none</property>
                                        <property name="borderTopColor">#C4D4E6</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">1px</property>
                                        <text-data name="RegisteredMasterErrorHandling" id="6952">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">red</property>
                                            <expression name="valueExpr">var error = row._outer["errorMessage"]; &#13;
var errStr = "";&#13;
&#13;
  if(error.search(/No results/) >= 0){&#13;
        errStr = reportContext.getMessage("DPxError1", reportContext.getLocale());&#13;
        }&#13;
   else if  (error.search(/Failed to connect/) >= 0){ &#13;
        errStr = reportContext.getMessage("DPxError2", reportContext.getLocale());&#13;
        } &#13;
   else if  (error.search(/is not compatible/) >= 0){ &#13;
        errStr = reportContext.getMessage("DPxMTTable5a", reportContext.getLocale());&#13;
        }       &#13;
 &#13;
 errStr;</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                </row>
                            </footer>
                        </group>
                        <detail>
                            <row id="5886">
                                <method name="onPrepare"><![CDATA[//myDetailRowCount = 0;
]]></method>
                                <method name="onCreate"><![CDATA[///// Highlights //////////////////
myDetailRowCount++;
var jobId = this.getRowData().getExpressionValue("row[jobId]");
var myTreshold = parseInt(jobId);
now = new Date()/1000; 

//if (params["Node"].toString() == "(All)"){  //uncomment to show selected nodes
 if (true){  //set to false to show all backups if debugging 
 if (parseInt(jobId) + params["LagTimeThreshold"] > now){
  this.getStyle().display = "none" //hides lag time conformaing backups
     myDetailRowCount--;
   }
  }

 if (myDetailRowCount%2 == 0){ 
     this.getStyle().backgroundColor = "#ECF1F7"
         }
     
     else {
       this.getStyle().backgroundColor = "#FFFFFF"
       }
///////////////////////////////////////////



      ]]></method>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (row._outer["errorMessage"].search(/is not compatible/) >= 0 ){
true
}
else false</expression>
                                    </structure>
                                </list-property>
                                <cell id="6390">
                                    <data id="6891">
                                        <property name="paddingTop">2pt</property>
                                        <property name="paddingLeft">7pt</property>
                                        <property name="paddingBottom">2pt</property>
                                        <property name="resultSetColumn">nodeName</property>
                                    </data>
                                </cell>
                                <cell id="6906">
                                    <data id="6911">
                                        <property name="resultSetColumn">jobName</property>
                                    </data>
                                </cell>
                                <cell id="6924">
                                    <data id="6929">
                                        <property name="resultSetColumn">jobTypeStr</property>
                                    </data>
                                </cell>
                                <cell id="6897">
                                    <text-data id="6902">
                                        <expression name="valueExpr">if (row._outer["RecordCount"] > 0){&#13;
var myHash =  reportContext.getPersistentGlobalVariable("nodeLastBackup");&#13;
var myKey = row["join-col"]&#13;
&#13;
var myStr = myHash.get(myKey)&#13;
&#13;
if (myStr == null){&#13;
    reportContext.getMessage("NoDataInCatalog", reportContext.getLocale());&#13;
    //"never"&#13;
    }&#13;
    else {&#13;
     new Date(row["jobId"]*1000).toLocaleString();&#13;
    }&#13;
}   &#13;
 else  reportContext.getMessage("NoDataInCatalog", reportContext.getLocale());&#13;
    //"never"</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="6915">
                                    <data id="6920">
                                        <property name="paddingRight">1cm</property>
                                        <structure name="numberFormat">
                                            <property name="category">Unformatted</property>
                                        </structure>
                                        <property name="textAlign">right</property>
                                        <property name="resultSetColumn">Age</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="6494">
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (row._outer["msCount"] > 0) {&#13;
true&#13;
}&#13;
if (row._outer["RecordCount"] &lt; 1) {&#13;
true&#13;
}&#13;
else false</expression>
                                    </structure>
                                </list-property>
                                <cell id="6495">
                                    <property name="colSpan">5</property>
                                    <property name="rowSpan">1</property>
                                    <text-data name="NoMastersErrorHandler" id="6938">
                                        <property name="fontWeight">bold</property>
                                        <property name="color">red</property>
                                        <expression name="valueExpr">var errors = reportContext.getPersistentGlobalVariable("errors"); //msId2Error  array &#13;
var map = reportContext.getPersistentGlobalVariable("map"); //msId2name   hash&#13;
var outStr = "" ;&#13;
var master = reportContext.getMessage("MasterServer", reportContext.getLocale());&#13;
&#13;
var errStr = "";&#13;
for (i in errors){&#13;
  var a = errors[i].split(":")&#13;
  var myMaster = map.get(a[0]).toString()&#13;
  if(a[1].search(/No results/) >= 0){&#13;
        errStr = reportContext.getMessage("DPxError1", reportContext.getLocale());&#13;
        }&#13;
   else if  (a[1].search(/Failed to connect/) >= 0){ &#13;
        errStr = reportContext.getMessage("DPxError2", reportContext.getLocale());&#13;
        }     &#13;
   else if  (a[1].search(/Dpx registration is not found/) >= 0){&#13;
          errStr = reportContext.getMessage("DPxError3", reportContext.getLocale());&#13;
            }     &#13;
  //outStr = outStr+"&lt;br>"+"&lt;b> "+master+"&lt;/b> "+myMaster+"->"+errStr  &#13;
    outStr =  errStr;&#13;
 }&#13;
 outStr</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>

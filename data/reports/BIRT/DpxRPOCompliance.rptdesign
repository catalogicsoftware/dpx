<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.1.v201309091055 Build &lt;4.3.1.v20130917-1035></property>
    <simple-property-list name="includeResource">
        <value>reports</value>
    </simple-property-list>
    <list-property name="includeScripts">
        <property>Wraplines.js</property>
    </list-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[NoBackUpNodes = new Array();  //this array will populate NodeNotBackedUpDataSet 
GroupNodeList = "";// contains list of nodes in selected node group.
GroupNodeArray = new Array();]]></method>
    <method name="beforeFactory"><![CDATA[

 
   ]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">syncsort_library.rptlibrary</property>
            <property name="namespace">syncsort_library</property>
        </structure>
    </list-property>
    <list-property name="cssStyleSheets">
        <structure>
            <property name="fileName">syncsort.css</property>
            <property name="useExternalCss">false</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="report_displayname" id="791">
            <property name="hidden">true</property>
            <text-property name="helpText">View nodes and volumes that are protected using DPX Backup.</text-property>
            <text-property name="promptText">Protected Systems</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="report_category" id="792">
            <property name="hidden">true</property>
            <text-property name="helpText">Displays the protection status of volumes and qtrees using NetAppâ€™s SnapMirror or SnapVault software</text-property>
            <text-property name="promptText">Storage Protection</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="display_RPObasedOn" id="5671">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">Days</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="display_LagTimeThreshold" id="1206">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1 day</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <cascading-parameter-group name="Master_Server" id="6908">
            <property name="dataSet">MasterServerParam</property>
            <property name="dataSetMode">multiple</property>
            <parameters>
                <scalar-parameter name="MasterServer" id="6909">
                    <text-property name="displayName" key="MasterServer"></text-property>
                    <text-property name="promptText" key="DPxMasterServerNode"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">MasterServerParam</property>
                    <expression name="valueExpr">row["id"]</expression>
                    <expression name="labelExpr">row["name"]</expression>
                    <expression name="sortByColumn">dataSetRow["name"]</expression>
                    <property name="sortDirection">asc</property>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">false</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="NodeGroup" id="7984">
                    <text-property name="displayName" key="DPxMasterServerNodeGroup"></text-property>
                    <text-property name="promptText" key="DPxMasterServerNodeGroup"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">DPX_ClientNodeGroups</property>
                    <expression name="valueExpr">row["groupName"]</expression>
                    <expression name="labelExpr">row["groupName"]</expression>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">true</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="Node" id="7985">
                    <text-property name="promptText" key="DPxMasterServerClientNodes"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">NodeListParam</property>
                    <expression name="valueExpr">row["nodeName"]</expression>
                    <expression name="labelExpr">row["nodeName"]</expression>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">multi-value</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">true</property>
                    <structure name="format"/>
                </scalar-parameter>
            </parameters>
        </cascading-parameter-group>
        <scalar-parameter name="JobType" id="3741">
            <property name="hidden">false</property>
            <text-property name="helpText" key="SupportedBackupJobTypes"></text-property>
            <text-property name="promptText" key="JobType"></text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="sortBy">value</property>
            <property name="sortDirection">asc</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">(All)</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">BACKUP_FILE</property>
                    <property name="label">File</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_NDMP</property>
                    <property name="label">NDMP</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_BLOCK</property>
                    <property name="label">Block</property>
                </structure>
                <structure>
                    <property name="value">(All)</property>
                    <property name="label">(All)</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_CATALOG</property>
                    <property name="label">Catalog</property>
                </structure>
                <structure>
                    <property name="value">BACKUP_OBEX</property>
                    <property name="label">Oracle</property>
                </structure>
            </list-property>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="RPObasedOn" id="5656">
            <property name="hidden">true</property>
            <property name="valueType">dynamic</property>
            <property name="isRequired">false</property>
            <property name="dataSetName">RPOBasedOnDataSet</property>
            <expression name="valueExpr" type="javascript">row["RPObasedOn"]</expression>
            <expression name="labelExpr" type="javascript">row["DisplayText"]</expression>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">days</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="LagTimeThreshold" id="968">
            <text-property name="helpText" key="BackupTimeHelp"></text-property>
            <text-property name="promptText" key="RPOOlderThan">Days Since Last Backup:</text-property>
            <property name="valueType">static</property>
            <property name="sortBy">value</property>
            <property name="sortDirection">asc</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">86400</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">86400</property>
                    <property name="label">1 day</property>
                </structure>
                <structure>
                    <property name="value">172800</property>
                    <property name="label">2 days</property>
                </structure>
                <structure>
                    <property name="value">259200</property>
                    <property name="label">3 days</property>
                </structure>
                <structure>
                    <property name="value">345600</property>
                    <property name="label">4 days</property>
                </structure>
                <structure>
                    <property name="value">432000</property>
                    <property name="label">5 days</property>
                </structure>
                <structure>
                    <property name="value">518400</property>
                    <property name="label">6 days</property>
                </structure>
                <structure>
                    <property name="value">604800</property>
                    <property name="label">7 days</property>
                </structure>
                <structure>
                    <property name="value">2592000</property>
                    <property name="label">30 days</property>
                </structure>
                <structure>
                    <property name="value">1209600</property>
                    <property name="label">14 days</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ShowCompliantBackups" id="3742">
            <text-property name="promptText">Display Compliant Resources</text-property>
            <property name="valueType">static</property>
            <property name="dataType">boolean</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">False</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">check-box</property>
            <structure name="format"/>
        </scalar-parameter>
        <scalar-parameter name="ShowVolumeDetails" id="5669">
            <text-property name="promptText" key="ShowSourceVolumes"></text-property>
            <property name="valueType">static</property>
            <property name="dataType">boolean</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">False</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">check-box</property>
            <structure name="format"/>
        </scalar-parameter>
        <scalar-parameter name="ReportDays" id="6366">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">32760</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">7</property>
                </structure>
                <structure>
                    <property name="value">30</property>
                </structure>
                <structure>
                    <property name="value">60</property>
                </structure>
                <structure>
                    <property name="value">90</property>
                </structure>
                <structure>
                    <property name="value">180</property>
                </structure>
                <structure>
                    <property name="value">360</property>
                </structure>
                <structure>
                    <property name="value">32760</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="run_by" id="2598">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">DefaultUser</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="ScriptedArray" id="2356"/>
        <oda-data-source extensionID="com.syncsort.dp.xsb.reports.data.oda.rest" name="DPXprovider" id="3786">
            <property name="Base URI">http://report:8094/dpx</property>
            <property name="Auth URI">http://auth:8091/session</property>
            <property name="Username">sysadmin</property>
            <encrypted-property name="Password" encryptionID="base64">c3lzYWRtaW4K</encrypted-property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderDataSet" id="3787">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Compliant</property>
                    <expression name="expression">//using seconds rather than days as per RG.   &#13;
var now = new Date()/1000  &#13;
var ageInSecs = (now - row["jobId"])&#13;
//if some error then set false and bail out &#13;
if (row["errorMessage"].length > 0){&#13;
false&#13;
}&#13;
//parameter value is in seconds &#13;
else if (ageInSecs > params["LagTimeThreshold"].value){&#13;
false&#13;
}&#13;
else if (ageInSecs &lt;= params["LagTimeThreshold"].value){&#13;
true&#13;
}&#13;
//don't want false positives  &#13;
else {&#13;
false &#13;
}</expression>
                    <property name="dataType">boolean</property>
                </structure>
                <structure>
                    <property name="name">RecordCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["jobId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["jobId"] != ""</expression>
                </structure>
                <structure>
                    <property name="name">CompliantCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["name"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["Compliant"] == true</expression>
                </structure>
                <structure>
                    <property name="name">msCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNTDISTINCT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["dpxId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["dpxId"] != "n/a"</expression>
                </structure>
                <structure>
                    <property name="name">exception Count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">1</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["errorMessage"].length >0</expression>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobId</text-property>
                    <text-property name="heading">jobId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobName</text-property>
                    <text-property name="heading">jobName</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">srcNode</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">srcNode</text-property>
                    <text-property name="heading">srcNode</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">vmNode</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">vmNode</text-property>
                    <text-property name="heading">vmNode</text-property>
                </structure>
                <structure>
                    <property name="columnName">errorMessage</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <text-property name="heading">errorMessage</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">not-like</property>
                    <expression name="expr" type="javascript">row["jobType"]</expression>
                    <simple-property-list name="value1">
                        <value>"BACKUP_IMAGE"</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["jobType"]</expression>
                    <simple-property-list name="value1">
                        <value>/RESTORE/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">match</property>
                    <expression name="expr" type="javascript">//this filter removes VM's leaving vCenter tasks intact.  &#13;
if (row["jobType"]== "BACKUP_VIRTUALIZATION") {&#13;
  row["vmNode"]&#13;
  }&#13;
  else {&#13;
  "NA"&#13;
  }</expression>
                    <simple-property-list name="value1">
                        <value>/NA/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["jobType"]</expression>
                    <simple-property-list name="value1">
                        <value>/BACKUP_VIRTUALIZATION/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-in</property>
                    <expression name="expr" type="javascript">if (params["JobType"].toString() == "BACKUP_FILE" ) {&#13;
 row["jobType"]&#13;
 }</expression>
                    <simple-property-list name="value1">
                        <value>"BACKUP_OBEX"</value>
                        <value>"BACKUP_CATALOG"</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">// modified query supporting ECC-4909 filtering by node group and ms->nodeGroup->srcNode cascade.&#13;
 //modify to support job type parameter &#13;
 &#13;
var msId = params["MasterServer"].value;&#13;
var SourceNode = params["Node"].toString();&#13;
var reportDays = params["ReportDays"].value;&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
var resource = "volume";&#13;
var sep = ",";&#13;
msIdFilter = "{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}";&#13;
var JobTypeFilter = "";&#13;
var SourceNodeFilter = "";&#13;
&#13;
var resourceFilter =  "{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
//var instanceFlagFilter = "{\"property\":\"instanceFlag\",\"op\":\"=\",\"value\":\"latest\"}"&#13;
 var instanceFlagFilter = ",{\"property\":\"instanceFlag\",\"op\":\"=\",\"value\":\"lastgood\"}"&#13;
 var reportDaysFilter = ",{\"property\":\"reportDays\",\"op\":\"=\",\"value\":\""+reportDays+"\"}"&#13;
 SourceNode = SourceNode.replace(/,/g, " "); //want space delimited node list in query curly braces if multi selected. &#13;
&#13;
var queryStr = "";&#13;
queryStr += "[{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
if (msId == "(All)") {&#13;
   msId = "*"; &#13;
   }  &#13;
queryStr += ",{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}"&#13;
///////////////////////////////////////////////////////////////////////&#13;
var SourceNode = params["Node"].toString();  &#13;
 if(SourceNode != "(All)"){  //add source node filter if specified&#13;
    SourceNode=SourceNode.replace(/\(All\)\s/,"");  // remove "(All)" if exists in source node object  &#13;
    SourceNodeFilter = "{\"property\":\"srcNode\",\"op\":\"=\",\"value\":\""+SourceNode.replace(/,/g," ")+"\"}"  &#13;
    queryStr += sep+SourceNodeFilter&#13;
    }&#13;
  if ((nodeGroup != "(All)")&amp;&amp;(SourceNode == "(All)")) {   //add  node group filter only  if no specific node is selected &#13;
     queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}"  &#13;
     }&#13;
//////////////////////////////////////////&#13;
 if (params["JobType"].toString() != "(All)") {  //add Job Type filter&#13;
    var jobType = params["JobType"].toString(); &#13;
    jobType = jobType.replace(/,/g," ")                            &#13;
    queryStr += ",{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+jobType+"\"}"&#13;
     }  &#13;
  queryStr += instanceFlagFilter + reportDaysFilter + "]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">jobId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">jobName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">srcNode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">vmNode</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">errorMessage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Compliant</property>
                        <property name="dataType">boolean</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">RecordCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">CompliantCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">msCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">exception Count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[errors = new Array(); //this will hold error messages 
nodeStatus = new java.util.HashMap(); //holds compliance status of each client node. 

//reportContext.setPersistentGlobalVariable("errors", errors );
//reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus )

]]></method>
            <method name="onFetch"><![CDATA[//var errors = reportContext.getPersistentGlobalVariable("errors");
//var nodeStatus = reportContext.getPersistentGlobalVariable("nodeStatus");
  
  if (row["errorMessage"] != ""){
     var myStr  = row["dpxId"]+":"+row["errorMessage"] 
     errors.push(myStr);
      }
     
   else {
      var myKey  = row["dpxId"]+":"+row["srcNode"] 
      var status = "";
      if (row["Compliant"] == true ){
       status = "Yes"
      }
      else status = "No"
      
      nodeStatus.put(myKey,status);
      }   
  
  
  //reportContext.setPersistentGlobalVariable("errors", errors)  
  //reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus);]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">jobId</property>
                    <property name="nativeName">jobId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">jobName</property>
                    <property name="nativeName">jobName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">srcNode</property>
                    <property name="nativeName">srcNode</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">vmNode</property>
                    <property name="nativeName">vmNode</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">errorMessage</property>
                    <property name="nativeName">errorMessage</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{volumes[*]}(dpxId,jobId,jobName,name,srcNode,jobType,vmNode,errorMessage)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="MasterServerParam" id="3788">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">hostAddress</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">hostAddress</text-property>
                    <text-property name="heading">hostAddress</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">hostAddress</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[//beforeOpen
msName = new Array();]]></method>
            <method name="onFetch"><![CDATA[//onFetch()
if (row["id"] != "(All)" ){
   var key = row["id"];
   var value = row["name"];
   msName[key]=value 
   }]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">hostAddress</property>
                    <property name="nativeName">hostAddress</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{dpxs[*]}(name,hostAddress,id)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <script-data-set name="RPOBasedOnDataSet" id="5653">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">RPObasedOn</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">DisplayText</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">RPObasedOn</property>
                </structure>
                <structure>
                    <property name="columnName">DisplayText</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">RPObasedOn</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">DisplayText</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">ScriptedArray</property>
            <method name="open"><![CDATA[colNums = ["days","job"];
idx = 0;]]></method>
            <method name="fetch"><![CDATA[  if (idx < 2) {
    row["RPObasedOn"] = colNums[idx];
       if (idx == 0) {  
    row["RPObasedOn"] = "days";
    row["DisplayText"] = "Days"
    }
    
     if (idx == 1) {  
    row["RPObasedOn"] = "job";
    row["DisplayText"] = "Jobs"
    }
    
        idx++;
    return true;
}else{
    return false;
}   ]]></method>
        </script-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderSrcNodesKey" id="5847">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">join-col</property>
                    <expression name="expression">row["dpxId"]+":"+row["name"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">IsBackedUp</property>
                    <expression name="expression">var myHash =  reportContext.getPersistentGlobalVariable("nodeStatus");&#13;
var myKey = row["join-col"]&#13;
if (myHash != null){&#13;
myHash.get(myKey)&#13;
switch(myHash.get(myKey)) {&#13;
    case "Yes":&#13;
        true&#13;
        break;&#13;
    case "No": &#13;
        true&#13;
        break;&#13;
    case null: {&#13;
    NoBackUpNodes.push(myKey)&#13;
     false&#13;
     }&#13;
     break;&#13;
     &#13;
    default: &#13;
         false   &#13;
   }&#13;
  }</expression>
                    <property name="dataType">boolean</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">is-not-null</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                </structure>
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var msId = params["MasterServer"].value;&#13;
if (msId == "(All)") {&#13;
"[{\"property\":\"resource\", \"op\":\"=\",\"value\":\"node\"}]"&#13;
}&#13;
else {&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+params["MasterServer"].value+"\"},"+&#13;
"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"node\"}]"&#13;
}</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">join-col</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">IsBackedUp</property>
                        <property name="dataType">boolean</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeClose"><![CDATA[

]]></method>
            <method name="onFetch"><![CDATA[
 

]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(name,dpxId,nodeType)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="DPX_ClientNodeGroups" id="7986">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">groupName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">groupName</text-property>
                    <text-property name="heading">groupName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">recordCount</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">recordCount</text-property>
                    <text-property name="heading">recordCount</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var msId = params["MasterServer"].value&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},"+&#13;
"{\"property\":\"resource\",\"op\":\"=\",\"value\":\"catGroup\"}]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">recordCount</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">groupName</property>
                    <property name="nativeName">groupName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">recordCount</property>
                    <property name="nativeName">recordCount</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{groups[*]}(groupName,dpxId,recordCount)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderSrcNodes" id="7987">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">row["nodeName"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">nodeName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeName</text-property>
                    <text-property name="heading">nodeName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
                <structure>
                    <property name="columnName">groupName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">groupName</text-property>
                    <text-property name="heading">groupName</text-property>
                </structure>
            </list-property>
            <list-property name="filter"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var queryStr = "";&#13;
var msId = params["MasterServer"].value;&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
var resource = "catNode"&#13;
&#13;
//if (msId == "(All)") {&#13;
//   msId = "*"; &#13;
//   }&#13;
&#13;
&#13;
&#13;
queryStr += "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
&#13;
 if (nodeGroup != "(All)") {   //add node group filter   &#13;
     queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}"&#13;
     }&#13;
&#13;
     &#13;
queryStr+"]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">nodeName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">nodeName</property>
                    <property name="nativeName">nodeName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">groupName</property>
                    <property name="nativeName">groupName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(nodeName,dpxId,nodeType,groupName)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="NodeListParam" id="3946">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">row["name"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">rowCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["nodeName"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeName</text-property>
                    <text-property name="heading">nodeName</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">nodeType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">nodeType</text-property>
                    <text-property name="heading">nodeType</text-property>
                </structure>
                <structure>
                    <property name="columnName">groupName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">groupName</text-property>
                    <text-property name="heading">groupName</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">eq</property>
                    <expression name="expr" type="javascript">if (params["MasterServer"].value == "(All)"){&#13;
    if (row["groupName"] == "(All)" ) {&#13;
       true&#13;
       }&#13;
          else {&#13;
           false&#13;
           }&#13;
    }&#13;
else {  //(params["MasterServer"].value != "(All)")&#13;
&#13;
&#13;
   if (params["NodeGroup"].value == "(All)"){     &#13;
          if (row["groupName"] == "(All)" ) {   //only shows (All)&#13;
       true&#13;
       }&#13;
            else  false &#13;
      } &#13;
 &#13;
 &#13;
    &#13;
  else {    //params["NodeGroup"].value != "(All)" &#13;
       if (row["groupName"] == params["NodeGroup"].value) {&#13;
       true&#13;
       }&#13;
       else if (row["groupName"] == "(All)" ) {&#13;
       true&#13;
       } &#13;
    }&#13;
 }</expression>
                    <simple-property-list name="value1">
                        <value>true</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var queryStr = "";&#13;
var msId = params["MasterServer"].value;&#13;
var resource = "catNode";&#13;
//if (msId == "(All)") {&#13;
//   msId = "*"; &#13;
//   }&#13;
&#13;
var nodeGroup = params["NodeGroup"].value;&#13;
queryStr += "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"},{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
&#13;
 if (nodeGroup != "(All)") {   //add node group filter   &#13;
     queryStr += ",{\"property\":\"group\",\"op\":\"=\",\"value\":\""+nodeGroup+"\"}"&#13;
     }     &#13;
queryStr+"]"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">nodeName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">nodeType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">rowCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[//onFetch()
if (params["MasterServer"].value != "(All)"){
   if (params["NodeGroup"].value != "(All)"){ 
      if (row["nodeName"] != "(All)"){
          GroupNodeList += " "+ row["nodeName"]
          GroupNodeArray.push(row["nodeName"])
      }
   }
 }    
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">nodeName</property>
                    <property name="nativeName">nodeName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">nodeType</property>
                    <property name="nativeName">nodeType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">groupName</property>
                    <property name="nativeName">groupName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{nodes[*]}(name,nodeName,dpxId,nodeType,groupName)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="syncsort_master_page" id="933" extends="syncsort_library.syncsort_master_page">
            <property name="topMargin">0in</property>
            <overridden-values>
                <ref-entry baseId="56" name="company_logo" id="56"/>
                <ref-entry baseId="58" name="NewGrid" id="58"/>
                <ref-entry baseId="59" id="59"/>
                <ref-entry baseId="60" id="60"/>
                <ref-entry baseId="61" id="61"/>
                <ref-entry baseId="62" id="62"/>
                <ref-entry baseId="63" id="63"/>
                <ref-entry baseId="64" name="NewAutoText" id="64"/>
                <ref-entry baseId="65" id="65"/>
                <ref-entry baseId="66" name="NewText" id="66"/>
                <ref-entry baseId="67" id="67"/>
                <ref-entry baseId="68" name="NewAutoText1" id="68"/>
            </overridden-values>
        </simple-master-page>
    </page-setup>
    <body>
        <grid name="Title+ParamBox" id="373">
            <property name="width">100%</property>
            <column id="374"/>
            <row id="375">
                <cell id="376">
                    <property name="paddingTop">3pt</property>
                    <text name="PrimaryReportTitle" id="251">
                        <property name="style">primaryReportTitle</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<VALUE-OF>reportContext.getMessage("DPxRPOComplianceRepTitle",reportContext.getLocale());</VALUE-OF>
]]></text-property>
                    </text>
                    <text name="ReportProperties" id="845">
                        <property name="style">primaryReportSubTitle</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <property name="dataSet">NodeListParam</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">nodeName</property>
                                <text-property name="displayName">nodeName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["nodeName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">nodeType</property>
                                <text-property name="displayName">nodeType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["nodeType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">groupName</property>
                                <text-property name="displayName">groupName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["groupName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">SortKey</property>
                                <text-property name="displayName">SortKey</text-property>
                                <expression name="expression" type="javascript">dataSetRow["SortKey"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#4389bc"
this.getStyle().fontSize = "1.2em"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"
this.text = "Report Properties" ]]></method>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Report Properties]]></text-property>
                    </text>
                    <text name="ReportParameters" id="928">
                        <property name="dataSet">MasterServerParam</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">hostAddress</property>
                                <text-property name="displayName">hostAddress</text-property>
                                <expression name="expression" type="javascript">dataSetRow["hostAddress"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;color:black; background:white;  font-weight:normal; font-size:1.0em;width:100%;">
<dl>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportCreationDate", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF> new Date().toLocaleString()  </VALUE-OF>  </dd> <br>
		
	<dt> <b><VALUE-OF>reportContext.getMessage("ReportGeneratedBy", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF>params["run_by"].value  </VALUE-OF>  </dd> <br>
		<br>
	
<br>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportParameters", reportContext.getLocale());</VALUE-OF></b> </dt>
 <dd> <b><VALUE-OF>reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());</VALUE-OF></b> 

 <VALUE-OF> if (params["MasterServer"].value != "(All)") {
  var key  = params["MasterServer"].value;
  msName[key];
  } 
  else {params["MasterServer"].value} </VALUE-OF> </dd>

<!--------------------------------------------------Node Group------------------------------------------------>
 
 <dd>
 <VALUE-OF format="HTML"> 
   str1 = reportContext.getMessage("DPxMasterServerNodeGroup", reportContext.getLocale());
   str2 = params["NodeGroup"];
   str1.bold()+" "+str2 
 </VALUE-OF>
</dd>

<!--------------------------------------------------Nodes --------------------------------------------------->
<dd>
 <VALUE-OF format="HTML"> 
   if(params["Node"].length > 1){
   str1 = reportContext.getMessage("DPxMasterServerClientNodes", reportContext.getLocale());
   str2 = params["Node"].toString().replace(/\(All\),/,"");
   str2 = str2.replace(/,/g,", ")
   }
   else {
   str1 = reportContext.getMessage("DPxMasterServerClientNode", reportContext.getLocale());
   str2 = params["Node"].toString();
   }
   str1.bold()+" "+str2 
 </VALUE-OF>
</dd


<dd> <b><VALUE-OF>reportContext.getMessage("JobType", reportContext.getLocale());</VALUE-OF>: </b> <VALUE-OF format="HTML">
var jobTypeStr = params["JobType"].toString();

jobTypeStr = jobTypeStr.replace(/BACKUP_BLOCK/,"Block")
jobTypeStr = jobTypeStr.replace(/BACKUP_FILE/,"File")
jobTypeStr = jobTypeStr.replace(/BACKUP_NDMP/,"NDMP")
jobTypeStr = jobTypeStr.replace(/BACKUP_IMAGE/,"Image")
jobTypeStr = jobTypeStr.replace(/BACKUP_CATALOG/,"Catalog")
jobTypeStr = jobTypeStr.replace(/BACKUP_OBEX/,"Oracle")
jobTypeStr = jobTypeStr.replace(/BACKUP_VIRTUALIZATION/,"Virtualization")
jobTypeStr = jobTypeStr.replace(/\(All\),/,"")
jobTypeStr = jobTypeStr.replace(/,/g,", ")
</VALUE-OF> </dd> 

<dd>
 <VALUE-OF format="HTML"> 
 if (params["RPObasedOn"].value == "days"){
   str1 = reportContext.getMessage("RPOOlderThan", reportContext.getLocale());
   str2 = params["display_LagTimeThreshold"].value;
   str1.bold()+" "+str2 
   } 
 </VALUE-OF>
</dd>

<dd> <b> <VALUE-OF>reportContext.getMessage("DisplayCompliantResources", reportContext.getLocale());</VALUE-OF> </b> <VALUE-OF>if (params["ShowCompliantBackups"].value == false) {"No"} else {"Yes"}</VALUE-OF> </dd> 

<dd>
 <VALUE-OF format="HTML"> 
 //expose "Show Volume Details" param only if RPO is based on days
 if (params["RPObasedOn"].value == "days"){
   str3 = reportContext.getMessage("ShowSourceVolumes", reportContext.getLocale());
   str4 = "No";
  if (params["ShowVolumeDetails"].value == true) {
     str4 = "Yes"
     }
           str3.bold()+" "+str4 
   } 
 </VALUE-OF>
</dd>
<!--
<dd> <b> <VALUE-OF>reportContext.getMessage("ReportDays", reportContext.getLocale()); </VALUE-OF></b> <VALUE-OF>params["ReportDays"].value </VALUE-OF> </dd>
-->
<dl>
<div>


<H3>

</H3>
 ]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
        <grid name="Summary-Detail-Day" id="533">
            <property name="width">100%</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">if ( params["RPObasedOn"].value == "days" ) {&#13;
false&#13;
}&#13;
   else{ &#13;
   true&#13;
   }</expression>
                </structure>
            </list-property>
            <column id="534">
                <property name="width">10.541666666666666in</property>
            </column>
            <row id="6074">
                <cell id="6075">
                    <table name="MainTable" id="6076">
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="dataSet">dpxProviderDataSet</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">jobId</property>
                                <text-property name="displayName">jobId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">jobName</property>
                                <text-property name="displayName">jobName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">srcNode</property>
                                <text-property name="displayName">srcNode</text-property>
                                <expression name="expression" type="javascript">dataSetRow["srcNode"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">jobType</property>
                                <text-property name="displayName">jobType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">vmNode</property>
                                <text-property name="displayName">vmNode</text-property>
                                <expression name="expression" type="javascript">dataSetRow["vmNode"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">errorMessage</property>
                                <text-property name="displayName">errorMessage</text-property>
                                <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">Compliant</property>
                                <text-property name="displayName">Compliant</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Compliant"]</expression>
                                <property name="dataType">boolean</property>
                            </structure>
                            <structure>
                                <property name="name">RecordCount</property>
                                <text-property name="displayName">RecordCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["RecordCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">CompliantCount</property>
                                <text-property name="displayName">CompliantCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CompliantCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">msCount</property>
                                <text-property name="displayName">msCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">exception Count</property>
                                <text-property name="displayName">exception Count</text-property>
                                <expression name="expression" type="javascript">dataSetRow["exception Count"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">jobTypeStr</property>
                                <expression name="expression" type="javascript">switch (dataSetRow["jobType"]) {&#13;
 //FILE BACKUP TYPES&#13;
 case "BACKUP_FILE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_BASE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_INCR":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_DIFR":&#13;
 "File"&#13;
 break;&#13;
 &#13;
   case "BACKUP_CATALOG":&#13;
 "Catalog"&#13;
 break;&#13;
 &#13;
    case "BACKUP_OBEX":&#13;
 "Oracle"&#13;
 break;&#13;
 &#13;
 &#13;
 &#13;
 //IMAGE&#13;
  case "BACKUP_IMAGE":&#13;
 "Image"&#13;
 break;&#13;
 //NDMP&#13;
  case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
  case "BACKUP_ADS":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_ADS_INCR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
   case "BACKUP_ADS_DIFR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
 &#13;
  case "BACKUP_BLOCK":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
 //SNAPVAULT &#13;
  case "BACKUP_SNAPVAULT":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_SNAPVAULT_INCR":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_VIRTUALIZATION":&#13;
  "Virtualization"&#13;
 break;&#13;
 &#13;
 //VIRTUALIZATION&#13;
    case "BACKUP_VIRTUALIZATION_INCR":&#13;
  "Virtualization"&#13;
 break;&#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
dataSetRow["jobType"];&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">BackupRecordsPerMS</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>MSgroup</value>
                                </simple-property-list>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["jobId"]</expression>
                                    </structure>
                                </list-property>
                                <expression name="filterExpr" type="javascript">dataSetRow["jobId"] != ""</expression>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">DEBUG</property>
                                <expression name="expression" type="javascript">row["Compliant"]+":"+row["SrcNodesPerMsRC"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">LastBackup</property>
                                <expression name="expression" type="javascript">//LastBackup&#13;
//new Date(dataSetRow["jobId"]*1000).toUTCString();&#13;
new Date(dataSetRow["jobId"]*1000).toLocaleString();</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">ErrorMessageStr</property>
                                <expression name="expression" type="javascript">//DPxError1=No backup data were reported&#13;
//DPxError2=Failed to connect to DPX agent service&#13;
//DPxError3=No registered DPX Master Servers were found&#13;
&#13;
var myStr = dataSetRow["errorMessage"];&#13;
&#13;
if  (myStr.search(/Dpx registration is not found/) >= 0){ &#13;
        reportContext.getMessage("DPxError3", reportContext.getLocale());&#13;
        }&#13;
else if  (myStr.search(/Failed to connect/) >= 0){ &#13;
        reportContext.getMessage("DPxError2", reportContext.getLocale());&#13;
        }  &#13;
else if  (myStr.search(/No results/) >= 0){&#13;
        reportContext.getMessage("DPxError1", reportContext.getLocale());&#13;
        }       &#13;
 else if  (myStr.search(/is not compatible/) >= 0){&#13;
        reportContext.getMessage("DPxMTTable5a", reportContext.getLocale());&#13;
        }        &#13;
           &#13;
else  myStr</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">RecordsPerMsRC</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>MSgroup</value>
                                </simple-property-list>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["jobId"]</expression>
                                    </structure>
                                </list-property>
                                <expression name="filterExpr" type="javascript">dataSetRow["jobId"] != ""</expression>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">Age</property>
                                <expression name="expression" type="javascript">var d = new Date();&#13;
var now = d.getTime()/1000;&#13;
var age = (now - row["jobId"])&#13;
&#13;
function secondsToString(seconds)&#13;
{&#13;
var numdays = Math.floor(seconds / 86400); &#13;
var numhours = Math.floor((seconds % 86400) / 3600); &#13;
var numminutes = Math.floor(((seconds % 86400) % 3600) / 60); &#13;
var numseconds = ((seconds % 86400) % 3600) % 60;&#13;
&#13;
if (numdays &lt; 10) numdays = '0' + numdays; &#13;
if (numhours &lt; 10) numhours = '0' + numhours; &#13;
if (numminutes &lt; 10) numminutes = '0' + numminutes; &#13;
if (numseconds &lt; 10) numseconds = '0' + numseconds;&#13;
//return numdays + " " + numhours + ":" + numminutes + ":" + numseconds ;&#13;
return numdays + " " + numhours + ":" + numminutes;&#13;
}&#13;
secondsToString(age)</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">SrcNodesPerMsRC</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>MSgroup</value>
                                </simple-property-list>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["srcNode"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">SrcNodeErrorStr</property>
                                <expression name="expression" type="javascript">params["Node"].toString()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">DEBUG2</property>
                                <expression name="expression" type="javascript">var debugStr = dataSetRow["CompliantCount"]+":"+dataSetRow["RecordCount"]+":"+dataSetRow["exception Count"]&#13;
if (dataSetRow["RecordCount"] == dataSetRow["CompliantCount"] ) { //All backup records records are Compliant in this case &#13;
   //print DPxMTTable1=All backups are RPO Compliant&#13;
   reportContext.getMessage("DPxMTTable1", reportContext.getLocale())+" "+debugStr&#13;
   }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">srcNodeVM</property>
                                <expression name="expression" type="javascript">var SrcNodeParam = params["Node"].toString();&#13;
&#13;
if (row["jobType"] == "BACKUP_VIRTUALIZATION") {&#13;
	if (dataSetRow["vmNode"] != "NA"){&#13;
	dataSetRow["vmNode"]&#13;
	}&#13;
  else dataSetRow["srcNode"] &#13;
}&#13;
&#13;
else if (row["jobType"] != "BACKUP_VIRTUALIZATION") {&#13;
  dataSetRow["srcNode"];&#13;
  }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">nameVC</property>
                                <expression name="expression" type="javascript">if (dataSetRow["jobType"] == "BACKUP_VIRTUALIZATION"){&#13;
        myStr = "/"  &#13;
     } &#13;
 else if (dataSetRow["jobType"] == "BACKUP_SNAPVAULT"){&#13;
        if (dataSetRow["name"] == "ExpressDR"){&#13;
       myStr = "BMR"  &#13;
        }&#13;
       else myStr =dataSetRow["name"] &#13;
     }   &#13;
   &#13;
       &#13;
   else {&#13;
   myStr =dataSetRow["name"]&#13;
   }&#13;
   &#13;
   WrapLine(myStr,20,2)</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">DetailRecordsPerSrcNode</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>TableGroupSrcNode</value>
                                </simple-property-list>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <method name="onPrepare"><![CDATA[bannerCount = 0;
EmptyNodes = "";
CompliantNodes = "";]]></method>
                        <property name="pageBreakInterval">10000</property>
                        <column id="6145">
                            <property name="width">18%</property>
                        </column>
                        <column id="6280">
                            <list-property name="visibility">
                                <structure>
                                    <property name="format">all</property>
                                    <expression name="valueExpr" type="javascript">if (!params["ShowVolumeDetails"].value){&#13;
true &#13;
}&#13;
else false</expression>
                                </structure>
                            </list-property>
                            <property name="width">18%</property>
                        </column>
                        <column id="6146">
                            <property name="width">20%</property>
                        </column>
                        <column id="6147">
                            <property name="width">0.75in</property>
                        </column>
                        <column id="6296">
                            <property name="width">3in</property>
                        </column>
                        <column id="6148">
                            <property name="width">1.75in</property>
                        </column>
                        <header>
                            <row id="6077">
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">var NonCompliantCount = (row["RecordCount"] - row["CompliantCount"]);&#13;
if (!params["ShowCompliantBackups"].value){&#13;
false &#13;
}&#13;
else  {&#13;
if ((row["CompliantCount"] &lt; 1) &amp;&amp;  (NonCompliantCount > 0)){ &#13;
   true &#13;
   }&#13;
if ((row["CompliantCount"] &lt; 1) &amp;&amp;  (NonCompliantCount &lt; 1)){ &#13;
   false &#13;
   } &#13;
 if ((params["ShowCompliantBackups"].value) &amp;&amp;   (NonCompliantCount &lt; 1)){&#13;
   false&#13;
   } &#13;
     &#13;
else true&#13;
}</expression>
                                    </structure>
                                </list-property>
                                <cell id="6078">
                                    <property name="colSpan">6</property>
                                    <property name="rowSpan">1</property>
                                    <text name="NonCompliantNodesTableBanner1" id="6331">
                                        <property name="fontSize">1.1em</property>
                                        <property name="fontWeight">normal</property>
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">0pt</property>
                                        <property name="paddingBottom">0pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <method name="onCreate"><![CDATA[var myStr = reportContext.getMessage("DPxTT1", reportContext.getLocale());
this.helpText = myStr;
]]></method>
                                        <property name="contentType">html</property>
                                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;background:#4389bc; color:white; font-weight:bold; font-size:1.1em; width:100%;">
<VALUE-OF format="HTML">
reportContext.getMessage("DPxNodesNotInCompliance", reportContext.getLocale());
</VALUE-OF>
<div>
]]></text-property>
                                    </text>
                                </cell>
                            </row>
                            <row id="6356">
                                <property name="backgroundColor">white</property>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (row["RecordCount"] >  0){   //have valid records &#13;
   if (row["RecordCount"] == row["CompliantCount"]){&#13;
   false&#13;
   }&#13;
    else true &#13;
}&#13;
&#13;
//No Valid records &#13;
else   if (row["errorMessage"].search(/Dpx registration is not found/) >= 0){&#13;
    true&#13;
   }&#13;
else   if (row["errorMessage"].search(/Failed to connect/) >= 0){&#13;
    true&#13;
   }&#13;
else   if (row["errorMessage"].search(/No results were found/) >= 0){&#13;
    true&#13;
   }  &#13;
else   if (row["errorMessage"].search(/is not compatible/) >= 0){&#13;
    true&#13;
   } &#13;
 &#13;
   &#13;
else false</expression>
                                    </structure>
                                </list-property>
                                <cell id="6357">
                                    <property name="colSpan">6</property>
                                    <property name="rowSpan">1</property>
                                    <property name="borderBottomColor">#ECF1F7</property>
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">1px</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <text-data name="Empty Non Compliant Table Message Handler" id="6365">
                                        <property name="color">black</property>
                                        <property name="paddingLeft">7pt</property>
                                        <expression name="valueExpr">var nodes = params["Node"].toString().split(",");  &#13;
&#13;
if ((params["MasterServer"].value != "(All)") &amp;&amp; (params["Node"].toString() == "(All)") ) { &#13;
   GroupNodeList = GroupNodeList.replace(/\s/g,","); &#13;
   //nodes = GroupNodeList.split(",");&#13;
    nodes = GroupNodeArray.toString().split(","); ;&#13;
  }&#13;
&#13;
&#13;
var nodesLength = nodes.length; &#13;
     if ( nodesLength > 1) {&#13;
      var mkey  = params["MasterServer"].value;&#13;
      var myMaster = msName[mkey];&#13;
      //var EmptyNodes = ""&#13;
      //var CompliantNodes = "";&#13;
      var EmptyNodes = new Array();&#13;
      var CompliantNodes = new Array();&#13;
     //iterate through nodes and print appropriate compliance status message  &#13;
&#13;
     for (var i = 0; i &lt; nodesLength; i++) {&#13;
         var key = mkey+":"+nodes[i];&#13;
&#13;
         if (nodeStatus.get(key) == null){&#13;
         if (nodes[i].search(/All/) >= 0) continue; &#13;
         EmptyNodes.push(nodes[i]) ;  &#13;
         }&#13;
         else &#13;
         if (nodeStatus.get(key) == "Yes"){&#13;
         if (params["ShowCompliantBackups"].value == false){&#13;
         		if (nodes[i].search(/All/) >= 0) continue;&#13;
         		CompliantNodes.push(nodes[i]); &#13;
           }&#13;
         }&#13;
               &#13;
       } //we now have two strings ...(comma separated lists) EmptyNodes(no backups found) and compliant nodes &#13;
       &#13;
&#13;
    if ((CompliantNodes.length == 1 ) &amp;&amp; (EmptyNodes.length == 0)){     &#13;
        CompliantNodes.toString() +reportContext.getMessage("DPxMTTable7", reportContext.getLocale())&#13;
        }&#13;
    if ((CompliantNodes.length >1 ) &amp;&amp; (EmptyNodes.length == 0)){     &#13;
        CompliantNodes.toString() +" "+reportContext.getMessage("DPxMTTable7b", reportContext.getLocale())&#13;
        } &#13;
    if ((CompliantNodes.length == 1 ) &amp;&amp; (EmptyNodes.length > 0)){     &#13;
        CompliantNodes.toString()+reportContext.getMessage("DPxMTTable7", reportContext.getLocale())+"&lt;br>"+&#13;
        reportContext.getMessage("DPxMTTable6", reportContext.getLocale())+" "+EmptyNodes.toString(); &#13;
        }&#13;
   if ((CompliantNodes.length >1 ) &amp;&amp; (EmptyNodes.length > 0)){     &#13;
        CompliantNodes.toString()+reportContext.getMessage("DPxMTTable7b", reportContext.getLocale())+"&lt;br>"+&#13;
        reportContext.getMessage("DPxMTTable6", reportContext.getLocale())+" "+EmptyNodes.toString();   &#13;
        } &#13;
        /////////////////&#13;
          var myStr = "";&#13;
          if ((EmptyNodes) &amp;&amp; (EmptyNodes.length > 0)){&#13;
            myStr = reportContext.getMessage("DPxMTTable6", reportContext.getLocale())+" "+ EmptyNodes.toString()&#13;
            }&#13;
           if ((CompliantNodes) &amp;&amp; (CompliantNodes.length == 1)){  &#13;
            myStr += CompliantNodes.toString()+""+reportContext.getMessage("DPxMTTable7", reportContext.getLocale())&#13;
             }&#13;
            //if ((CompliantNodes) &amp;&amp; (CompliantNodes.length > 1)){&#13;
            if ((CompliantNodes) &amp;&amp; (CompliantNodes.length > 1)){&#13;
            myStr += CompliantNodes.toString()+reportContext.getMessage("DPxMTTable7b", reportContext.getLocale())&#13;
            } &#13;
          myStr.replace(/,/g,", ")  &#13;
        ////////////////&#13;
     }&#13;
 &#13;
 else {&#13;
 if (row["RecordCount"] >  0) {  //master servers are registered  &#13;
      var nonCompliantCount=row["RecordCount"]-row["CompliantCount"]      &#13;
      &#13;
      if (nonCompliantCount&lt; 1) { //All DPX nodes are RPO compliant &#13;
      reportContext.getMessage("DPxMTTable1", reportContext.getLocale())&#13;
      }&#13;
&#13;
if (row ["exception Count"] > 0 ) { //No Backup Instances were returned&#13;
     reportContext.getMessage("DPxMTTable5", reportContext.getLocale()) &#13;
    }  &#13;
&#13;
if (params["Node"].toString() != "(All)") { //is RPO Compliant&#13;
   reportContext.getMessage("Node", reportContext.getLocale())+" "+params["Node"].toString() +" "+reportContext.getMessage("RPOCompliant", reportContext.getLocale())&#13;
  }        &#13;
}&#13;
else if (params["Node"].toString() != "(All)") { //case: No Backup Instances were returned for specified node(s)&#13;
   reportContext.getMessage("DPxMTTable6", reportContext.getLocale())+" "+params["Node"].toString().replace(/,/g,", ") &#13;
   } &#13;
   &#13;
 else if (params["Node"].toString() == "(All)") { //case: No Backup Instances were returned for this master server&#13;
   reportContext.getMessage("DPxMTTable5", reportContext.getLocale()); &#13;
   }  &#13;
 }</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                            </row>
                        </header>
                        <group id="6158">
                            <property name="groupName">Compliant</property>
                            <expression name="keyExpr" type="javascript">row["Compliant"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">if (row["Compliant"]==true){&#13;
reportContext.getMessage("Compliant", reportContext.getLocale()); &#13;
}&#13;
else &#13;
reportContext.getMessage("NotCompliant", reportContext.getLocale());</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <list-property name="sort">
                                <structure>
                                    <expression name="key" type="javascript">row["Compliant"]</expression>
                                    <property name="direction">asc</property>
                                    <property name="strength">-1</property>
                                </structure>
                            </list-property>
                            <header>
                                <row id="6237">
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["RecordCount"] &lt;  1){   //have No valid records &#13;
   true&#13;
   }&#13;
&#13;
/////////////////&#13;
else if (params["ShowCompliantBackups"].value) {&#13;
    false &#13;
    }&#13;
    else {&#13;
       true&#13;
       }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6238">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                        <property name="color">black</property>
                                        <property name="borderBottomStyle">none</property>
                                        <property name="borderLeftStyle">none</property>
                                        <property name="borderRightStyle">none</property>
                                        <property name="borderTopStyle">none</property>
                                        <text name="CompliantNodesTableBanner" id="6248">
                                            <property name="fontSize">1.1em</property>
                                            <property name="fontWeight">normal</property>
                                            <property name="borderBottomStyle">none</property>
                                            <property name="borderLeftStyle">none</property>
                                            <property name="borderRightStyle">none</property>
                                            <property name="borderTopStyle">none</property>
                                            <property name="marginTop">10pt</property>
                                            <property name="paddingTop">0pt</property>
                                            <property name="paddingLeft">0pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <property name="paddingRight">0pt</property>
                                            <method name="onCreate"><![CDATA[var myStr = reportContext.getMessage("DPxTT1", reportContext.getLocale());
this.helpText = myStr;
]]></method>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<div style="padding:7px 7px;background:#4389bc; color:white; font-weight:bold; font-size:1.1em; width:100%;">
<VALUE-OF format="HTML">
if (row.Compliant == false) {
   reportContext.getMessage("DPxNodesNotInCompliance", reportContext.getLocale());
   }
else {
   reportContext.getMessage("DPxNodesInCompliance", reportContext.getLocale());
   }
</VALUE-OF>
<div>
]]></text-property>
                                        </text>
                                    </cell>
                                </row>
                                <row id="6188">
                                    <property name="backgroundColor">#D8E5F1</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6189">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                        <property name="color">black</property>
                                    </cell>
                                </row>
                            </header>
                        </group>
                        <group id="6202">
                            <property name="groupName">MSgroup</property>
                            <expression name="keyExpr" type="javascript">row["dpxId"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">var thisMasterId=row["dpxId"];&#13;
msName[thisMasterId];</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="6203">
                                    <property name="backgroundColor">#C4D4E6</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["errorMessage"].search(/Dpx registration is not found/) >= 0){&#13;
    true&#13;
   }&#13;
&#13;
else if (!row["Compliant"]) {&#13;
   false&#13;
   }&#13;
else if (params["ShowCompliantBackups"].value){&#13;
           if (row["Compliant"]) {&#13;
             false &#13;
             }&#13;
           } &#13;
           else {&#13;
               true  // if we want to show only non compliant masters in the non compliant table &#13;
               //false //false if we want to show all masters in the non compliant table&#13;
             }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6204">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                        <property name="paddingTop">4pt</property>
                                        <property name="paddingBottom">5pt</property>
                                        <text-data name="Ms Group header non compliant" id="5839">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="borderBottomStyle">none</property>
                                            <property name="borderLeftStyle">none</property>
                                            <property name="borderRightStyle">none</property>
                                            <property name="borderTopStyle">none</property>
                                            <property name="paddingLeft">7px</property>
                                            <method name="onCreate"><![CDATA[ ]]></method>
                                            <expression name="valueExpr">var mkey=row["dpxId"];&#13;
var thisMaster=msName[mkey]; &#13;
var compliant = row["Compliant"]&#13;
var myLabel=reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());&#13;
myLabel+" "+thisMaster //+" "+compliant</expression>
                                            <property name="contentType">auto</property>
                                        </text-data>
                                    </cell>
                                </row>
                                <row id="6226">
                                    <property name="backgroundColor">#D8E5F1</property>
                                    <property name="verticalAlign">middle</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (params["ShowVolumeDetails"].value){&#13;
    true&#13;
    }&#13;
    &#13;
else if (row["BackupRecordsPerMS"] == 0){&#13;
   true &#13;
   } &#13;
////&#13;
   &#13;
 else  if (!params["ShowCompliantBackups"].value){&#13;
           if (row["Compliant"]) {&#13;
            true &#13;
             }&#13;
           }  &#13;
 &#13;
/////&#13;
&#13;
else { &#13;
  false&#13;
  }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6227">
                                        <label id="6079">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text" key="SourceNode">dpxId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6273"/>
                                    <cell id="6228">
                                        <label id="6083">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobName">jobName</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6229">
                                        <label id="6089">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobType">jobType</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6289">
                                        <label id="6081">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="LatestBackup">jobId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6230">
                                        <label id="6298">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="Agehhmm"></text-property>
                                        </label>
                                    </cell>
                                </row>
                                <row id="6299">
                                    <property name="backgroundColor">#D8E5F1</property>
                                    <property name="verticalAlign">middle</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (!params["ShowVolumeDetails"].value){&#13;
    true&#13;
    }&#13;
    &#13;
else if (row["BackupRecordsPerMS"] == 0){&#13;
   true &#13;
   } &#13;
&#13;
   &#13;
 else  if (!params["ShowCompliantBackups"].value){&#13;
           if (row["Compliant"]) {&#13;
            true &#13;
             }&#13;
           }  &#13;
 &#13;
else { &#13;
  false&#13;
  }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6300">
                                        <label id="6308">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text" key="SourceNode">dpxId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6301">
                                        <label id="6085">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="SourceVolume">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6302">
                                        <label id="6309">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobName">jobName</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6303">
                                        <label id="6310">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="JobType">jobType</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6304">
                                        <label id="6311">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="LatestBackup">jobId</text-property>
                                        </label>
                                    </cell>
                                    <cell id="6305">
                                        <label id="6312">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">#005596</property>
                                            <text-property name="text" key="Agehhmm"></text-property>
                                        </label>
                                    </cell>
                                </row>
                            </header>
                            <footer>
                                <row id="6214">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if(row["errorMessage"] == ""){&#13;
  true&#13;
  }&#13;
  else{&#13;
     false&#13;
     }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6215">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                        <data id="6249">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">red</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <method name="onCreate"><![CDATA[if (reportContext.getPersistentGlobalVariable("isException") != ""){
//if (this.getValue().length >= 0){
   this.getStyle().fontWeight = "bold"
   //this.getStyle().color = "#005596"
   this.getStyle().color = "red"
   } ]]></method>
                                            <property name="resultSetColumn">ErrorMessageStr</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="6893">
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderTopColor">#4389BC</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">1px</property>
                                    <property name="height">0.15in</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if ((row["msCount"] == 0) &amp;&amp; (row["exception Count"] == 1)){&#13;
   true // Hide =, No masters registered in this case; &#13;
   }&#13;
else if (row["msCount"] == row["exception Count"]){&#13;
   true // Hide, failed to connect to single selected master server; &#13;
   }&#13;
&#13;
 else if ((EmptyNodes) &amp;&amp; (EmptyNodes.length > 0)){&#13;
                if (!row["Compliant"]){ //only show in non compliant group&#13;
                   false &#13;
                  }&#13;
    else true&#13;
    }&#13;
 &#13;
 else if ((CompliantNodes) &amp;&amp; (CompliantNodes.search(/,/) &lt; 0)){ &#13;
   false&#13;
   }&#13;
 else if ((CompliantNodes) &amp;&amp; (CompliantNodes.search(/,/) > 0)){ //more than one node selected here &#13;
         if (row["Compliant"]){&#13;
              false &#13;
              }&#13;
      else true&#13;
   }&#13;
&#13;
  else  true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6894">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                        <property name="borderBottomStyle">none</property>
                                        <property name="borderLeftStyle">none</property>
                                        <property name="borderRightStyle">none</property>
                                        <property name="borderTopStyle">none</property>
                                        <property name="paddingTop">1pt</property>
                                        <text-data name="Empty Compliant Table Message Handler" id="6900">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="borderBottomStyle">none</property>
                                            <property name="borderLeftStyle">none</property>
                                            <property name="borderRightStyle">none</property>
                                            <property name="borderTopStyle">none</property>
                                            <property name="paddingLeft">7pt</property>
                                            <expression name="valueExpr">var myStr = "";&#13;
var Num&#13;
if ((EmptyNodes) &amp;&amp; (EmptyNodes.length > 0)){&#13;
myStr = reportContext.getMessage("DPxMTTable6", reportContext.getLocale())+"  "+ EmptyNodes.toString()&#13;
}&#13;
else if ((CompliantNodes) &amp;&amp; (CompliantNodes.search(/,/) &lt; 0)){  //if comma then more than 1 node&#13;
myStr += CompliantNodes+""+reportContext.getMessage("DPxMTTable7", reportContext.getLocale())&#13;
}&#13;
else if ((CompliantNodes) &amp;&amp; (CompliantNodes.search(/,/) > 0)){&#13;
myStr += CompliantNodes+" "+reportContext.getMessage("DPxMTTable7b", reportContext.getLocale())&#13;
}&#13;
myStr.replace(/,/g,", ")</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                </row>
                            </footer>
                        </group>
                        <group id="6250">
                            <property name="groupName">TableGroupSrcNode</property>
                            <expression name="keyExpr" type="javascript">row["srcNode"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["srcNode"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <list-property name="sort">
                                <structure>
                                    <expression name="key" type="javascript">row["srcNode"].toUpperCase()</expression>
                                    <property name="direction">asc</property>
                                    <property name="strength">-1</property>
                                </structure>
                            </list-property>
                            <header>
                                <row id="6251">
                                    <method name="onPrepare"><![CDATA[HighlightArg = 0;]]></method>
                                    <method name="onCreate"><![CDATA[HighlightArg++;]]></method>
                                    <list-property name="highlightRules">
                                        <structure>
                                            <property name="operator">eq</property>
                                            <property name="backgroundColor">#ECF1F7</property>
                                            <expression name="testExpr" type="javascript">HighlightArg%2</expression>
                                            <simple-property-list name="value1">
                                                <value type="javascript">0</value>
                                            </simple-property-list>
                                        </structure>
                                    </list-property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (params["ShowVolumeDetails"].value){&#13;
   true&#13;
   }&#13;
 else if (row["BackupRecordsPerMS"] == 0){&#13;
   true&#13;
   }&#13;
 &#13;
else if (!row["Compliant"]) { //always show non compliant records &#13;
            false &#13;
             }&#13;
&#13;
 else  if (!params["ShowCompliantBackups"].value){&#13;
           if (row["Compliant"]) {&#13;
            true &#13;
             }&#13;
           }  &#13;
      &#13;
else {&#13;
   false&#13;
  }</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6252">
                                        <data id="6267">
                                            <property name="color">black</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="resultSetColumn">srcNodeVM</property>
                                        </data>
                                    </cell>
                                    <cell id="6274"/>
                                    <cell id="6253">
                                        <data id="6316">
                                            <property name="color">black</property>
                                            <property name="resultSetColumn">jobName</property>
                                        </data>
                                    </cell>
                                    <cell id="6254">
                                        <property name="color">black</property>
                                        <data id="6315">
                                            <property name="paddingRight">7pt</property>
                                            <property name="resultSetColumn">jobTypeStr</property>
                                        </data>
                                    </cell>
                                    <cell id="6290">
                                        <property name="color">black</property>
                                        <data id="6314">
                                            <property name="resultSetColumn">LastBackup</property>
                                        </data>
                                    </cell>
                                    <cell id="6255">
                                        <data id="6313">
                                            <property name="color">black</property>
                                            <property name="resultSetColumn">Age</property>
                                        </data>
                                    </cell>
                                </row>
                            </header>
                            <footer>
                                <row id="6259">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="6260">
                                        <property name="colSpan">6</property>
                                        <property name="rowSpan">1</property>
                                    </cell>
                                </row>
                            </footer>
                        </group>
                        <detail>
                            <row id="6104">
                                <list-property name="highlightRules">
                                    <structure>
                                        <property name="operator">eq</property>
                                        <property name="backgroundColor">#ECF1F7</property>
                                        <expression name="testExpr" type="javascript">row["RecordsPerMsRC"]%2</expression>
                                        <simple-property-list name="value1">
                                            <value type="javascript">0</value>
                                        </simple-property-list>
                                    </structure>
                                </list-property>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (!params["ShowVolumeDetails"].value){&#13;
   true&#13;
   } &#13;
&#13;
else if (row["jobId"] == ""){&#13;
 true&#13;
 }&#13;
&#13;
   &#13;
 else  if (!params["ShowCompliantBackups"].value){&#13;
           if (row["Compliant"]) {&#13;
            true &#13;
             }&#13;
           }  &#13;
 &#13;
&#13;
&#13;
else{ &#13;
 false&#13;
 }</expression>
                                    </structure>
                                </list-property>
                                <cell id="6105">
                                    <data id="6106">
                                        <property name="paddingLeft">7pt</property>
                                        <list-property name="visibility">
                                            <structure>
                                                <property name="format">all</property>
                                                <expression name="valueExpr" type="javascript">if (row["DetailRecordsPerSrcNode"] != 1) &#13;
   true&#13;
   else false</expression>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">srcNodeVM</property>
                                    </data>
                                </cell>
                                <cell id="6275">
                                    <data id="6112">
                                        <property name="paddingRight">10pt</property>
                                        <property name="resultSetColumn">nameVC</property>
                                    </data>
                                </cell>
                                <cell id="6107">
                                    <data id="6110">
                                        <property name="resultSetColumn">jobName</property>
                                    </data>
                                </cell>
                                <cell id="6109">
                                    <data id="6116">
                                        <property name="paddingRight">10pt</property>
                                        <property name="resultSetColumn">jobTypeStr</property>
                                    </data>
                                </cell>
                                <cell id="6291">
                                    <data id="6108">
                                        <property name="resultSetColumn">LastBackup</property>
                                    </data>
                                </cell>
                                <cell id="6111">
                                    <data id="6297">
                                        <property name="resultSetColumn">Age</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="6901">
                                <property name="borderBottomColor">#4389BC</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <property name="borderLeftStyle">none</property>
                                <property name="borderRightStyle">none</property>
                                <property name="borderTopStyle">none</property>
                                <cell id="6902"/>
                                <cell id="6903"/>
                                <cell id="6904"/>
                                <cell id="6905"/>
                                <cell id="6906"/>
                                <cell id="6907"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>

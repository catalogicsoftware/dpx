<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.1.v201309091055 Build &lt;4.3.1.v20130917-1035></property>
    <simple-property-list name="includeResource">
        <value>reports</value>
    </simple-property-list>
    <list-property name="includeScripts">
        <property>Wraplines.js</property>
        <property>ScaleBytes.js</property>
    </list-property>
    <list-property name="propertyBindings">
        <structure>
            <property name="name">queryText</property>
            <property name="id">4239</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[var FeatureRowCount = 0;
]]></method>
    <method name="beforeFactory"><![CDATA[

 
   ]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">syncsort_library.rptlibrary</property>
            <property name="namespace">syncsort_library</property>
        </structure>
    </list-property>
    <list-property name="cssStyleSheets">
        <structure>
            <property name="fileName">syncsort.css</property>
            <property name="useExternalCss">false</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="report_displayname" id="791">
            <property name="hidden">true</property>
            <text-property name="helpText">View nodes and volumes that are protected using DPX Backup.</text-property>
            <text-property name="promptText">Protected Systems</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="report_category" id="792">
            <property name="hidden">true</property>
            <text-property name="helpText">Displays the protection status of volumes and qtrees using NetAppâ€™s SnapMirror or SnapVault software</text-property>
            <text-property name="promptText">Storage Protection</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="MasterServer" id="3789">
            <property name="hidden">false</property>
            <text-property name="promptText" key="MasterServer"></text-property>
            <property name="valueType">dynamic</property>
            <property name="isRequired">true</property>
            <property name="dataSetName">MasterServerParam</property>
            <expression name="valueExpr" type="javascript">dataSetRow["id"]</expression>
            <expression name="labelExpr" type="javascript">dataSetRow["name"]</expression>
            <expression name="sortByColumn">dataSetRow["name"]</expression>
            <property name="sortDirection">asc</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">(All)</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ShowDetailView" id="3999">
            <property name="hidden">true</property>
            <text-property name="promptText" key="ShowDetailView"></text-property>
            <property name="valueType">static</property>
            <property name="dataType">boolean</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">False</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">check-box</property>
            <structure name="format"/>
        </scalar-parameter>
        <scalar-parameter name="run_by" id="2598">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">DefaultUser</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="ScriptedArray" id="2356"/>
        <oda-data-source extensionID="com.syncsort.dp.xsb.reports.data.oda.rest" name="DPXprovider" id="3786">
            <property name="Base URI">http://report:8094/dpx</property>
            <property name="Auth URI">http://auth:8091/session</property>
            <property name="Username">sysadmin</property>
            <encrypted-property name="Password" encryptionID="base64">c3lzYWRtaW4K</encrypted-property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="MasterServerParam" id="3788">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">(row["name"] != "(All)")</expression>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">hostAddress</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">hostAddress</text-property>
                    <text-property name="heading">hostAddress</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
                <structure>
                    <property name="columnName">serverInfo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">serverInfo</text-property>
                    <text-property name="heading">serverInfo</text-property>
                </structure>
                <structure>
                    <property name="columnName">canonicalName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">canonicalName</text-property>
                    <text-property name="heading">canonicalName</text-property>
                </structure>
                <structure>
                    <property name="columnName">count</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">count</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">hostAddress</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">serverInfo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">canonicalName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[var mapHost = new java.util.HashMap();
reportContext.setPersistentGlobalVariable("mapHost", mapHost);

var mapIPToHost = new java.util.HashMap();
reportContext.setPersistentGlobalVariable("mapIPToHost", mapIPToHost);

var mapserverInfoToHost = new java.util.HashMap();
reportContext.setPersistentGlobalVariable("mapserverInfoToHost", mapserverInfoToHost);]]></method>
            <method name="onFetch"><![CDATA[var mapHost = reportContext.getPersistentGlobalVariable("mapHost");
var mapserverInfoToHost = reportContext.getPersistentGlobalVariable("mapserverInfoToHost");
var hkey = row["id"]
mapHost.put(hkey,row["name"])
var a = row["serverInfo"].split("/");
mapserverInfoToHost.put(hkey,a[1]);
reportContext.setPersistentGlobalVariable("mapHost", mapHost)
reportContext.setPersistentGlobalVariable("mapserverInfoToHost", mapserverInfoToHost);


var mapIPToHost = reportContext.getPersistentGlobalVariable("mapIPToHost");
var hkey = row["hostAddress"]
mapIPToHost.put(hkey,row["name"])
reportContext.setPersistentGlobalVariable("mapHost", mapIPToHost)



]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">hostAddress</property>
                    <property name="nativeName">hostAddress</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">serverInfo</property>
                    <property name="nativeName">serverInfo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">canonicalName</property>
                    <property name="nativeName">canonicalName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{dpxs[*]}(name,hostAddress,id,serverInfo,canonicalName)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="MasterServerLicenseQuery" id="4239">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">ViolationCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["isLicenseViolation"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">(row["isLicenseViolation"] == true) &amp;&amp; (row["GroupHeader"] == true)</expression>
                </structure>
                <structure>
                    <property name="name">LicensedDataType</property>
                    <expression name="expression">var myStr = row["capacityCategoryorComponentFeature"];&#13;
&#13;
if(row["licenseModel"] == "Capacity-based License Model" &amp;&amp; myStr != ""){&#13;
   if (myStr == "File Backup Jobs"){"File-Level Protection"}&#13;
   if (row["name"].search(/18 TB increments/) >=0){&#13;
          // "NDMP Interface ("+row["name"]+")" &#13;
           "NDMP Interface 18 TB increments over 36 TB"     &#13;
        }    &#13;
     else {&#13;
     if (myStr == null) {""}&#13;
     else myStr&#13;
     }&#13;
}&#13;
&#13;
&#13;
 else if(row["licenseModel"] == "Component-based License Model"){&#13;
       &#13;
       if (row["name"].search(/18 TB increments/) >=0){&#13;
               "NDMP Interface 18 TB increments over 36 TB"            &#13;
        }&#13;
       else if (row["name"].search(/^Slots/) >=0){&#13;
                "Jukebox "+row["name"]           &#13;
        }&#13;
&#13;
&#13;
   else if (row["name"].search(/clean slot/i) >=0){&#13;
    if (row["capacityCategoryorComponentFeature"] == "TAPE LIBRARY/JUKEBOX"){&#13;
    var a = row["name"].split(":");&#13;
    var b = a[3].replace( /\)/,"");&#13;
    &#13;
    if (b &lt;= 10) "Jukebox Slots   1 -   10";&#13;
    else if (b &lt;= 25) "Jukebox Slots  11 -   25";&#13;
    else if (b &lt;= 50) "Jukebox Slots  26 -   50";&#13;
    else if(b &lt;= 100) "Jukebox Slots  51 -  100";&#13;
    else if(b &lt;= 175) "Jukebox Slots 101 -  175";&#13;
    else if(b &lt;= 250) "Jukebox Slots 176 -  250";&#13;
    else if(b &lt;= 500) "Jukebox Slots 251 -  500";&#13;
    else if(b &lt;= 750) "Jukebox Slots 501 -  750";&#13;
    else if(b &lt;= 1000) "Jukebox Slots > 750";&#13;
    else if  (b > 1000) "Jukebox Slots 250 Incr (> 1000 slots)"&#13;
    else "Unhandled Jukebox Type"&#13;
     }&#13;
     if (row["capacityCategoryorComponentFeature"] == "SAN Jukeboxes"){ &#13;
      "SAN Jukeboxes" &#13;
     }&#13;
    }&#13;
    &#13;
    else if (row["name"].search(/250 Incr/) >=0){&#13;
      "Jukebox Slots 250 Incr (> 1000 slots)"&#13;
     }&#13;
    else if (row["capacityCategoryorComponentFeature"] == "UNIX Nodes"||"Windows/Linux/Netware"){&#13;
     row["capacityCategoryorComponentFeature"];    &#13;
    }&#13;
    &#13;
    else row["name"]   &#13;
   }</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">KeyLength</property>
                    <expression name="expression">var myStr = row["licenseKey"];&#13;
if(myStr.length > 0) {&#13;
   myStr.length&#13;
  }&#13;
  else null</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">GroupHeader</property>
                    <expression name="expression">// JavaScript Group Header&#13;
if(row["LicensedDataType"] == row["name"]) {&#13;
 true&#13;
}&#13;
else if(row["name"] == "NDMP Interface (All)"){&#13;
 true&#13;
}&#13;
else if(row["name"].search(/Block Level/)>= 0){&#13;
true&#13;
}&#13;
else if(row["componentName"] == "SAN Jukeboxes"){&#13;
true&#13;
}&#13;
// ECSUST-206&#13;
else if (row["capacityCategoryorComponentFeature"] == "TAPE LIBRARY/JUKEBOX"){&#13;
  if (row["componentType"] == "TAPE LIBRARY/JUKEBOX" ) {&#13;
    true&#13;
    }&#13;
&#13;
    else false&#13;
}&#13;
// ECSUST-206 ends&#13;
 else if (row["name"] == "File Backup Jobs") {&#13;
    if (row["componentType"] == "" ) {&#13;
    true&#13;
  }&#13;
 } &#13;
else false</expression>
                    <property name="dataType">boolean</property>
                </structure>
                <structure>
                    <property name="name">indentation</property>
                    <expression name="expression">var componentType = row["componentType"]&#13;
var feature = row["LicensedDataType"] &#13;
  &#13;
if (componentType.search(/JOB/ >= 0 )) {&#13;
 "0px"&#13;
}&#13;
&#13;
if (componentType.search(/NODE/) >= 0) {&#13;
 "15px"&#13;
}&#13;
&#13;
if (componentType == "DISK") { &#13;
  if  (feature == "SAN Devices") {&#13;
  "45px"&#13;
  }&#13;
  else "30px"&#13;
   }&#13;
&#13;
 else "30px"</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">msCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNTDISTINCT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["dpxId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["dpxId"] != "(All)"</expression>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">consumedCount</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">consumedCount</text-property>
                    <text-property name="heading">consumedCount</text-property>
                </structure>
                <structure>
                    <property name="columnName">licensedCount</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">licensedCount</text-property>
                    <text-property name="heading">licensedCount</text-property>
                </structure>
                <structure>
                    <property name="columnName">consumedCapacityGB</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">consumedCapacityGB</text-property>
                    <text-property name="heading">consumedCapacityGB</text-property>
                </structure>
                <structure>
                    <property name="columnName">consumedPercent</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">consumedPercent</text-property>
                    <text-property name="heading">consumedPercent</text-property>
                </structure>
                <structure>
                    <property name="columnName">licensedCapacityGB</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">licensedCapacityGB</text-property>
                    <text-property name="heading">licensedCapacityGB</text-property>
                </structure>
                <structure>
                    <property name="columnName">enterpriseHostInfo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">enterpriseHostInfo</text-property>
                    <text-property name="heading">enterpriseHostInfo</text-property>
                </structure>
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">licenseModel</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">licenseModel</text-property>
                    <text-property name="heading">licenseModel</text-property>
                </structure>
                <structure>
                    <property name="columnName">capacityCategoryorComponentFeature</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">capacityCategoryorComponentFeature</text-property>
                    <text-property name="heading">capacityCategoryorComponentFeature</text-property>
                </structure>
                <structure>
                    <property name="columnName">licenseKey</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">licenseKey</text-property>
                    <text-property name="heading">licenseKey</text-property>
                </structure>
                <structure>
                    <property name="columnName">licenseExpirationDay</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">licenseExpirationDay</text-property>
                    <text-property name="heading">licenseExpirationDay</text-property>
                </structure>
                <structure>
                    <property name="columnName">isLicenseViolation</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">isLicenseViolation</text-property>
                    <text-property name="heading">isLicenseViolation</text-property>
                </structure>
                <structure>
                    <property name="columnName">componentName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">componentName</text-property>
                    <text-property name="heading">componentName</text-property>
                </structure>
                <structure>
                    <property name="columnName">componentType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">componentType</text-property>
                    <text-property name="heading">componentType</text-property>
                </structure>
                <structure>
                    <property name="columnName">isEvaluationKey</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">isEvaluationKey</text-property>
                    <text-property name="heading">isEvaluationKey</text-property>
                </structure>
                <structure>
                    <property name="columnName">errorMessage</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <text-property name="heading">errorMessage</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["id"]</expression>
                    <simple-property-list name="value1">
                        <value>/Dt/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">if (row["licenseModel"] == "Component-based License Model"){row["capacityCategoryorComponentFeature"]}</expression>
                    <simple-property-list name="value1">
                        <value>/File Backup Jobs/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>/not counted/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">if (row["licenseModel"] == "Component-based License Model"){row["capacityCategoryorComponentFeature"]}</expression>
                    <simple-property-list name="value1">
                        <value>/NDMP Backup Jobs/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">if (row["licenseModel"] == "Component-based License Model"){row["capacityCategoryorComponentFeature"]}</expression>
                    <simple-property-list name="value1">
                        <value>/Replication/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">if (row["licenseModel"] == "Capacity-based License Model"){row["componentType"]}</expression>
                    <simple-property-list name="value1">
                        <value>/DISK/</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">not-match</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>/NDMP Interface \(All\)/</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var MsStr = params["MasterServer"].toString()&#13;
if(params["ShowDetailView"].value == false)&#13;
var view = "Summary";&#13;
else&#13;
var view = "Detail";&#13;
//view param is hidden, defaulting to Summary&#13;
if (MsStr == "(All)"){&#13;
 "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+MsStr+"\"},{\"property\":\"resource\",\"op\":\"=\",\"value\":\"license\"},{\"property\":\"infoType\", \"op\":\"=\",\"value\":\""+view+"\"}]"&#13;
 }&#13;
 else {&#13;
   MsStr=MsStr.replace(/,/g," ")&#13;
   MsStr=MsStr.replace(/\(All\)\s*/,""); //remove "(All)" from MsStr string if exists in multi value string. &#13;
  "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+MsStr+"\"},"+&#13;
 "{\"property\":\"resource\", \"op\":\"=\",\"value\":\"license\"},{\"property\":\"infoType\", \"op\":\"=\",\"value\":\""+view+"\"}]"&#13;
 }</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">consumedCount</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">licensedCount</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">consumedCapacityGB</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">consumedPercent</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">licensedCapacityGB</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">enterpriseHostInfo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">licenseModel</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">capacityCategoryorComponentFeature</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">licenseKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">licenseExpirationDay</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">isLicenseViolation</property>
                        <property name="dataType">boolean</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">componentName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">componentType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">isEvaluationKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">errorMessage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">ViolationCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">LicensedDataType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">KeyLength</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">GroupHeader</property>
                        <property name="dataType">boolean</property>
                    </structure>
                    <structure>
                        <property name="position">23</property>
                        <property name="name">indentation</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">24</property>
                        <property name="name">msCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[var map = new java.util.HashMap();
reportContext.setPersistentGlobalVariable("map", map);]]></method>
            <method name="onFetch"><![CDATA[var map = reportContext.getPersistentGlobalVariable("map");
  if (row["isEvaluationKey"] == "true"){
     var hkey = row["dpxId"]+"lk" 
     map.put(hkey,"Evaluation")
     }
  if (row["isEvaluationKey"] == "false"){
     var hkey = row["dpxId"]+"lk" 
     map.put(hkey,row["licenseModel"])
     }


   if (row["licenseExpirationDay"] > 0) {
     var hkey = row["dpxId"]+"le"
     map.put(hkey,row["licenseExpirationDay"]+" days")
     }

    reportContext.setPersistentGlobalVariable("map", map)



]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">consumedCount</property>
                    <property name="nativeName">consumedCount</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">licensedCount</property>
                    <property name="nativeName">licensedCount</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">consumedCapacityGB</property>
                    <property name="nativeName">consumedCapacityGB</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">consumedPercent</property>
                    <property name="nativeName">consumedPercent</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">licensedCapacityGB</property>
                    <property name="nativeName">licensedCapacityGB</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">enterpriseHostInfo</property>
                    <property name="nativeName">enterpriseHostInfo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">licenseModel</property>
                    <property name="nativeName">licenseModel</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">capacityCategoryorComponentFeature</property>
                    <property name="nativeName">capacityCategoryorComponentFeature</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">licenseKey</property>
                    <property name="nativeName">licenseKey</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">licenseExpirationDay</property>
                    <property name="nativeName">licenseExpirationDay</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">isLicenseViolation</property>
                    <property name="nativeName">isLicenseViolation</property>
                    <property name="dataType">boolean</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">15</property>
                    <property name="name">componentName</property>
                    <property name="nativeName">componentName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">16</property>
                    <property name="name">componentType</property>
                    <property name="nativeName">componentType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">17</property>
                    <property name="name">isEvaluationKey</property>
                    <property name="nativeName">isEvaluationKey</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">18</property>
                    <property name="name">errorMessage</property>
                    <property name="nativeName">errorMessage</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{licenses[*]}(id,name,consumedCount,licensedCount,consumedCapacityGB,consumedPercent,licensedCapacityGB,enterpriseHostInfo,dpxId,licenseModel,capacityCategoryorComponentFeature,licenseKey,licenseExpirationDay,isLicenseViolation,componentName,componentType,isEvaluationKey,errorMessage)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="syncsort_master_page" id="933" extends="syncsort_library.syncsort_master_page">
            <property name="topMargin">0in</property>
            <overridden-values>
                <ref-entry baseId="56" name="company_logo" id="56"/>
                <ref-entry baseId="58" name="NewGrid" id="58"/>
                <ref-entry baseId="59" id="59"/>
                <ref-entry baseId="60" id="60"/>
                <ref-entry baseId="61" id="61"/>
                <ref-entry baseId="62" id="62"/>
                <ref-entry baseId="63" id="63"/>
                <ref-entry baseId="64" name="NewAutoText" id="64"/>
                <ref-entry baseId="65" id="65"/>
                <ref-entry baseId="66" name="NewText" id="66"/>
                <ref-entry baseId="67" id="67"/>
                <ref-entry baseId="68" name="NewAutoText1" id="68"/>
            </overridden-values>
        </simple-master-page>
    </page-setup>
    <body>
        <grid name="Title+ParamBox" id="373">
            <property name="height">2.09375in</property>
            <column id="374"/>
            <row id="375">
                <property name="height">2.09375in</property>
                <cell id="376">
                    <property name="paddingTop">3pt</property>
                    <text name="PrimaryReportTitle" id="251">
                        <property name="style">primaryReportTitle</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<VALUE-OF>reportContext.getMessage("DPxLicenseRepTitle",reportContext.getLocale());</VALUE-OF>
]]></text-property>
                    </text>
                    <text name="ReportProperties" id="845">
                        <property name="style">primaryReportSubTitle</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#4389bc"
this.getStyle().fontSize = "1.2em"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"
this.text = "Report Properties" ]]></method>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<VALUE-OF>reportContext.getMessage("ReportProperties",reportContext.getLocale());</VALUE-OF>]]></text-property>
                    </text>
                    <table id="4979">
                        <property name="dataSet">MasterServerParam</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">hostAddress</property>
                                <text-property name="displayName">hostAddress</text-property>
                                <expression name="expression" type="javascript">dataSetRow["hostAddress"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="4992"/>
                        <column id="4993"/>
                        <column id="4994"/>
                        <header>
                            <row id="4980">
                                <property name="height">0.2708333333333333in</property>
                                <cell id="4981">
                                    <label id="4995">
                                        <text-property name="text">name</text-property>
                                    </label>
                                </cell>
                                <cell id="4982">
                                    <label id="4997">
                                        <text-property name="text">id</text-property>
                                    </label>
                                </cell>
                                <cell id="4983">
                                    <label id="4999">
                                        <text-property name="text">hostAddress</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4984">
                                <cell id="4985">
                                    <data id="4996">
                                        <property name="resultSetColumn">name</property>
                                    </data>
                                </cell>
                                <cell id="4986">
                                    <data id="4998">
                                        <property name="resultSetColumn">id</property>
                                    </data>
                                </cell>
                                <cell id="4987">
                                    <data id="5000">
                                        <property name="resultSetColumn">hostAddress</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4988">
                                <cell id="4989"/>
                                <cell id="4990"/>
                                <cell id="4991"/>
                            </row>
                        </footer>
                    </table>
                    <text name="ReportParameters" id="928">
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;color:black; background:white;  font-weight:normal; font-size:1.0em;width:100%;">
<dl>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportCreationDate", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF> new Date().toLocaleString()  </VALUE-OF>  </dd> <br>
		
	<dt> <b><VALUE-OF>reportContext.getMessage("ReportGeneratedBy", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF>params["run_by"].value  </VALUE-OF>  </dd> <br>
		<br>
	
<br>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportParameters", reportContext.getLocale());</VALUE-OF></b> </dt>
<dd> <b><VALUE-OF format="HTML">
if (params["MasterServer"].toString() == "(All)"){
   reportContext.getMessage("MasterServers", reportContext.getLocale());
   }
   else {
   var numSrvrs = params["MasterServer"].length;
   if (numSrvrs > 1){ 
   reportContext.getMessage("MasterServers", reportContext.getLocale());
     }
     else reportContext.getMessage("MasterServer", reportContext.getLocale());  
   }
</VALUE-OF></b> 
     

<VALUE-OF format="HTML"> 
  var numSrvrs = params["MasterServer"].length;
  var map = reportContext.getPersistentGlobalVariable("mapHost");
  var key  = params["MasterServer"].toString();
  var strOut = ""; 
  var a = params["MasterServer"].toString().split(",")
     for(var i = 0; i < a.length; i++){
     key = a[i];
     
     if (i == 0 ){
     var sepchar = "";
     }
     else {
     if (map.get(a[i]).search(/All/) >= 0) continue; 
     sepchar = ", ";
     }
     
     strOut = map.get(key)+sepchar+strOut

     }
     strOut
</VALUE-OF> </dd>
<!-- Comment out detail view until detail data for NDMP and Capacity licensed features are fixed in back end
<dd> <b> <VALUE-OF>reportContext.getMessage("ShowDetailView", reportContext.getLocale());</VALUE-OF></b> <VALUE-OF>if (params["ShowDetailView"].value.toString() == "false") {"No"} else {"Yes"}</VALUE-OF>
</dd>
end of commented out stuff-->
<dl>
<div>
]]></text-property>
                    </text>
                    <table name="LicenseStatus" id="4479">
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="width">100%</property>
                        <property name="dataSet">MasterServerLicenseQuery</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">enterpriseHostInfo</property>
                                <text-property name="displayName">enterpriseHostInfo</text-property>
                                <expression name="expression" type="javascript">dataSetRow["enterpriseHostInfo"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">licenseModel</property>
                                <text-property name="displayName">licenseModel</text-property>
                                <expression name="expression" type="javascript">dataSetRow["licenseModel"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">capacityCategoryorComponentFeature</property>
                                <text-property name="displayName">capacityCategoryorComponentFeature</text-property>
                                <expression name="expression" type="javascript">dataSetRow["capacityCategoryorComponentFeature"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">GroupHeaderText</property>
                                <expression name="expression" type="javascript">var mapHostVar = reportContext.getPersistentGlobalVariable("mapHost");&#13;
var Title = reportContext.getMessage("DPxMasterServer", reportContext.getLocale()); &#13;
var masterServer = reportContext.getMessage("MasterServer", reportContext.getLocale()); &#13;
mapHostVar = mapHostVar.get(dataSetRow["dpxId"]);&#13;
if (mapHostVar == null){&#13;
Title&#13;
} &#13;
else {&#13;
masterServer+" "+mapHostVar&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">ViolationCount</property>
                                <text-property name="displayName">ViolationCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["ViolationCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">ViolationCountStr</property>
                                <expression name="expression" type="javascript">if (row["ViolationCount"] > 1) {&#13;
row["ViolationCount"]+" License Violations detected" &#13;
} &#13;
else if (row["ViolationCount"] == 1) {&#13;
row["ViolationCount"]+" License Violation detected" &#13;
}&#13;
else {&#13;
"No License Violations detected"&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">licenseKey</property>
                                <text-property name="displayName">licenseKey</text-property>
                                <expression name="expression" type="javascript">dataSetRow["licenseKey"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">licenseExpirationDay</property>
                                <text-property name="displayName">licenseExpirationDay</text-property>
                                <expression name="expression" type="javascript">dataSetRow["licenseExpirationDay"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">LicensedDataType</property>
                                <text-property name="displayName">LicensedDataType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["LicensedDataType"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">KeyLength</property>
                                <expression name="expression" type="javascript">dataSetRow["KeyLength"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">GroupCount</property>
                                <property name="dataType">integer</property>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["licenseKey"]</expression>
                                    </structure>
                                </list-property>
                                <expression name="filterExpr" type="javascript">dataSetRow["licenseKey"].length > 1</expression>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">Comment</property>
                                <expression name="expression" type="javascript">if (row["LicensedDataType"] == "File-level Protection"){&#13;
"Data Not Available"&#13;
}&#13;
if (dataSetRow["isLicenseViolation"] == true){&#13;
"License Violation"&#13;
}&#13;
else "Test"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">consumedCapacityGB</property>
                                <text-property name="displayName">consumedCapacityGB</text-property>
                                <expression name="expression" type="javascript">var myStr = dataSetRow["LicensedDataType"];&#13;
if (myStr != null) {&#13;
   &#13;
if (myStr.search(/^NDMP Interface/) >=0){&#13;
dataSetRow["consumedCount"]+" unit(s)"&#13;
 }&#13;
&#13;
else {&#13;
   var consumedCapacityGB = parseFloat(dataSetRow["consumedCapacityGB"]);&#13;
    if (consumedCapacityGB > 0){&#13;
          GBbytesToSizeDPX(consumedCapacityGB ,2)&#13;
          }&#13;
          else "&lt;1 GB" &#13;
   }&#13;
 }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">consumedPercent</property>
                                <text-property name="displayName">consumedPercent</text-property>
                                <expression name="expression" type="javascript">dataSetRow["consumedPercent"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">consumedQuantity</property>
                                <expression name="expression" type="javascript">if(row["licenseModel"] == "Capacity-based License Model") {&#13;
  row["consumedCapacityGB"]&#13;
 }&#13;
 else if (row["licenseModel"] == "Component-based License Model"){&#13;
 row["consumedCount"]&#13;
 }&#13;
 else {&#13;
 "Unparsed license Model"&#13;
 }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">isLicenseViolation</property>
                                <text-property name="displayName">isLicenseViolation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["isLicenseViolation"]</expression>
                                <property name="dataType">boolean</property>
                                <property name="allowExport">false</property>
                            </structure>
                            <structure>
                                <property name="name">consumedCount</property>
                                <text-property name="displayName">consumedCount</text-property>
                                <expression name="expression" type="javascript">if (dataSetRow["id"] == "Block Level Protection"){&#13;
   var scaledCapacity = parseFloat(dataSetRow["consumedCapacityGB"]);&#13;
   scaledCapacity  = scaledCapacity*1000*1000*1000;&#13;
   bytesToSizeDPX(scaledCapacity ,2)&#13;
  }&#13;
else dataSetRow["consumedCount"]+" unit(s)"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">licensedCapacityGB</property>
                                <text-property name="displayName">licensedCapacityGB</text-property>
                                <expression name="expression" type="javascript">var myStr = dataSetRow["LicensedDataType"];&#13;
if (myStr != null) {&#13;
&#13;
if (myStr.search(/^NDMP Interface/) >= 0 ) {&#13;
dataSetRow["licensedCount"]+" unit(s)";&#13;
 }&#13;
&#13;
else {&#13;
   var scaledCapacity = parseFloat(dataSetRow["licensedCapacityGB"]);&#13;
   GBbytesToSizeDPX(scaledCapacity,2)&#13;
   }&#13;
 }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">GroupHeader</property>
                                <text-property name="displayName">GroupHeader</text-property>
                                <expression name="expression" type="javascript">dataSetRow["GroupHeader"]</expression>
                                <property name="dataType">boolean</property>
                            </structure>
                            <structure>
                                <property name="name">componentName</property>
                                <text-property name="displayName">componentName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["componentName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">componentType</property>
                                <text-property name="displayName">componentType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["componentType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">StatusStr</property>
                                <expression name="expression" type="javascript">if (dataSetRow["isLicenseViolation"] == true) {&#13;
"Violation"&#13;
}&#13;
else "Compliant"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">CategoryRunningCount</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>GroupByMasterServer</value>
                                </simple-property-list>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["LicensedDataType"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]&#13;
//dataSetRow["componentType"]+": "+dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">LicenseModelStr</property>
                                <expression name="expression" type="javascript">var map = reportContext.getPersistentGlobalVariable("map");&#13;
var key = dataSetRow["dpxId"]+"lk";&#13;
map.get(key)</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">LicensedStr</property>
                                <expression name="expression" type="javascript">if (dataSetRow["licenseModel"] == "Capacity-based License Model"){&#13;
  row["licensedCapacityGB"]&#13;
  }&#13;
  else{&#13;
  //row["licensedCount"]&#13;
  ""&#13;
  }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">ConsumedStr</property>
                                <expression name="expression" type="javascript">if (dataSetRow["licenseModel"] == "Capacity-based License Model"){&#13;
  row["consumedCapacityGB"]&#13;
  }&#13;
  else{&#13;
     if(dataSetRow["LicensedDataType"] == "Block backup to NetApp Storage"){&#13;
       row["consumedCapacityGB"]&#13;
     }&#13;
     else &#13;
  //row["consumedQuantity"]&#13;
  "" //empty str&#13;
  }</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">GroupHeaderEmptyText</property>
                                <expression name="expression" type="javascript">""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">isEvaluationKey</property>
                                <expression name="expression" type="javascript">dataSetRow["isEvaluationKey"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">errorMessage</property>
                                <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">nameStr</property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">consumedCount_1</property>
                                <text-property name="displayName">consumedCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["consumedCount"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">consumedCapacityGB_1</property>
                                <text-property name="displayName">consumedCapacityGB</text-property>
                                <expression name="expression" type="javascript">dataSetRow["consumedCapacityGB"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">licensedCapacityGB_1</property>
                                <text-property name="displayName">licensedCapacityGB</text-property>
                                <expression name="expression" type="javascript">dataSetRow["licensedCapacityGB"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">indentation</property>
                                <text-property name="displayName">indentation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["indentation"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">licensedCountStr</property>
                                <expression name="expression" type="javascript">var myStr = "" ;&#13;
if (row["isEvaluationKey"] == true) {&#13;
myStr= ""&#13;
}&#13;
&#13;
if (row["name"] == "Block Level Protection") {&#13;
   var scaledCapacity = parseFloat(dataSetRow["licensedCapacityGB"]);&#13;
   scaledCapacity  = scaledCapacity*1000*1000*1000;&#13;
   myStr= bytesToSizeDPX(scaledCapacity ,2)&#13;
  }&#13;
&#13;
  else {&#13;
    myStr = dataSetRow["licensedCount"] + " unit(s)"&#13;
    }&#13;
&#13;
myStr</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">licensedCount</property>
                                <text-property name="displayName">licensedCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["licensedCount"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">LicensedDataTypeCount</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>GroupByMasterServer</value>
                                </simple-property-list>
                                <property name="aggregateFunction">RUNNINGCOUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["LicensedDataType"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">msCount</property>
                                <text-property name="displayName">msCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                        </list-property>
                        <property name="pageBreakInterval">10000</property>
                        <column id="4544">
                            <property name="width">3.5in</property>
                        </column>
                        <column id="4545">
                            <property name="width">2.5in</property>
                        </column>
                        <column id="4546">
                            <property name="width">2.5in</property>
                        </column>
                        <column id="4551">
                            <property name="width">1.75in</property>
                        </column>
                        <group id="4555">
                            <property name="groupName">GroupByMasterServer</property>
                            <expression name="keyExpr" type="javascript">row["dpxId"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">var mapIPToHost= reportContext.getPersistentGlobalVariable("mapIPToHost");
var key  = row["enterpriseHostInfo"];
mapIPToHost.get(key)</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="4556">
                                    <method name="onCreate"><![CDATA[
]]></method>
                                    <property name="backgroundColor">white</property>
                                    <property name="fontSize">medium</property>
                                    <property name="color">white</property>
                                    <cell id="4648">
                                        <property name="colSpan">4</property>
                                        <property name="rowSpan">1</property>
                                        <data id="4808">
                                            <property name="backgroundColor">#4389BC</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="paddingTop">7px</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">7px</property>
                                            <property name="resultSetColumn">GroupHeaderText</property>
                                        </data>
                                    </cell>
                                </row>
                                <row id="4696">
                                    <method name="onCreate"><![CDATA[
]]></method>
                                    <property name="backgroundColor">white</property>
                                    <property name="fontSize">medium</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["errorMessage"] != "") {&#13;
  true&#13;
  }&#13;
  else  false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="4697">
                                        <property name="colSpan">1</property>
                                        <property name="rowSpan">1</property>
                                        <label id="4708">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingLeft">7pt</property>
                                            <text-property name="text">License Type:</text-property>
                                        </label>
                                    </cell>
                                    <cell id="4699">
                                        <property name="colSpan">2</property>
                                        <property name="rowSpan">1</property>
                                        <text id="5242">
                                            <property name="fontSize">0.9em</property>
                                            <property name="color">black</property>
                                            <method name="onCreate"><![CDATA[var map= reportContext.getPersistentGlobalVariable("map");
var key  = row["dpxId"]+"lk";
this.text = map.get(key);
]]></method>
                                            <property name="contentType">auto</property>
                                            <text-property name="content"><![CDATA[Scripted]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="4701"/>
                                </row>
                                <row id="4702">
                                    <method name="onCreate"><![CDATA[
]]></method>
                                    <property name="backgroundColor">white</property>
                                    <property name="fontSize">medium</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["errorMessage"] != "") {&#13;
  true&#13;
  }&#13;
  else  false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="4703">
                                        <property name="colSpan">1</property>
                                        <property name="rowSpan">1</property>
                                        <label id="4709">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingTop">1pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">1pt</property>
                                            <text-property name="text">Expiration: </text-property>
                                        </label>
                                    </cell>
                                    <cell id="4705">
                                        <property name="colSpan">3</property>
                                        <property name="rowSpan">1</property>
                                        <text id="4720">
                                            <property name="fontSize">0.9em</property>
                                            <property name="color">black</property>
                                            <method name="onCreate"><![CDATA[var map= reportContext.getPersistentGlobalVariable("map");
var key  = row["dpxId"]+"le";
var myExpSecs =  86400*parseInt(map.get(key))
if (myExpSecs > 0){
var d = new Date();
var now = d.getTime();
var myExpDate = now + (myExpSecs*1000);
this.text = new Date(myExpDate).toLocaleDateString()+" ("+map.get(key)+")";
}
else {
this.text = "Perpetual";
}
]]></method>
                                            <property name="contentType">auto</property>
                                            <text-property name="content"><![CDATA[Scripted]]></text-property>
                                        </text>
                                    </cell>
                                </row>
                                <row id="5569">
                                    <method name="onCreate"><![CDATA[
]]></method>
                                    <property name="backgroundColor">white</property>
                                    <property name="fontSize">medium</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["errorMessage"] != "") {&#13;
  true&#13;
  }&#13;
  else  false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="5570">
                                        <label id="5574">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingTop">1pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text">DPX Version: </text-property>
                                        </label>
                                    </cell>
                                    <cell id="5571">
                                        <property name="colSpan">2</property>
                                        <property name="rowSpan">1</property>
                                        <method name="onCreate"><![CDATA[var mapserverInfoToHost = reportContext.getPersistentGlobalVariable("mapserverInfoToHost");
var key  = row["dpxId"]
var myStr = mapserverInfoToHost.get(key);
var a = myStr.split("\n")
this.text = a[0]+" "+a[1]+" "+a[3]]]></method>
                                        <text id="5576">
                                            <property name="fontSize">0.9em</property>
                                            <property name="color">black</property>
                                            <method name="onCreate"><![CDATA[var mapserverInfoToHost = reportContext.getPersistentGlobalVariable("mapserverInfoToHost");
var key  = row["dpxId"];
var myStr = mapserverInfoToHost.get(key);
var a = myStr.split("\n");
this.text = a[0]+" "+a[1]+" "+a[3]

]]></method>
                                            <property name="contentType">auto</property>
                                            <text-property name="content"><![CDATA[Scripted]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="5573"/>
                                </row>
                                <row id="5253">
                                    <method name="onCreate"><![CDATA[
]]></method>
                                    <property name="backgroundColor">white</property>
                                    <property name="fontSize">medium</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["msCount"] &lt; 1) {&#13;
  false&#13;
  }&#13;
&#13;
else if (row["errorMessage"] == "") {&#13;
  true &#13;
  }&#13;
else if (row["errorMessage"] == null) {&#13;
  true &#13;
    }  &#13;
else  false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="5254">
                                        <property name="colSpan">3</property>
                                        <property name="rowSpan">1</property>
                                        <text-data name="Errors1and2" id="5259">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">red</property>
                                            <property name="paddingLeft">10pt</property>
                                            <list-property name="visibility">
                                                <structure>
                                                    <property name="format">all</property>
                                                    <expression name="valueExpr" type="javascript">if ((row["errorMessage"] != null) &amp;&amp; (row["errorMessage"].search(/Failed to connect/)) >= 0){ &#13;
false&#13;
}&#13;
&#13;
else if ((row["errorMessage"] != null) &amp;&amp; (row["errorMessage"].search(/No results/)) >= 0){ &#13;
false&#13;
}&#13;
else true</expression>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">//handles no data returned case &#13;
var ErrStr = "";&#13;
if (row["errorMessage"].search(/Failed to connect/) >= 0) { &#13;
    ErrStr = reportContext.getMessage("DPxError2", reportContext.getLocale());&#13;
      }&#13;
if (row["errorMessage"].search(/No results/) >= 0) { &#13;
    ErrStr = reportContext.getMessage("DPxError1", reportContext.getLocale());&#13;
      }      &#13;
 ErrStr</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                        <text-data name="NoMastersError" id="5565">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">red</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="dataSet">MasterServerParam</property>
                                            <list-property name="visibility">
                                                <structure>
                                                    <property name="format">all</property>
                                                    <expression name="valueExpr" type="javascript">if (row._outer["msCount"] &lt; 1){ &#13;
false&#13;
}&#13;
else true</expression>
                                                </structure>
                                            </list-property>
                                            <list-property name="boundDataColumns">
                                                <structure>
                                                    <property name="name">name</property>
                                                    <text-property name="displayName">name</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">hostAddress</property>
                                                    <text-property name="displayName">hostAddress</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["hostAddress"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">id</property>
                                                    <text-property name="displayName">id</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                                    <property name="dataType">string</property>
                                                </structure>
                                                <structure>
                                                    <property name="name">count</property>
                                                    <text-property name="displayName">count</text-property>
                                                    <expression name="expression" type="javascript">dataSetRow["count"]</expression>
                                                    <property name="dataType">integer</property>
                                                </structure>
                                            </list-property>
                                            <expression name="valueExpr">reportContext.getMessage("DPxError3", reportContext.getLocale());;</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="5257"/>
                                </row>
                                <row id="4591">
                                    <method name="onCreate"><![CDATA[FeatureRowCount = 0;]]></method>
                                    <property name="backgroundColor">#4389BC</property>
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["errorMessage"] != "") {&#13;
  true&#13;
  }&#13;
  else  false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="4649">
                                        <property name="colSpan">1</property>
                                        <property name="rowSpan">1</property>
                                        <label id="4599">
                                            <property name="paddingLeft">7pt</property>
                                            <text-property name="text" key="LicenseFeature">LicenseFeature</text-property>
                                        </label>
                                    </cell>
                                    <cell id="4593">
                                        <label id="4601">
                                            <property name="paddingLeft">1pt</property>
                                            <property name="paddingRight">2cm</property>
                                            <property name="textAlign">right</property>
                                            <text-property name="text" key="Licensed">Licensed</text-property>
                                        </label>
                                    </cell>
                                    <cell id="4594">
                                        <label id="4602">
                                            <property name="paddingLeft">1pt</property>
                                            <property name="paddingRight">2cm</property>
                                            <property name="textAlign">right</property>
                                            <text-property name="text" key="Consumed">Consumed</text-property>
                                        </label>
                                    </cell>
                                    <cell id="4596">
                                        <label id="4603">
                                            <property name="paddingTop">1pt</property>
                                            <property name="paddingLeft">10pt</property>
                                            <property name="paddingRight">1pt</property>
                                            <text-property name="text" key="LicenseComplianceStatus">Status</text-property>
                                        </label>
                                    </cell>
                                </row>
                            </header>
                            <footer>
                                <row id="4832">
                                    <property name="borderTopColor">#DDE7F2</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">2px</property>
                                    <cell id="4833">
                                        <property name="colSpan">4</property>
                                        <property name="rowSpan">1</property>
                                        <property name="paddingBottom">20pt</property>
                                    </cell>
                                </row>
                            </footer>
                        </group>
                        <group id="4635">
                            <property name="groupName">GroupLicensedDataType</property>
                            <expression name="keyExpr" type="javascript">row["LicensedDataType"]</expression>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="4636">
                                    <list-property name="highlightRules">
                                        <structure>
                                            <property name="operator">eq</property>
                                            <property name="backgroundColor">#ECF1F7</property>
                                            <expression name="testExpr" type="javascript">row["LicensedDataTypeCount"]%2</expression>
                                            <simple-property-list name="value1">
                                                <value type="javascript">0</value>
                                            </simple-property-list>
                                        </structure>
                                    </list-property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["name"] == ""){&#13;
   true&#13;
   }  &#13;
else if (row["name"].search(/License/) >= 0){&#13;
   true&#13;
   }&#13;
else if  (row["isEvaluationKey"]  == "n/a") {&#13;
    true&#13;
    }&#13;
else if  (row["capacityCategoryorComponentFeature"] == "") {&#13;
    true&#13;
    }&#13;
else if  (row["licenseModel"].search(/Component/) >= 0) {&#13;
   true&#13;
   }&#13;
else false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="4637">
                                        <data id="4646">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingLeft">7pt</property>
                                            <method name="onRender"><![CDATA[if(params["ShowDetailView"].value == true){
this.getStyle().fontWeight = "bold"
}
else {
this.getStyle().fontWeight = "normal"
}]]></method>
                                            <property name="resultSetColumn">LicensedDataType</property>
                                        </data>
                                    </cell>
                                    <cell id="4638">
                                        <data id="4686">
                                            <property name="color">black</property>
                                            <property name="paddingRight">2cm</property>
                                            <property name="textAlign">right</property>
                                            <list-property name="visibility">
                                                <structure>
                                                    <property name="format">all</property>
                                                    <expression name="valueExpr" type="javascript">if (row["isEvaluationKey"] == "true")&#13;
true&#13;
else false</expression>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">licensedCapacityGB</property>
                                        </data>
                                    </cell>
                                    <cell id="4639">
                                        <data id="4687">
                                            <property name="color">black</property>
                                            <property name="paddingLeft">1pt</property>
                                            <property name="paddingRight">2cm</property>
                                            <property name="textAlign">right</property>
                                            <property name="resultSetColumn">consumedCapacityGB</property>
                                        </data>
                                    </cell>
                                    <cell id="4640">
                                        <method name="onCreate"><![CDATA[if (this.getRowData( ).getColumnValue( "StatusStr" ) == "Violation"){
this.file ="images/failed.png";
}]]></method>
                                        <property name="textAlign">left</property>
                                        <image id="5566">
                                            <property name="marginLeft">40pt</property>
                                            <property name="height">16px</property>
                                            <property name="width">16px</property>
                                            <method name="onCreate"><![CDATA[if (this.getRowData( ).getColumnValue( "StatusStr" ) == "Violation"){
this.file ="images/failed.png";
}
this.helpText = this.getRowData( ).getColumnValue( "StatusStr" );
]]></method>
                                            <property name="source">file</property>
                                            <expression name="uri" type="constant">images/completed.png</expression>
                                        </image>
                                    </cell>
                                </row>
                                <row id="4739">
                                    <method name="onPrepare"><![CDATA[reportContext.setPersistentGlobalVariable("FeatureHighlight","N");

]]></method>
                                    <method name="onRender"><![CDATA[

    ]]></method>
                                    <property name="borderBottomColor">#ECF1F7</property>
                                    <property name="borderTopColor">#D3E1F3</property>
                                    <list-property name="highlightRules">
                                        <structure>
                                            <property name="operator">eq</property>
                                            <property name="backgroundColor">#ECF1F7</property>
                                            <expression name="testExpr" type="javascript">row["LicensedDataTypeCount"]%2</expression>
                                            <simple-property-list name="value1">
                                                <value type="javascript">0</value>
                                            </simple-property-list>
                                        </structure>
                                    </list-property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (row["name"] == ""){&#13;
   true&#13;
   }  &#13;
else if (row["name"].search(/License/) >= 0){&#13;
   true&#13;
   }&#13;
else if  (row["isEvaluationKey"]  == "n/a") {&#13;
    true&#13;
    }&#13;
else if  (row["capacityCategoryorComponentFeature"] == "") {&#13;
    true&#13;
    }&#13;
else if  (row["licenseModel"].search(/Capacity/) >= 0) {&#13;
   true&#13;
   }&#13;
else false</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="4741">
                                        <data id="4588">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="paddingLeft">7pt</property>
                                            <method name="onRender"><![CDATA[if(params["ShowDetailView"].value == true){
this.getStyle().fontWeight = "bold"
}
else {
this.getStyle().fontWeight = "normal"
}]]></method>
                                            <property name="resultSetColumn">LicensedDataType</property>
                                        </data>
                                    </cell>
                                    <cell id="4742">
                                        <data id="4747">
                                            <property name="color">black</property>
                                            <property name="paddingLeft">1pt</property>
                                            <property name="paddingRight">2.3cm</property>
                                            <property name="textAlign">right</property>
                                            <list-property name="visibility">
                                                <structure>
                                                    <property name="format">all</property>
                                                    <expression name="valueExpr" type="javascript">if(row["isEvaluationKey"] == "true") {&#13;
   true&#13;
   }&#13;
  else false</expression>
                                                </structure>
                                            </list-property>
                                            <property name="resultSetColumn">licensedCountStr</property>
                                        </data>
                                    </cell>
                                    <cell id="4743">
                                        <data id="4748">
                                            <property name="color">black</property>
                                            <property name="paddingLeft">1pt</property>
                                            <property name="paddingRight">2cm</property>
                                            <property name="textAlign">right</property>
                                            <property name="resultSetColumn">consumedCount</property>
                                        </data>
                                    </cell>
                                    <cell id="4744">
                                        <method name="onCreate"><![CDATA[if (this.getRowData( ).getColumnValue( "StatusStr" ) == "Violation"){
this.file ="images/failed.png";
}]]></method>
                                        <image id="5568">
                                            <property name="marginLeft">40pt</property>
                                            <property name="height">16px</property>
                                            <property name="width">16px</property>
                                            <method name="onCreate"><![CDATA[if (this.getRowData( ).getColumnValue( "StatusStr" ) == "Violation"){
this.file ="images/failed.png";
}
this.helpText = this.getRowData( ).getColumnValue( "StatusStr" );]]></method>
                                            <property name="source">file</property>
                                            <expression name="uri" type="constant">images/completed.png</expression>
                                        </image>
                                    </cell>
                                </row>
                            </header>
                        </group>
                        <detail>
                            <row id="4578">
                                <method name="onCreate"><![CDATA[var level = this.getRowData().getExpressionValue("row[componentType]");
var name = this.getRowData().getExpressionValue("row[name]");
var feature = this.getRowData().getExpressionValue("row[capacityCategoryorComponentFeature]");
var model = this.getRowData().getExpressionValue("row[licenseModel]");

reportContext.setPersistentGlobalVariable("level",level);
reportContext.setPersistentGlobalVariable("name",name);
reportContext.setPersistentGlobalVariable("feature",feature);
reportContext.setPersistentGlobalVariable("model",model);


]]></method>
                                <method name="onRender"><![CDATA[//Use this expression to selectively hide details if required 
//hide detail for this category because it is not supported by the api at this time. 
//var myName = reportContext.getPersistentGlobalVariable("name");
//var level = reportContext.getPersistentGlobalVariable("level");
//var feature = reportContext.getPersistentGlobalVariable("feature");
//alternative to using persistent global variables below, gv's seemed to be unreliable on appliance  

var myName = this.getRowData().getExpressionValue("row[name]");
var feature = this.getRowData().getExpressionValue("row[capacityCategoryorComponentFeature]");
var level = this.getRowData().getExpressionValue("row[componentType]");


var myModel= this.getRowData().getExpressionValue("row[licenseModel]");

var myDetailRowNum = parseInt(reportContext.getPersistentGlobalVariable("myDetailRowNum"));
myDetailRowNum++;

if( feature.search(/File Backup/) >= 0 ){ //keep detail hidden until supported in DPX
   this.getStyle().display = "none"
   myDetailRowNum--; //if hide then decrement row num for proper hightlights 
   }
   
if( myName.search(/License/) >=0 ){
   this.getStyle().display = "none"
   myDetailRowNum--;
   } 
    
if( level.search(/TAPE LIBRARY/) >=0 ){
   if (feature.search(/TAPE LIBRARY/) >= 0){
    this.getStyle().display = "none"
    myDetailRowNum--;
      } 
   }

   

if ((feature.search(/NDMP Interface/) >= 0) &amp;&amp; level == "DISK") {
    this.getStyle().display = "none"
    myDetailRowNum--; 
  }



/////////////////////////////

if( params["ShowDetailView"].value == false ){
   this.getStyle().display = "none"
   myDetailRowNum--;
   } 
     
if( feature == "NDMP Backup Jobs" &amp;&amp; level != "JOB") {
   this.getStyle().display = "none"
   myDetailRowNum--;
   }  
   
if( feature == "File Backup Jobs" &amp;&amp; level != "DISK") {
   this.getStyle().display = "none"
   myDetailRowNum--;
   }  
    
 
///Block backup to NetApp Storage
if ((feature ==  "Block backup to NetApp Storage")  &amp;&amp; (level == "DISK")) {   
   this.getStyle().display = "none"
   myDetailRowNum--;
   } 
 
 
 if ((feature.search(/SAN Devices/) >= 0) &amp;&amp; (level.search(/DISK/) >= 0)) {
      //this.getStyle().display = "none"
     // myDetailRowNum--;
     reportContext.setPersistentGlobalVariable("indent","30px");
   }  
  

  if( feature == "Block backup to DPX Open Storage" &amp;&amp; level == "DISK") {
  this.getStyle().display = "none"
  myDetailRowNum--;
  }
  
  if(myModel.search(/Capacity/) >=0 ) {
     if(myName.search(/NDMP/) >= 0){
        this.getStyle().display = "none"
        myDetailRowNum--;   
        }
  }
  
    if(myModel.search(/Component/) >=0 ) {
     if(myName.search(/NDMP Interface \(All\)/) >= 0){
        this.getStyle().display = "none"
        myDetailRowNum--;   
        }
  }
  
 /********************* Highlights *************************/
 
 //myDetailRowNum++;
 if (myDetailRowNum%2 == 0)
 this.getStyle().backgroundColor = "#ECF1F7"
 else 
 this.getStyle().backgroundColor = "#FFFFFF"
 myDetailRowNum=myDetailRowNum.toString();
 
 reportContext.setPersistentGlobalVariable("myDetailRowNum",myDetailRowNum);]]></method>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (params["ShowDetailView"].value == true){&#13;
     &#13;
      if (row["name"].search(/License/) >= 0){&#13;
      true&#13;
       }&#13;
       &#13;
      if (row["GroupHeader"] == true){&#13;
            true&#13;
       } &#13;
       &#13;
      if (row["capacityCategoryorComponentFeature"] == "File Backup Jobs"){&#13;
        true&#13;
          }   &#13;
      else false&#13;
     }  &#13;
     else true</expression>
                                    </structure>
                                </list-property>
                                <cell id="4579">
                                    <data id="4745">
                                        <method name="onCreate"><![CDATA[//if (this.getRowData().getColumnValue("componentType") == "DISK"){
 //  this.getStyle().paddingLeft = "300px"
// }
//else this.getStyle().paddingLeft = "15px"]]></method>
                                        <method name="onRender"><![CDATA[indent = this.getRowData().getColumnValue("indentation") 
this.getStyle().paddingLeft = indent



]]></method>
                                        <property name="resultSetColumn">name</property>
                                    </data>
                                </cell>
                                <cell id="4580">
                                    <data id="4801">
                                        <property name="paddingLeft">1pt</property>
                                        <property name="paddingRight">2cm</property>
                                        <property name="textAlign">right</property>
                                        <list-property name="visibility">
                                            <structure>
                                                <property name="format">all</property>
                                                <expression name="valueExpr" type="javascript">true</expression>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">LicensedStr</property>
                                    </data>
                                </cell>
                                <cell id="4581">
                                    <data id="4802">
                                        <property name="paddingRight">2cm</property>
                                        <property name="textAlign">right</property>
                                        <property name="resultSetColumn">ConsumedStr</property>
                                    </data>
                                </cell>
                                <cell id="4583">
                                    <text-data id="4803">
                                        <list-property name="visibility">
                                            <structure>
                                                <property name="format">all</property>
                                                <expression name="valueExpr" type="javascript">true</expression>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">//DEBUG normally hidden used for highlights &#13;
var myDetailRowNum = parseInt(reportContext.getPersistentGlobalVariable("myDetailRowNum"));&#13;
myDetailRowNum.toString()+"   "+row["CategoryRunningCount"]</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                            </row>
                        </detail>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>

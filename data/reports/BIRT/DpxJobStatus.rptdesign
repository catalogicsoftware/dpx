<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.8.0.v201806261756</property>
    <simple-property-list name="includeResource">
        <value>reports</value>
    </simple-property-list>
    <list-property name="includeScripts">
        <property>Wraplines.js</property>
    </list-property>
    <property name="units">in</property>
    <method name="beforeFactory"><![CDATA[

 
   ]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">syncsort_library.rptlibrary</property>
            <property name="namespace">syncsort_library</property>
        </structure>
    </list-property>
    <list-property name="cssStyleSheets">
        <structure>
            <property name="fileName">syncsort.css</property>
            <property name="useExternalCss">false</property>
        </structure>
        <structure>
            <property name="fileName">reports.css</property>
            <property name="useExternalCss">false</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="report_displayname" id="791">
            <property name="hidden">true</property>
            <text-property name="helpText">View nodes and volumes that are protected using DPX Backup.</text-property>
            <text-property name="promptText">Protected Systems</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="report_category" id="792">
            <property name="hidden">true</property>
            <text-property name="helpText">Displays the protection status of volumes and qtrees using NetAppâ€™s SnapMirror or SnapVault software</text-property>
            <text-property name="promptText">Storage Protection</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <cascading-parameter-group name="MasterJobNameCascade" id="8242">
            <property name="dataSet">MasterServerParam</property>
            <property name="dataSetMode">multiple</property>
            <parameters>
                <scalar-parameter name="MasterServer" id="8243">
                    <text-property name="displayName" key="DPxMasterServer">MasterServer</text-property>
                    <text-property name="promptText" key="DPxMasterServer"></text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">MasterServerParam</property>
                    <expression name="valueExpr">row["id"]</expression>
                    <expression name="labelExpr">row["name"]</expression>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">true</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="jobType" id="8244">
                    <text-property name="displayName" key="JobType">JobType</text-property>
                    <text-property name="promptText">Job Type</text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">dpxProviderJobTypeParam</property>
                    <expression name="valueExpr">row["jobTypeStr"]</expression>
                    <expression name="labelExpr">row["jobTypeStr"]</expression>
                    <expression name="sortByColumn">dataSetRow["SortKey"]</expression>
                    <property name="sortDirection">asc</property>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">simple</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">false</property>
                    <structure name="format"/>
                </scalar-parameter>
                <scalar-parameter name="JobName" id="8245">
                    <text-property name="displayName" key="JobName">JobName</text-property>
                    <text-property name="promptText">Job Name</text-property>
                    <property name="valueType">dynamic</property>
                    <property name="isRequired">true</property>
                    <property name="dataSetName">dpxProviderJobListParam</property>
                    <expression name="valueExpr">row["jobName"]</expression>
                    <expression name="labelExpr">row["jobName"]</expression>
                    <expression name="sortByColumn">dataSetRow["SortKey"]</expression>
                    <property name="sortDirection">asc</property>
                    <property name="dataType">string</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">(All)</value>
                    </simple-property-list>
                    <property name="paramType">multi-value</property>
                    <property name="controlType">list-box</property>
                    <property name="fixedOrder">false</property>
                    <structure name="format"/>
                </scalar-parameter>
            </parameters>
        </cascading-parameter-group>
        <scalar-parameter name="JobStatusFilter" id="8275">
            <property name="hidden">false</property>
            <text-property name="promptText" key="JobStatusFilter"></text-property>
            <property name="valueType">static</property>
            <property name="sortBy">value</property>
            <property name="sortDirection">asc</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">(All)</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">StatusSuccessful</property>
                    <property name="label">Successful</property>
                    <property name="labelID">StatusSuccessfule</property>
                </structure>
                <structure>
                    <property name="value">StatusFailed</property>
                    <property name="label">Failed</property>
                    <property name="labelID">StatusFailed</property>
                </structure>
                <structure>
                    <property name="value">StatusNotCompleted</property>
                    <property name="label">Transitory</property>
                    <property name="labelID">StatusNotCompleted</property>
                </structure>
                <structure>
                    <property name="value">(All)</property>
                </structure>
            </list-property>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="ReportDays" id="6366">
            <property name="hidden">false</property>
            <text-property name="promptText" key="ReportInterval"></text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="sortBy">value</property>
            <property name="sortDirection">asc</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">7</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">7</property>
                    <property name="label">7 days</property>
                </structure>
                <structure>
                    <property name="value">14</property>
                    <property name="label">14 days</property>
                </structure>
                <structure>
                    <property name="value">30</property>
                    <property name="label">30 days</property>
                </structure>
                <structure>
                    <property name="value">1</property>
                    <property name="label">1 day</property>
                </structure>
                <structure>
                    <property name="value">3</property>
                    <property name="label">3 days</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <parameter-group name="StartEndDates" id="7968">
            <list-property name="userProperties">
                <structure>
                    <property name="name">OptionalParentProperty</property>
                    <property name="type">string</property>
                </structure>
                <structure>
                    <property name="name">OptionalParentPropertyValues</property>
                    <property name="type">string</property>
                </structure>
            </list-property>
            <property name="OptionalParentProperty">ReportDays</property>
            <property name="OptionalParentPropertyValues">["Use Calendar"]</property>
            <parameters>
                <scalar-parameter name="DateStart" id="7966">
                    <property name="hidden">true</property>
                    <property name="valueType">static</property>
                    <property name="isRequired">true</property>
                    <property name="dataType">date</property>
                    <property name="distinct">true</property>
                    <simple-property-list name="defaultValue">
                        <value type="javascript">lastWeek = new Date();&#13;
lastWeek.setDate(lastWeek.getDate() - 7); //go back a week&#13;
[lastWeek.getFullYear(), lastWeek.getMonth()+1, lastWeek.getDate()].join('-');</value>
                    </simple-property-list>
                    <list-property name="selectionList"/>
                    <property name="paramType">simple</property>
                    <property name="controlType">text-box</property>
                    <structure name="format">
                        <property name="category">Custom</property>
                        <property name="pattern">yyyy-MM-dd</property>
                    </structure>
                </scalar-parameter>
                <scalar-parameter name="DateEnd" id="7983">
                    <property name="hidden">true</property>
                    <property name="valueType">static</property>
                    <property name="isRequired">true</property>
                    <property name="dataType">date</property>
                    <property name="distinct">true</property>
                    <simple-property-list name="defaultValue">
                        <value type="javascript">today = new Date();&#13;
[today.getFullYear(), today.getMonth()+1, today.getDate()].join('-');</value>
                    </simple-property-list>
                    <list-property name="selectionList"/>
                    <property name="paramType">simple</property>
                    <property name="controlType">text-box</property>
                    <structure name="format">
                        <property name="category">Custom</property>
                        <property name="pattern">yyyy-MM-dd</property>
                    </structure>
                </scalar-parameter>
            </parameters>
        </parameter-group>
        <scalar-parameter name="run_by" id="2598">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">DefaultUser</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Interactive Table" id="8537">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">No</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">Yes</property>
                </structure>
                <structure>
                    <property name="value">No</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="ScriptedArray" id="2356"/>
        <oda-data-source extensionID="com.syncsort.dp.xsb.reports.data.oda.rest" name="DPXprovider" id="3786">
            <property name="Base URI">http://report:8094/dpx</property>
            <property name="Auth URI">http://auth:8091/session</property>
            <property name="Username">sysadmin</property>
            <encrypted-property name="Password" encryptionID="base64">c3lzYWRtaW4K</encrypted-property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="MasterServerParam" id="3788">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">hostAddress</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">hostAddress</text-property>
                    <text-property name="heading">hostAddress</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>""</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">hostAddress</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">count</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[//beforeOpen
msName = new Array();]]></method>
            <method name="onFetch"><![CDATA[//onFetch()
if (row["id"] != "(All)" ){
   var key = row["id"];
   var value = row["name"];
   msName[key]=value 
   }]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">hostAddress</property>
                    <property name="nativeName">hostAddress</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{dpxs[*]}(name,hostAddress,id)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderJobDataSet" id="7988">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">msCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNTDISTINCT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["dpxId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">(row["dpxId"].search(/[0-9]{4}/) >= 0)</expression>
                </structure>
                <structure>
                    <property name="name">exception Count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">1</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["errorMessage"].length >0</expression>
                </structure>
                <structure>
                    <property name="name">duration</property>
                    <expression name="expression">function secondsToString(seconds){&#13;
var numdays = Math.floor(seconds / 86400);&#13;
var numhours = Math.floor((seconds % 86400) / 3600);&#13;
var numminutes = Math.floor(((seconds % 86400) % 3600) / 60);&#13;
var numseconds = ((seconds % 86400) % 3600) % 60;&#13;
&#13;
if (numdays &lt; 10) numdays = '0' + numdays;&#13;
if (numhours &lt; 10) numhours = '0' + numhours;&#13;
if (numminutes &lt; 10) numminutes = '0' + numminutes;&#13;
if (numseconds &lt; 10) numseconds = '0' + numseconds;&#13;
return numdays + " " + numhours + ":" + numminutes + ":" + numseconds ;&#13;
//return numdays + " " + numhours + ":" + numminutes;&#13;
}&#13;
&#13;
&#13;
&#13;
var myStatus = row["status"]&#13;
var endTime = parseInt(row["endTime"]/1000)&#13;
&#13;
switch(myStatus) {&#13;
&#13;
    case "COMPLETED" : &#13;
    case "CANCELLING" : &#13;
    case "ABORTED" :&#13;
      secondsToString(endTime - row["id"])&#13;
     break;&#13;
        &#13;
case "RUNNING" :&#13;
     var d = new Date();&#13;
     var now = d.getTime();&#13;
     secondsToString(parseInt(now/1000 - row["id"]))&#13;
      break ;&#13;
    &#13;
    default:&#13;
        "-"&#13;
}</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">StartTime</property>
                    <expression name="expression">if (!row["errorMessage"]){&#13;
if (row["id"] != "0"){ &#13;
new Date((parseFloat(row["id"])*1000)).toLocaleString();&#13;
//(d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear()+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()&#13;
}&#13;
&#13;
else if (row["status"] == "NOT_RUN"){ &#13;
new Date(parseFloat(row["runTime"])).toLocaleString();&#13;
}&#13;
&#13;
else if (row["status"] == "SUSPENDED"){ &#13;
new Date(parseFloat(row["runTime"])).toLocaleString();&#13;
 }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">EndTime</property>
                    <expression name="expression">if (!row["errorMessage"]){&#13;
if (dataSetRow["id"] != "0"){ &#13;
   if (row["status"] == "RUNNING"){&#13;
   null&#13;
   } &#13;
     else { &#13;
        new Date(parseFloat(row["endTime"])).toLocaleString();&#13;
        }&#13;
    }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">ExpirationDate</property>
                    <expression name="expression">if (!row["errorMessage"]) {&#13;
&#13;
if (dataSetRow["jobRetention"] > 0){&#13;
////////////////&#13;
      if (row["status"] == "SUSPENDED") "";&#13;
      else if (row["status"] == "NOT_RUN") ""; &#13;
////////////////////    &#13;
   else if ((dataSetRow["runRc"] == "0" )||(dataSetRow["runRc"] == "4" )){ &#13;
   new Date((row["jobRetention"]*86400+parseInt(row["id"]))*1000).toLocaleDateString()&#13;
    } &#13;
  }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">jobInstanceCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["name"] != "DAILY_SCHED"</expression>
                </structure>
                <structure>
                    <property name="name">ReportDays</property>
                    <expression name="expression">params["ReportDays"].value</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">TableSortKey</property>
                    <expression name="expression">if ((row["status"] == "NOT_RUN") || (row["status"] == "SUSPENDED")){&#13;
    row["runTime"]/1000&#13;
    }&#13;
    else if (( row["status"] == "COMPLETED")|| (row["status"] == "RUNNING")|| (row["status"] == "ABORTED")){&#13;
    row["id"]&#13;
    }&#13;
    else ""</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">StatusPlusRC</property>
                    <expression name="expression">if ((row["status"] == "COMPLETED") &amp;&amp;  (row["runRc"] == "0")) {&#13;
                  "StatusSuccessful"&#13;
             }&#13;
&#13;
           else  if ((row["status"] == "COMPLETED") &amp;&amp;  (row["runRc"] > 0)){&#13;
                 "StatusFailed"&#13;
             }&#13;
            else  if (row["status"] == "ABORTED"){&#13;
                 "StatusFailed"&#13;
             }&#13;
            else  if (row["status"] != "COMPLETED"){&#13;
                 "StatusNotCompleted"&#13;
             }&#13;
             &#13;
             else row["status"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TEST</property>
                    <expression name="expression">row["name"].search(/^odv\d{10}|^sdv\d{10}/)</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">rowCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["name"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">Age</property>
                    <expression name="expression">var d = new Date();&#13;
var myAge = d/1000-row["id"]&#13;
myAge/86400</expression>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">runRc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">runRc</text-property>
                    <text-property name="heading">runRc</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobRetention</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobRetention</text-property>
                    <text-property name="heading">jobRetention</text-property>
                </structure>
                <structure>
                    <property name="columnName">endTime</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">endTime</text-property>
                    <text-property name="heading">endTime</text-property>
                </structure>
                <structure>
                    <property name="columnName">runTime</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">runTime</text-property>
                    <text-property name="heading">runTime</text-property>
                </structure>
                <structure>
                    <property name="columnName">errorMessage</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <text-property name="heading">errorMessage</text-property>
                </structure>
                <structure>
                    <property name="columnName">status</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">status</text-property>
                    <text-property name="heading">status</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobState</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobState</text-property>
                    <text-property name="heading">jobState</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>"DAILY_SCHED"</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">is-true</property>
                    <expression name="expr" type="javascript">// Data Set Filter for JobStatusFilter -> multiSelected jobNames&#13;
function JobNameTest(JobNameParam) {&#13;
    if ((JobNameParam != "(All)" ) &amp;&amp; (myJobName.search(row["name"]) >= 0) ){&#13;
       return true;&#13;
     } &#13;
    if (JobNameParam == "(All)" ){&#13;
       return true;&#13;
     }       &#13;
     else return false;  &#13;
}&#13;
var statusParamStr = params["JobStatusFilter"].toString();&#13;
var jobTypeStr = params["jobType"].value;&#13;
var myJobName = params["JobName"].toString();&#13;
statusParamStr = statusParamStr.replace(/,/g, " "); //if multi valued source then replace comma with space &#13;
&#13;
switch(jobTypeStr) {  &#13;
   case "(All)":&#13;
    if (statusParamStr == "(All)") { true } &#13;
       else if (statusParamStr.search(row["StatusPlusRC"]) >= 0     )  {&#13;
            true&#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
             break; &#13;
  &#13;
   case "File": &#13;
   if (( row["jobType"] == "BACKUP_BASE") || (row["jobType"] == "BACKUP_INCR")|| (row["jobType"] == "BACKUP_DIFR"))  {  &#13;
        if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) {&#13;
              JobNameTest(myJobName)           &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
           }   &#13;
        break; &#13;
        &#13;
       case "NDMP":&#13;
            if (( row["jobType"] == "BACKUP_ADS") || (row["jobType"] == "BACKUP_ADS_INCR") || (row["jobType"] == "BACKUP_ADS_DIFR")|| (row["jobType"] == "BACKUP_NDMP") ) {&#13;
               if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) {&#13;
            JobNameTest(myJobName)&#13;
            }       &#13;
            else { &#13;
            false;&#13;
             }&#13;
           }  &#13;
        break; &#13;
     &#13;
        case "Block":&#13;
            if (( row["jobType"] == "BACKUP_SNAPVAULT") ) {&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
     &#13;
          case "BACKUP_IMAGE":&#13;
            if (( row["jobType"] == "BACKUP_IMAGE") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;    &#13;
    &#13;
           case "Agentless":&#13;
            if (( row["jobType"] == "BACKUP_VIRTUALIZATION") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;  &#13;
  &#13;
            case "Archive":&#13;
            if (row["name"].search(/^dp\d{10}/) >= 0 ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
            case "Copy":&#13;
            if (( row["jobType"] == "COPY") )&#13;
             JobNameTest(myJobName) &#13;
             break;   &#13;
    &#13;
           case "Cleaning":&#13;
            if (( row["jobType"] == "DRIVE_CLEAN") )&#13;
             JobNameTest(myJobName) &#13;
             break;      &#13;
      &#13;
           case "Restore_NDMP":&#13;
            if (( row["jobType"] == "RESTORE_ADS") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;             &#13;
      &#13;
         case "Restore Snapvault":&#13;
            if ( row["jobType"] == "RESTORE_SNAPVAULT") {&#13;
              if (row["name"].search(/^sdv\d{10}|^odv\d{10}/) &lt; 0)  {&#13;
           &#13;
                 if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
                   JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
 &#13;
 &#13;
 &#13;
         case "Verification":&#13;
            if ( row["jobType"] == "RESTORE_SNAPVAULT") {&#13;
              if (row["name"].search(/^sdv\d{10}|^odv\d{10}/) == 0)  {&#13;
           &#13;
                 if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
                   JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
 &#13;
     &#13;
         case "Restore File":&#13;
            if ( row["jobType"] == "RESTORE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
&#13;
         case "Restore Image":&#13;
            if ( row["jobType"] == "RESTORE_IMAGE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
        case "Restore Virtualization":&#13;
            if ( row["jobType"] == "RESTORE_VIRTUALIZATION" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
             &#13;
         case "Migrate":&#13;
            if ( row["jobType"] == "DUPLICATE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;                &#13;
    &#13;
           case "Catalog":&#13;
            if (params["JobName"].toString() == "(All)") {&#13;
            if ( ( row["jobType"] == "BACKUP_CATALOG" ) || ( row["jobType"] == "CONDENSE" ) ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
           else if (params["JobName"].toString() != "(All)") {&#13;
            if ( row["jobType"] == "BACKUP_CATALOG" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
    &#13;
             case "CONDENSE":      //never called &#13;
            if ( row["jobType"] == "CONDENSE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             true &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
     default:&#13;
        false    &#13;
}</expression>
                </structure>
                <structure>
                    <property name="operator">le</property>
                    <expression name="expr" type="javascript">row["Age"]</expression>
                    <simple-property-list name="value1">
                        <value>params["ReportDays"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var msId = params["MasterServer"].value;&#13;
var reportDays = params["ReportDays"].value;&#13;
//reportDays = 14; //debug&#13;
var resource = "job";&#13;
var sep = ",";&#13;
msIdFilter = "{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}";&#13;
var JobTypeFilter = "";&#13;
&#13;
var queryStr = "";&#13;
queryStr += "[{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
if (msId == "(All)") {&#13;
   msId = "*"; &#13;
   }  &#13;
queryStr += ",{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}"&#13;
&#13;
 /////// jobType aliases or multi value is not supported by the dpx provider. comment out until fully supported &#13;
// if (params["jobType"].toString() != "(All)") {  //add Job Type filter&#13;
//     var jobType = params["jobType"].toString(); &#13;
//     jobType = jobType.replace(/,/g," ")                            &#13;
//     queryStr += ",{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+jobType+"\"}"&#13;
//     }  &#13;
 &#13;
 ////////////////////handle job name here //////////////////////////////////////////////////////////////////////////&#13;
  var jobName = params["JobName"].toString();  &#13;
  if (jobName != "(All)") {  //add Job Name filter&#13;
    /// if multi select then no jobname filter as multi select not supported by api &#13;
    /// if multi select then will  filter data set &#13;
   if (params["JobName"].length == 1){ &#13;
      queryStr += ",{\"property\":\"jobName\",\"op\":\"=\",\"value\":\""+jobName+"\"}"&#13;
       }     &#13;
  } &#13;
 ///////////////////////////////////////////////////     &#13;
&#13;
&#13;
if (reportDays == 0){&#13;
var getEpochMillis = function(dateStr) {&#13;
  var r = /^\s*(\d{4})-(\d\d)-(\d\d)/&#13;
    , m = (""+dateStr).match(r);&#13;
  return (m) ? Date.UTC(m[1], m[2]-1, m[3]) : undefined;&#13;
}&#13;
var myStartDate =  getEpochMillis(params["DateStart"].value)/1000&#13;
var myEndDate =  getEpochMillis(params["DateEnd"].value)/1000&#13;
var StartEndFilter = ",{\"property\":\"startTime\",\"op\":\"=\",\"value\":\""+myStartDate+"\"},{\"property\":\"endTime\",\"op\":\"=\",\"value\":\""+myEndDate+"\"}";  &#13;
queryStr += StartEndFilter + "]" &#13;
}&#13;
&#13;
else if  (reportDays > 0){&#13;
var reportDaysFilter = ",{\"property\":\"reportDays\",\"op\":\"=\",\"value\":\""+reportDays+"\"}"&#13;
queryStr += reportDaysFilter + "]"&#13;
}</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">runRc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">jobRetention</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">endTime</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">runTime</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">errorMessage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">status</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">jobState</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">msCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">exception Count</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">duration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">StartTime</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">EndTime</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">ExpirationDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">jobInstanceCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">ReportDays</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">TableSortKey</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">StatusPlusRC</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">TEST</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">23</property>
                        <property name="name">rowCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">24</property>
                        <property name="name">Age</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[errors = new Array(); //this will hold error messages 


//reportContext.setPersistentGlobalVariable("errors", errors );
//reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus )

]]></method>
            <method name="onFetch"><![CDATA[//var errors = reportContext.getPersistentGlobalVariable("errors");

  if (row["errorMessage"] != ""){
     var myStr  = row["dpxId"]+":"+row["errorMessage"] 
     errors.push(myStr);
      }
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">runRc</property>
                    <property name="nativeName">runRc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">jobRetention</property>
                    <property name="nativeName">jobRetention</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">endTime</property>
                    <property name="nativeName">endTime</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">runTime</property>
                    <property name="nativeName">runTime</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">errorMessage</property>
                    <property name="nativeName">errorMessage</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">status</property>
                    <property name="nativeName">status</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">jobState</property>
                    <property name="nativeName">jobState</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{jobs[*]}(dpxId,name,id,jobType,runRc,jobRetention,endTime,runTime,errorMessage,status,jobState)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <script-data-set name="jobTypesScripted" id="8215">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">jobType</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">DisplayText</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">jobType</property>
                </structure>
                <structure>
                    <property name="columnName">DisplayText</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">DisplayText</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">ScriptedArray</property>
            <method name="open"><![CDATA[colNums = ["jobType","jobTypeStr"];
idx = 0;]]></method>
            <method name="fetch"><![CDATA[  var myValues=["(All)","BACKUP_FILE","BACKUP_ADS","BACKUP_BLOCK","BACKUP_CATALOG","BACKUP_OBEX","CONDENSE"]
  var myDisplayValues=["(All)","File","NDMP","Block","Catalog Backup","Oracle","Catalog Condense"]

  if (idx < 7) {
    row["jobType"] = myValues[idx];
    row["DisplayText"] = myDisplayValues[idx];      
        idx++;
    return true;
}else{
    return false;
}   ]]></method>
        </script-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderJobTypeParam" id="8267">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">if (row["jobName"] == "(All)"){&#13;
"!(All)"; //insures that All is at top ot the list box as DPX jobs can begin with "$"&#13;
}&#13;
else &#13;
row["jobTypeStr"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">jobTypeStr</property>
                    <expression name="expression">var myStr = row["jobType"];&#13;
var myJobName = row["jobName"];&#13;
switch (myStr) {&#13;
 //FILE BACKUP TYPES&#13;
 case "BACKUP_FILE":&#13;
 case "BACKUP_BASE":&#13;
 case "BACKUP_INCR":&#13;
 case "BACKUP_DIFR":&#13;
 "File"&#13;
 break;&#13;
 &#13;
   case "BACKUP_CATALOG":&#13;
 "Catalog"&#13;
 break;&#13;
 &#13;
    case "BACKUP_OBEX":&#13;
 "Oracle"&#13;
 break;&#13;
 &#13;
// condense has no user defined jobdef  &#13;
//   case "CONDENSE":  &#13;
// "Condense Catalog" &#13;
// break; &#13;
 &#13;
 //IMAGE&#13;
  case "BACKUP_IMAGE":&#13;
    {&#13;
      if (myJobName.search(/^dp\d{10}/) >= 0 ) {&#13;
      "Archive"&#13;
      }    &#13;
      else "Image"&#13;
     }  &#13;
 break;&#13;
 //NDMP&#13;
  case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
  case "BACKUP_ADS":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
 &#13;
   case "BACKUP_ADS_INCR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
   case "BACKUP_ADS_DIFR":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
 &#13;
  case "BACKUP_BLOCK":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
 //SNAPVAULT &#13;
  case "BACKUP_SNAPVAULT":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_SNAPVAULT_INCR":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_VIRTUALIZATION":&#13;
  "Agentless"&#13;
 break;&#13;
 &#13;
 //VIRTUALIZATION&#13;
    case "BACKUP_VIRTUALIZATION_INCR":&#13;
  "Agentless"&#13;
 break;&#13;
  &#13;
case "DUPLICATE":&#13;
    {&#13;
      if (myJobName.search(/^am\d{10}/) >= 0 ) {&#13;
      "Migrate" &#13;
      //was Automigrate&#13;
      }    &#13;
      else "Migrate" //"Duplicate" clean up we decide to not separate &#13;
      }  &#13;
 break;&#13;
 &#13;
  //RESTORE_SNAPVAULT&#13;
  &#13;
//odv1469732027 "On Demand Verification"&#13;
//sdv "Deferred Verification"&#13;
   case "RESTORE_SNAPVAULT":&#13;
    {&#13;
      if (row["description"].search("verification") >0 ) {&#13;
      "Verification"&#13;
      } &#13;
     // else if (myJobName.search(/^odv\d{10}/) >= 0 ) {&#13;
     //    "On-demand Verification"&#13;
     // }  &#13;
      else "Restore Snapvault"&#13;
     }  &#13;
&#13;
&#13;
 break; &#13;
  &#13;
case "DRIVE_CLEAN":	&#13;
  "Cleaning"&#13;
  break;&#13;
&#13;
case "COPY":     &#13;
  "Copy"&#13;
  break;&#13;
&#13;
case "RESTORE":&#13;
  "Restore File"&#13;
  break;&#13;
&#13;
&#13;
case "RESTORE_ADS":&#13;
  "Restore NDMP"&#13;
  break;  &#13;
  &#13;
case "RESTORE_IMAGE":&#13;
  "Restore Image"&#13;
  break;     &#13;
&#13;
case "RESTORE_VIRTUALIZATION":	&#13;
  "Restore Virtualization"&#13;
  break; &#13;
    &#13;
 //UNHANDLED &#13;
default:&#13;
dataSetRow["jobType"];&#13;
}</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">JobTypeAlias</property>
                    <expression name="expression">switch(row["jobType"]) {&#13;
    case "BACKUP_BASE":&#13;
    case "BACKUP_INCR":&#13;
    case "BACKUP_DIFR":&#13;
        "BACKUP_FILE"&#13;
        break;&#13;
    &#13;
 //   case "BACKUP_CATALOG":&#13;
 //        "BACKUP_CATALOG CONDENSE" //work around for no CONDENSE jobdef&#13;
 //    break;&#13;
   &#13;
    default:&#13;
        row["jobType"]&#13;
}</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobName</text-property>
                    <text-property name="heading">jobName</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">description</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">description</text-property>
                    <text-property name="heading">description</text-property>
                </structure>
            </list-property>
            <list-property name="filter"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var myMaster= params["MasterServer"].value;&#13;
var myJobType = params["jobType"].value;&#13;
&#13;
&#13;
&#13;
//var jobTypes = "BACKUP_FILE BACKUP_CATALOG BACKUP_SAP BACKUP_OBEX BACKUP_BLOCK BACKUP_NDMP BACKUP_IMAGE BACKUP_RAW BACKUP_VIRTUALIZATION" &#13;
//if ((myMaster == null) || (myMaster == "(All)") || (myMaster == "") || (myJobType == "(All)")){&#13;
// myMaster = "(All)"; //dummy value to return no data (supresses real query and returns default&#13;
//}&#13;
&#13;
if (myJobType != "(All)" ){&#13;
 switch (myJobType) {&#13;
 case "BACKUP_FILE" : &#13;
   myJobType=  "BACKUP_BASE,BACKUP_INCR,BACKUP_DIFR"&#13;
     break;&#13;
  default: &#13;
     break;&#13;
   }&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+myMaster+"\"},"&#13;
+"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"jobdef\"},"&#13;
 +"{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+myJobType+"\"}]"&#13;
 }&#13;
&#13;
else {&#13;
   "[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+myMaster+"\"},"&#13;
    +"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"jobdef\"}]"&#13;
   }</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">jobName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">description</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">jobTypeStr</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">JobTypeAlias</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">jobName</property>
                    <property name="nativeName">jobName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">description</property>
                    <property name="nativeName">description</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{jobdefs[*]}(dpxId,jobName,jobType,description)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderJobListParam" id="8276">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">SortKey</property>
                    <expression name="expression">if (row["jobName"] == "(All)"){&#13;
"!(All)"; //insures that All is at top ot the list box as DPX jobs can begin with "$"&#13;
}&#13;
else &#13;
row["jobName"].toUpperCase()</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">test</property>
                    <expression name="expression">params["jobType"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobName</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobName</text-property>
                    <text-property name="heading">jobName</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">description</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">description</text-property>
                    <text-property name="heading">description</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">is-true</property>
                    <expression name="expr" type="javascript">var jobTypeStr = params["jobType"].value;&#13;
&#13;
/////////////////// jobdef api returns all jobs for non backup job types&#13;
switch(jobTypeStr) {  &#13;
&#13;
   case "Restore File": &#13;
   if (( row["jobType"] == "RESTORE") ||  ( row["jobType"] == "(All)")) {  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
   case "Restore NDMP": &#13;
   if (( row["jobType"] == "RESTORE_ADS") ||  ( row["jobType"] == "(All)")) {  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
   case "Restore Virtualization": &#13;
   if (( row["jobType"] == "RESTORE_VIRTUALIZATION") ||  ( row["jobType"] == "(All)")) {  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
   case "Restore Image": &#13;
   if (( row["jobType"] == "RESTORE_IMAGE") ||  ( row["jobType"] == "(All)")) {  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
  &#13;
     case "NDMP": &#13;
   if (( row["jobType"] == "BACKUP_ADS") ||  ( row["jobType"] == "(All)")) {  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
  &#13;
&#13;
&#13;
   case "Cleaning": &#13;
   if (( row["jobType"] == "DRIVE_CLEAN")  ||  ( row["jobType"] == "(All)")){  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
   case "Migrate": &#13;
   if (( row["jobType"] == "DUPLICATE")  ||  ( row["jobType"] == "(All)")){  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
   case "Copy": &#13;
   if (( row["jobType"] == "COPY")  ||  ( row["jobType"] == "(All)")){  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
    case "Agentless": &#13;
   if (( row["jobType"] == "BACKUP_VIRTUALIZATION")  ||  ( row["jobType"] == "(All)")){  &#13;
       true         &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
    case "Archive": &#13;
   if ((row["jobName"].search(/^dp\d{10}/) >= 0 ) || ( row["jobType"] == "(All)")){      &#13;
       true         &#13;
            }           &#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
  case "Image": &#13;
      if (row["jobType"] == "(All)") {&#13;
        true&#13;
        }&#13;
      else if ((row["jobType"] == "BACKUP_IMAGE" ) &amp;&amp; (row["jobName"].search(/^dp/) &lt; 0 )){&#13;
        true &#13;
      }&#13;
  else { &#13;
            false&#13;
            }&#13;
 break; &#13;
&#13;
    case "Catalog": &#13;
  if (( row["jobType"] == "BACKUP_CATALOG")  ||  (row["jobType"] == "CONDENSE_CATALOG") || ( row["jobType"] == "(All)") ){       &#13;
       true         &#13;
            }           &#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
&#13;
    case "Duplicate": &#13;
  if ( row["jobType"] == "DUPLICATE") {       &#13;
       true         &#13;
            }           &#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
    case "Verification":&#13;
       if (row["jobType"] == "(All)") {&#13;
        true&#13;
        } &#13;
     else if (( row["jobType"] == "RESTORE_SNAPVAULT") &amp;&amp; (row["description"].search("verification")> 0)){     &#13;
       true         &#13;
            }           &#13;
            else { &#13;
            false;&#13;
             }&#13;
  break; &#13;
&#13;
    case "Restore Snapvault": &#13;
        if (row["jobType"] == "(All)") {&#13;
        true&#13;
        }  &#13;
  else if (( row["jobType"] == "RESTORE_SNAPVAULT") &amp;&amp; (row["description"].search("verification")&lt; 0)){     &#13;
       true         &#13;
            }           &#13;
            else { &#13;
            false;&#13;
             }&#13;
  break;&#13;
&#13;
     default:&#13;
        true    &#13;
}&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
////////////////////////&#13;
//if (params["jobType"].value != "DRIVE_CLEAN"){&#13;
//  row["jobType"]&#13;
 // }&#13;
 // else "DRIVE_CLEAN"</expression>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var myMaster = params["MasterServer"].value;&#13;
var myJobType = params["jobType"].value;&#13;
&#13;
if ((myMaster == null) || (myMaster == "(All)") || (myMaster == "")|| (myJobType == "(All)")){&#13;
myMaster = "(All)"; //dummy value to return no data (supresses real query for performance)&#13;
}&#13;
&#13;
if (myJobType == "(All)" ){&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+myMaster+"\"},"&#13;
+"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"jobdef\"}]"&#13;
}&#13;
else {&#13;
if (myJobType == "File" ){&#13;
 myJobType = "BACKUP_BASE,BACKUP_DIFR,BACKUP_INCR"&#13;
}&#13;
&#13;
else if (myJobType == "Archive" ){&#13;
 myJobType = "BACKUP_IMAGE"&#13;
}&#13;
&#13;
else if (myJobType == "Image" ){&#13;
 myJobType = "BACKUP_IMAGE"&#13;
}&#13;
&#13;
else if (myJobType == "NDMP" ){&#13;
 myJobType = "BACKUP_ADS"&#13;
}&#13;
&#13;
else if (myJobType == "Block" ){&#13;
 myJobType = "BACKUP_SNAPVAULT"&#13;
}&#13;
&#13;
else if (myJobType == "Verification" ){&#13;
 myJobType = "RESTORE_SNAPVAULT"&#13;
}&#13;
&#13;
else if (myJobType == "Restore Snapvault" ){&#13;
 myJobType = "RESTORE_SNAPVAULT"&#13;
}&#13;
&#13;
"[{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+myMaster+"\"},"&#13;
+"{\"property\":\"resource\", \"op\":\"=\",\"value\":\"jobdef\"},"&#13;
+"{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+myJobType+"\"}]"&#13;
}</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <expression name="defaultValue" type="javascript">"(All)"</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">jobName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">description</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">SortKey</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">test</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">jobName</property>
                    <property name="nativeName">jobName</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">description</property>
                    <property name="nativeName">description</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{jobdefs[*]}(dpxId,jobName,jobType,description)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="com.syncsort.dp.xsb.reports.data.oda.rest.dataSet" name="dpxProviderJobDataSetTESTDAYS" id="8539">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">msCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNTDISTINCT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["dpxId"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">(row["dpxId"].search(/[0-9]{4}/) >= 0)</expression>
                </structure>
                <structure>
                    <property name="name">exception Count</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">1</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["errorMessage"].length >0</expression>
                </structure>
                <structure>
                    <property name="name">duration</property>
                    <expression name="expression">function secondsToString(seconds){&#13;
var numdays = Math.floor(seconds / 86400);&#13;
var numhours = Math.floor((seconds % 86400) / 3600);&#13;
var numminutes = Math.floor(((seconds % 86400) % 3600) / 60);&#13;
var numseconds = ((seconds % 86400) % 3600) % 60;&#13;
&#13;
if (numdays &lt; 10) numdays = '0' + numdays;&#13;
if (numhours &lt; 10) numhours = '0' + numhours;&#13;
if (numminutes &lt; 10) numminutes = '0' + numminutes;&#13;
if (numseconds &lt; 10) numseconds = '0' + numseconds;&#13;
return numdays + " " + numhours + ":" + numminutes + ":" + numseconds ;&#13;
//return numdays + " " + numhours + ":" + numminutes;&#13;
}&#13;
&#13;
&#13;
&#13;
var myStatus = row["status"]&#13;
var endTime = parseInt(row["endTime"]/1000)&#13;
&#13;
switch(myStatus) {&#13;
&#13;
    case "COMPLETED" : &#13;
    case "CANCELLING" : &#13;
    case "ABORTED" :&#13;
      secondsToString(endTime - row["id"])&#13;
     break;&#13;
        &#13;
case "RUNNING" :&#13;
     var d = new Date();&#13;
     var now = d.getTime();&#13;
     secondsToString(parseInt(now/1000 - row["id"]))&#13;
      break ;&#13;
    &#13;
    default:&#13;
        "-"&#13;
}</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">StartTime</property>
                    <expression name="expression">if (!row["errorMessage"]){&#13;
if (row["id"] != "0"){ &#13;
new Date((parseFloat(row["id"])*1000)).toLocaleString();&#13;
//(d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear()+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()&#13;
}&#13;
&#13;
else if (row["status"] == "NOT_RUN"){ &#13;
new Date(parseFloat(row["runTime"])).toLocaleString();&#13;
}&#13;
&#13;
else if (row["status"] == "SUSPENDED"){ &#13;
new Date(parseFloat(row["runTime"])).toLocaleString();&#13;
 }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">EndTime</property>
                    <expression name="expression">if (!row["errorMessage"]){&#13;
if (dataSetRow["id"] != "0"){ &#13;
   if (row["status"] == "RUNNING"){&#13;
   null&#13;
   } &#13;
     else { &#13;
        new Date(parseFloat(row["endTime"])).toLocaleString();&#13;
        }&#13;
    }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">ExpirationDate</property>
                    <expression name="expression">if (!row["errorMessage"]) {&#13;
&#13;
if (dataSetRow["jobRetention"] > 0){&#13;
////////////////&#13;
      if (row["status"] == "SUSPENDED") "";&#13;
      else if (row["status"] == "NOT_RUN") ""; &#13;
////////////////////    &#13;
   else if ((dataSetRow["runRc"] == "0" )||(dataSetRow["runRc"] == "4" )){ &#13;
   new Date((row["jobRetention"]*86400+parseInt(row["id"]))*1000).toLocaleDateString()&#13;
    } &#13;
  }&#13;
}&#13;
else ""</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">jobInstanceCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["id"]</expression>
                        </structure>
                    </list-property>
                    <expression name="filterExpr">row["name"] != "DAILY_SCHED"</expression>
                </structure>
                <structure>
                    <property name="name">ReportDays</property>
                    <expression name="expression">params["ReportDays"].value</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">TableSortKey</property>
                    <expression name="expression">if ((row["status"] == "NOT_RUN") || (row["status"] == "SUSPENDED")){&#13;
    row["runTime"]/1000&#13;
    }&#13;
    else if (( row["status"] == "COMPLETED")|| (row["status"] == "RUNNING")|| (row["status"] == "ABORTED")){&#13;
    row["id"]&#13;
    }&#13;
    else ""</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">StatusPlusRC</property>
                    <expression name="expression">if ((row["status"] == "COMPLETED") &amp;&amp;  (row["runRc"] == "0")) {&#13;
                  "StatusSuccessful"&#13;
             }&#13;
&#13;
           else  if ((row["status"] == "COMPLETED") &amp;&amp;  (row["runRc"] > 0)){&#13;
                 "StatusFailed"&#13;
             }&#13;
            else  if (row["status"] == "ABORTED"){&#13;
                 "StatusFailed"&#13;
             }&#13;
            else  if (row["status"] != "COMPLETED"){&#13;
                 "StatusNotCompleted"&#13;
             }&#13;
             &#13;
             else row["status"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TEST</property>
                    <expression name="expression">row["name"].search(/^odv\d{10}|^sdv\d{10}/)</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">rowCount</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["name"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">Age</property>
                    <expression name="expression">var d = new Date();&#13;
var myAge = d/1000-row["id"]&#13;
myAge/86400</expression>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dpxId</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">dpxId</text-property>
                    <text-property name="heading">dpxId</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">name</text-property>
                    <text-property name="heading">name</text-property>
                </structure>
                <structure>
                    <property name="columnName">id</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">id</text-property>
                    <text-property name="heading">id</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobType</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobType</text-property>
                    <text-property name="heading">jobType</text-property>
                </structure>
                <structure>
                    <property name="columnName">runRc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">runRc</text-property>
                    <text-property name="heading">runRc</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobRetention</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobRetention</text-property>
                    <text-property name="heading">jobRetention</text-property>
                </structure>
                <structure>
                    <property name="columnName">endTime</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">endTime</text-property>
                    <text-property name="heading">endTime</text-property>
                </structure>
                <structure>
                    <property name="columnName">runTime</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">runTime</text-property>
                    <text-property name="heading">runTime</text-property>
                </structure>
                <structure>
                    <property name="columnName">errorMessage</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">errorMessage</text-property>
                    <text-property name="heading">errorMessage</text-property>
                </structure>
                <structure>
                    <property name="columnName">status</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">status</text-property>
                    <text-property name="heading">status</text-property>
                </structure>
                <structure>
                    <property name="columnName">jobState</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">jobState</text-property>
                    <text-property name="heading">jobState</text-property>
                </structure>
            </list-property>
            <list-property name="filter">
                <structure>
                    <property name="operator">ne</property>
                    <expression name="expr" type="javascript">row["name"]</expression>
                    <simple-property-list name="value1">
                        <value>"DAILY_SCHED"</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="operator">is-true</property>
                    <expression name="expr" type="javascript">// Data Set Filter for JobStatusFilter -> multiSelected jobNames&#13;
function JobNameTest(JobNameParam) {&#13;
    if ((JobNameParam != "(All)" ) &amp;&amp; (myJobName.search(row["name"]) >= 0) ){&#13;
       return true;&#13;
     } &#13;
    if (JobNameParam == "(All)" ){&#13;
       return true;&#13;
     }       &#13;
     else return false;  &#13;
}&#13;
var statusParamStr = params["JobStatusFilter"].toString();&#13;
var jobTypeStr = params["jobType"].value;&#13;
var myJobName = params["JobName"].toString();&#13;
statusParamStr = statusParamStr.replace(/,/g, " "); //if multi valued source then replace comma with space &#13;
&#13;
switch(jobTypeStr) {  &#13;
   case "(All)":&#13;
    if (statusParamStr == "(All)") { true } &#13;
       else if (statusParamStr.search(row["StatusPlusRC"]) >= 0     )  {&#13;
            true&#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
             break; &#13;
  &#13;
   case "File": &#13;
   if (( row["jobType"] == "BACKUP_BASE") || (row["jobType"] == "BACKUP_INCR")|| (row["jobType"] == "BACKUP_DIFR"))  {  &#13;
        if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) {&#13;
              JobNameTest(myJobName)           &#13;
            }&#13;
            else { &#13;
            false;&#13;
             }&#13;
           }   &#13;
        break; &#13;
        &#13;
       case "NDMP":&#13;
            if (( row["jobType"] == "BACKUP_ADS") || (row["jobType"] == "BACKUP_ADS_INCR") || (row["jobType"] == "BACKUP_ADS_DIFR")|| (row["jobType"] == "BACKUP_NDMP") ) {&#13;
               if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) {&#13;
            JobNameTest(myJobName)&#13;
            }       &#13;
            else { &#13;
            false;&#13;
             }&#13;
           }  &#13;
        break; &#13;
     &#13;
        case "Block":&#13;
            if (( row["jobType"] == "BACKUP_SNAPVAULT") ) {&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
     &#13;
          case "BACKUP_IMAGE":&#13;
            if (( row["jobType"] == "BACKUP_IMAGE") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;    &#13;
    &#13;
           case "Agentless":&#13;
            if (( row["jobType"] == "BACKUP_VIRTUALIZATION") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;  &#13;
  &#13;
            case "Archive":&#13;
            if (row["name"].search(/^dp\d{10}/) >= 0 ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
            case "Copy":&#13;
            if (( row["jobType"] == "COPY") )&#13;
             JobNameTest(myJobName) &#13;
             break;   &#13;
    &#13;
           case "Cleaning":&#13;
            if (( row["jobType"] == "DRIVE_CLEAN") )&#13;
             JobNameTest(myJobName) &#13;
             break;      &#13;
      &#13;
           case "Restore_NDMP":&#13;
            if (( row["jobType"] == "RESTORE_ADS") ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;             &#13;
      &#13;
         case "Restore Snapvault":&#13;
            if ( row["jobType"] == "RESTORE_SNAPVAULT") {&#13;
              if (row["name"].search(/^sdv\d{10}|^odv\d{10}/) &lt; 0)  {&#13;
           &#13;
                 if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
                   JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
 &#13;
 &#13;
 &#13;
         case "Verification":&#13;
            if ( row["jobType"] == "RESTORE_SNAPVAULT") {&#13;
              if (row["name"].search(/^sdv\d{10}|^odv\d{10}/) == 0)  {&#13;
           &#13;
                 if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
                   JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
 &#13;
     &#13;
         case "Restore File":&#13;
            if ( row["jobType"] == "RESTORE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
&#13;
         case "Restore Image":&#13;
            if ( row["jobType"] == "RESTORE_IMAGE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
        case "Restore Virtualization":&#13;
            if ( row["jobType"] == "RESTORE_VIRTUALIZATION" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
             &#13;
         case "Migrate":&#13;
            if ( row["jobType"] == "DUPLICATE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break;                &#13;
    &#13;
           case "Catalog":&#13;
            if (params["JobName"].toString() == "(All)") {&#13;
            if ( ( row["jobType"] == "BACKUP_CATALOG" ) || ( row["jobType"] == "CONDENSE" ) ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
           else if (params["JobName"].toString() != "(All)") {&#13;
            if ( row["jobType"] == "BACKUP_CATALOG" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             JobNameTest(myJobName) &#13;
               }&#13;
              }&#13;
             }&#13;
             else false;&#13;
             break;   &#13;
    &#13;
             case "CONDENSE":      //never called &#13;
            if ( row["jobType"] == "CONDENSE" ){&#13;
            if ((statusParamStr.search(row["StatusPlusRC"]) >= 0) || (params["JobStatusFilter"].toString() == "(All)")) { &#13;
             true &#13;
               }&#13;
             }&#13;
             else false;&#13;
             break; &#13;
  &#13;
     default:&#13;
        false    &#13;
}</expression>
                </structure>
                <structure>
                    <property name="operator">le</property>
                    <expression name="expr" type="javascript">row["Age"]</expression>
                    <simple-property-list name="value1">
                        <value>params["ReportDays"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">Param1</property>
                    <property name="nativeName">Param1</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">var msId = params["MasterServer"].value;&#13;
var reportDays = params["ReportDays"].value;&#13;
//reportDays = 14; //debug&#13;
var resource = "job";&#13;
var sep = ",";&#13;
msIdFilter = "{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}";&#13;
var JobTypeFilter = "";&#13;
&#13;
var queryStr = "";&#13;
queryStr += "[{\"property\":\"resource\", \"op\":\"=\",\"value\":\""+resource+"\"}"&#13;
if (msId == "(All)") {&#13;
   msId = "*"; &#13;
   }  &#13;
queryStr += ",{\"property\":\"regId\",\"op\":\"=\",\"value\":\""+msId+"\"}"&#13;
&#13;
 /////// jobType aliases or multi value is not supported by the dpx provider. comment out until fully supported &#13;
// if (params["jobType"].toString() != "(All)") {  //add Job Type filter&#13;
//     var jobType = params["jobType"].toString(); &#13;
//     jobType = jobType.replace(/,/g," ")                            &#13;
//     queryStr += ",{\"property\":\"jobType\",\"op\":\"=\",\"value\":\""+jobType+"\"}"&#13;
//     }  &#13;
 &#13;
 ////////////////////handle job name here //////////////////////////////////////////////////////////////////////////&#13;
  var jobName = params["JobName"].toString();  &#13;
  if (jobName != "(All)") {  //add Job Name filter&#13;
    /// if multi select then no jobname filter as multi select not supported by api &#13;
    /// if multi select then will  filter data set &#13;
   if (params["JobName"].length == 1){ &#13;
      queryStr += ",{\"property\":\"jobName\",\"op\":\"=\",\"value\":\""+jobName+"\"}"&#13;
       }     &#13;
  } &#13;
 ///////////////////////////////////////////////////     &#13;
&#13;
&#13;
if (reportDays == 0){&#13;
var getEpochMillis = function(dateStr) {&#13;
  var r = /^\s*(\d{4})-(\d\d)-(\d\d)/&#13;
    , m = (""+dateStr).match(r);&#13;
  return (m) ? Date.UTC(m[1], m[2]-1, m[3]) : undefined;&#13;
}&#13;
var myStartDate =  getEpochMillis(params["DateStart"].value)/1000&#13;
var myEndDate =  getEpochMillis(params["DateEnd"].value)/1000&#13;
var StartEndFilter = ",{\"property\":\"startTime\",\"op\":\"=\",\"value\":\""+myStartDate+"\"},{\"property\":\"endTime\",\"op\":\"=\",\"value\":\""+myEndDate+"\"}";  &#13;
queryStr += StartEndFilter + "]" &#13;
}&#13;
&#13;
else if  (reportDays > 0){&#13;
var reportDaysFilter = ",{\"property\":\"reportDays\",\"op\":\"=\",\"value\":\""+reportDays+"\"}"&#13;
queryStr += reportDaysFilter + "]"&#13;
}</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">Param2</property>
                    <property name="nativeName">Param2</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param3</property>
                    <property name="nativeName">Param3</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param4</property>
                    <property name="nativeName">Param4</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param5</property>
                    <property name="nativeName">Param5</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param6</property>
                    <property name="nativeName">Param6</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param7</property>
                    <property name="nativeName">Param7</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">7</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
                <structure>
                    <property name="name">Param8</property>
                    <property name="nativeName">Param8</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                    <property name="position">8</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dpxId</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">id</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">jobType</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">runRc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">jobRetention</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">endTime</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">runTime</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">errorMessage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">status</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">jobState</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">msCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">exception Count</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">duration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">StartTime</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">EndTime</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">ExpirationDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">jobInstanceCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">ReportDays</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">TableSortKey</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">StatusPlusRC</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">TEST</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">23</property>
                        <property name="name">rowCount</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">24</property>
                        <property name="name">Age</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[errors = new Array(); //this will hold error messages 


//reportContext.setPersistentGlobalVariable("errors", errors );
//reportContext.setPersistentGlobalVariable("nodeStatus", nodeStatus )

]]></method>
            <method name="onFetch"><![CDATA[//var errors = reportContext.getPersistentGlobalVariable("errors");

  if (row["errorMessage"] != ""){
     var myStr  = row["dpxId"]+":"+row["errorMessage"] 
     errors.push(myStr);
      }
]]></method>
            <property name="dataSource">DPXprovider</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dpxId</property>
                    <property name="nativeName">dpxId</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">name</property>
                    <property name="nativeName">name</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">id</property>
                    <property name="nativeName">id</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">jobType</property>
                    <property name="nativeName">jobType</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">runRc</property>
                    <property name="nativeName">runRc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">jobRetention</property>
                    <property name="nativeName">jobRetention</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">endTime</property>
                    <property name="nativeName">endTime</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">runTime</property>
                    <property name="nativeName">runTime</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">errorMessage</property>
                    <property name="nativeName">errorMessage</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">status</property>
                    <property name="nativeName">status</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">jobState</property>
                    <property name="nativeName">jobState</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">1</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[query{jobs[*]}(dpxId,name,id,jobType,runRc,jobRetention,endTime,runTime,errorMessage,status,jobState)]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param1</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param2</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param3</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param4</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param5</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param6</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param7</design:name>
            <design:position>7</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>Param8</design:name>
            <design:position>8</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>1</design:nativeDataTypeCode>
          <design:precision>-1</design:precision>
          <design:scale>-1</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="syncsort_master_page" id="933" extends="syncsort_library.syncsort_master_page">
            <property name="topMargin">0in</property>
            <overridden-values>
                <ref-entry baseId="56" name="company_logo" id="56"/>
                <ref-entry baseId="58" name="NewGrid" id="58"/>
                <ref-entry baseId="59" id="59"/>
                <ref-entry baseId="60" id="60"/>
                <ref-entry baseId="61" id="61"/>
                <ref-entry baseId="62" id="62"/>
                <ref-entry baseId="63" id="63"/>
                <ref-entry baseId="64" name="NewAutoText" id="64"/>
                <ref-entry baseId="65" id="65"/>
                <ref-entry baseId="66" name="NewText" id="66"/>
                <ref-entry baseId="67" id="67"/>
                <ref-entry baseId="68" name="NewAutoText1" id="68"/>
            </overridden-values>
        </simple-master-page>
    </page-setup>
    <body>
        <text name="PrimaryReportTitle" id="251">
            <property name="style">primaryReportTitle</property>
            <property name="color">#23282C</property>
            <property name="contentType">html</property>
            <text-property name="content"><![CDATA[<VALUE-OF>reportContext.getMessage("DPxBackupJobSummaryRepTitle",reportContext.getLocale());</VALUE-OF>
]]></text-property>
        </text>
        <grid name="Title+ParamBox" id="373">
            <column id="374"/>
            <row id="375">
                <cell id="376">
                    <property name="paddingTop">3pt</property>
                    <text name="ReportParameters" id="928">
                        <property name="dataSet">MasterServerParam</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">hostAddress</property>
                                <text-property name="displayName">hostAddress</text-property>
                                <expression name="expression" type="javascript">dataSetRow["hostAddress"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div style="padding:7px 7px;color:black; background:white;  font-weight:normal; font-size:1.0em;width:100%;">
<dl>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportCreationDate", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF> new Date().toLocaleString()  </VALUE-OF>  </dd> <br>
		
	<dt> <b><VALUE-OF>reportContext.getMessage("ReportGeneratedBy", reportContext.getLocale());</VALUE-OF></b>
		 <VALUE-OF>params["run_by"].value  </VALUE-OF>  </dd> <br>
		<br>
	
<br>
<dt> <b><VALUE-OF>reportContext.getMessage("ReportParameters", reportContext.getLocale());</VALUE-OF></b> </dt>
 <dd> <b><VALUE-OF>reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());</VALUE-OF></b> 

 <VALUE-OF> if (params["MasterServer"].value != "(All)") {
  var key  = params["MasterServer"].value;
  msName[key];
  } 
  else {params["MasterServer"].value} </VALUE-OF> </dd>
<!--------------------------------------------------Job Type  --------------------------------------------------->




<!--------------------------------------------------Job type --------------------------------------------------->
<dd> <b><VALUE-OF>reportContext.getMessage("JobType", reportContext.getLocale());</VALUE-OF>: </b> <VALUE-OF format="HTML">
params["jobType"].value;
</VALUE-OF> </dd> 

<!--------------------------------------------------Job Name --------------------------------------------------->
<dd>
 <VALUE-OF format="HTML"> 
   if(params["JobName"].length > 1){
   str1 = reportContext.getMessage("JobName", reportContext.getLocale())+":";
   str2 = params["JobName"].toString().replace(/\(All\),/,"");
   str2 = str2.replace(/,/g,", ")
   }
   else {
   str1 = reportContext.getMessage("JobName", reportContext.getLocale())+":";
   str2 = params["JobName"].toString();
   }
   str1.bold()+" "+str2 
 </VALUE-OF>
</dd
<!----------->
<!--------------------------------------------------Job Status Filter  --------------------------------------------------->
<dd>
<b><VALUE-OF>reportContext.getMessage("JobStatusFilter", reportContext.getLocale())</VALUE-OF>:<b> 
<VALUE-OF>
var jobStatusStr = params["JobStatusFilter"].toString()
   jobStatusStr = jobStatusStr.replace(/StatusFailed/,reportContext.getMessage("StatusFailed", reportContext.getLocale()));
   jobStatusStr = jobStatusStr.replace(/StatusNotCompleted/,reportContext.getMessage("StatusNotCompleted", reportContext.getLocale()));
   jobStatusStr = jobStatusStr.replace(/StatusSuccessful/,reportContext.getMessage("StatusSuccessful", reportContext.getLocale()));
jobStatusStr
</VALUE-OF> </dd>

<!--------------------------------------------------Report Days OR Report Period --------------------------------------------------->
<dd>
 <VALUE-OF format="HTML"> 
   if(params["ReportDays"].value > 0){
   str1 = reportContext.getMessage("ReportInterval", reportContext.getLocale())+":"
   str2 = params["ReportDays"].value
   if(params["ReportDays"].value == 1){
    str3 = "day"
    }
   else  {
    str3 = "days"
    }
   str1.bold()+" "+str2+" "+str3 
   }

   else {     //if (params["ReportDays"].value == 0){
   str1 = reportContext.getMessage("DPxReportWindowStart", reportContext.getLocale())+":"
   str2 = params["DateStart"].value.toLocaleString(); 
   str3 = reportContext.getMessage("DPxReportWindowEnd", reportContext.getLocale())+":"
   str4 =  params["DateEnd"].value..toLocaleString();
   str1.bold()+" "+str2+"<br>"+str3.bold()+" "+str4
   }

 </VALUE-OF>
</dd

<!------------------------------------------------------------Interactive Table----------------------------------------------------->

<dd>
<VALUE-OF format="HTML">  
    str1 = reportContext.getMessage("InteractiveTable", reportContext.getLocale())+":";
    str2 = params["Interactive Table"].value;
    str1.bold()+" "+str2;
</VALUE-OF>
</dd>



<dl>
<div>

 ]]></text-property>
                    </text>
                    <text name="ReportProperties" id="845">
                        <property name="style">primaryReportSubTitle</property>
                        <property name="backgroundColor">#23282C</property>
                        <property name="fontWeight">bold</property>
                        <property name="color">white</property>
                        <property name="paddingTop">1pt</property>
                        <property name="paddingBottom">1pt</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">true</expression>
                            </structure>
                        </list-property>
                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#4389bc"
this.getStyle().fontSize = "1.2em"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"
this.text = "Report Properties" ]]></method>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Report Properties]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
        <grid name="Summary-Detail-Day" id="533">
            <column id="534"/>
            <row id="8391">
                <list-property name="visibility">
                    <structure>
                        <property name="format">all</property>
                        <expression name="valueExpr" type="javascript">if (params["Interactive Table"].value == "Yes"){&#13;
true&#13;
}&#13;
else false;</expression>
                    </structure>
                </list-property>
                <cell id="8392">
                    <table id="8481">
                        <property name="dataSet">dpxProviderJobDataSet</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">jobType</property>
                                <text-property name="displayName">jobType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">runRc</property>
                                <text-property name="displayName">runRc</text-property>
                                <expression name="expression" type="javascript">dataSetRow["runRc"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">errorMessage</property>
                                <text-property name="displayName">errorMessage</text-property>
                                <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">msCount</property>
                                <text-property name="displayName">msCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">exception Count</property>
                                <text-property name="displayName">exception Count</text-property>
                                <expression name="expression" type="javascript">dataSetRow["exception Count"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">JobTypeStr</property>
                                <expression name="expression" type="javascript">var myStr = dataSetRow["jobType"];&#13;
var myJobName = dataSetRow["name"];&#13;
switch (myStr) {&#13;
 //FILE BACKUP TYPES&#13;
 case "BACKUP_FILE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_BASE":&#13;
 "File Base"&#13;
 break;&#13;
&#13;
  case "BACKUP_INCR":&#13;
 "File Incr"&#13;
 break;&#13;
&#13;
  case "BACKUP_DIFR":&#13;
 "File Difr"&#13;
 break;&#13;
 &#13;
   case "BACKUP_CATALOG":&#13;
 "Backup Catalog"&#13;
 break;&#13;
 &#13;
    case "BACKUP_OBEX":&#13;
 "Oracle"&#13;
 break;&#13;
 &#13;
   case "CONDENSE":&#13;
 "Condense Catalog"&#13;
 break; &#13;
 &#13;
    case "COPY":&#13;
 "Copy"&#13;
 break; &#13;
 &#13;
 //IMAGE&#13;
  case "BACKUP_IMAGE":&#13;
    {&#13;
      if (myJobName.search(/^dp\d{10}/) >= 0 ) {&#13;
      "Archive"&#13;
      }    &#13;
      else "Image"&#13;
     }  &#13;
 break;&#13;
 //NDMP&#13;
  case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
  case "BACKUP_ADS":&#13;
 "NDMP Base"&#13;
 break;&#13;
 &#13;
   case "BACKUP_NDMP":&#13;
 "NDMP Base"&#13;
 break;&#13;
 &#13;
   case "BACKUP_ADS_INCR":&#13;
 "NDMP Incr"&#13;
 break;&#13;
&#13;
   case "BACKUP_ADS_DIFR":&#13;
 "NDMP Difr"&#13;
 break;&#13;
&#13;
 &#13;
  case "BACKUP_BLOCK":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
 //SNAPVAULT &#13;
  case "BACKUP_SNAPVAULT":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_SNAPVAULT_INCR":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_VIRTUALIZATION":&#13;
  "Agentless"&#13;
 break;&#13;
 &#13;
 //VIRTUALIZATION&#13;
    case "BACKUP_VIRTUALIZATION_INCR":&#13;
  "Agentless"&#13;
 break;&#13;
  &#13;
case "DUPLICATE":&#13;
    {&#13;
      if (myJobName.search(/^am\d{10}/) >= 0 ) {&#13;
      //"Automigration"&#13;
      "Migration"&#13;
      }    &#13;
      else "Duplicate"&#13;
     }  &#13;
 break;&#13;
 &#13;
  //RESTORE_SNAPVAULT&#13;
  &#13;
//odv1469732027 "On Demand Verification"&#13;
//sdv "Deferred Verification"&#13;
   case "RESTORE_SNAPVAULT":&#13;
    {&#13;
      if (myJobName.search(/^sdv\d{10}/) >= 0 ) {&#13;
      "Verification"&#13;
      } &#13;
      else if (myJobName.search(/^odv\d{10}/) >= 0 ) {&#13;
      //"On-demand Verification"&#13;
      "Verification"&#13;
      }  &#13;
      else "Restore Snapvault"&#13;
     }  &#13;
 break; &#13;
  &#13;
case "RESTORE":&#13;
  "Restore File"&#13;
 break;  &#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
dataSetRow["jobType"];&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">JobInstances</property>
                                <property name="dataType">integer</property>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["id"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">OldestBackup</property>
                                <property name="dataType">decimal</property>
                                <property name="aggregateFunction">MIN</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["id"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">runDate</property>
                                <expression name="expression" type="javascript">var myDate = new Date((parseFloat(row["id"])*1000)).toLocaleString()&#13;
//var myTime = new Date((parseFloat(row["id"])*1000)).toLocaleTimeString()&#13;
myDate&#13;
/////////////&#13;
//LastBackupTime&#13;
if (row["id"].length > 0){&#13;
var myDate = new Date((parseFloat(row["id"])*1000));&#13;
var myHours=myDate.getHours(); //localtime is displayed&#13;
var myMinutes=myDate.getMinutes();&#13;
if (myHours &lt; 10){&#13;
   myHours = "0"+myHours&#13;
   }&#13;
 &#13;
if (myMinutes &lt; 10){&#13;
   myMinutes = "0"+myMinutes&#13;
   }&#13;
myDate.toLocaleDateString()+" "+myHours+":"+myMinutes&#13;
&#13;
} &#13;
else 0</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">NewestBackupDate</property>
                                <expression name="expression" type="javascript">new Date((parseFloat(row["id"])*1000)).toLocaleDateString()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">InstanceCount</property>
                                <property name="dataType">integer</property>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">dataSetRow["name"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobRetention</property>
                                <text-property name="displayName">jobRetention</text-property>
                                <expression name="expression" type="javascript">//for completed jobs&#13;
&#13;
if ((dataSetRow["runRc"] == "1")||(dataSetRow["runRc"] == "8")||(dataSetRow["runRc"] == "16")||(dataSetRow["status"] == "SUSPENDED") ){&#13;
    "-"&#13;
}&#13;
else if (dataSetRow["jobRetention"] > 0){&#13;
dataSetRow["jobRetention"]&#13;
}&#13;
&#13;
else "-"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">endTime</property>
                                <text-property name="displayName">endTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["endTime"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">runTime</property>
                                <text-property name="displayName">runTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["runTime"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobId2Date</property>
                                <expression name="expression" type="javascript">new Date((parseFloat(row["id"])*1000)).toLocaleDateString()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">sec2hhmmss</property>
                                <expression name="expression" type="javascript">if (parseInt(dataSetRow["runTime"]) > 0){&#13;
var seconds = dataSetRow["runTime"];&#13;
// multiply by 1000 because Date() requires miliseconds&#13;
var date = new Date(seconds * 1000);&#13;
var hh = date.getUTCHours();&#13;
var mm = date.getUTCMinutes();&#13;
var ss = date.getSeconds();&#13;
//&#13;
if (hh &lt; 10) {hh = "0"+hh;}&#13;
if (mm &lt; 10) {mm = "0"+mm;}&#13;
if (ss &lt; 10) {ss = "0"+ss;}&#13;
&#13;
hh+":"+mm+":"+ss;&#13;
} &#13;
else "N/A"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">ExpirationDate</property>
                                <expression name="expression" type="javascript">dataSetRow["ExpirationDate"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">runRcStr</property>
                                <expression name="expression" type="javascript">var myRc = dataSetRow["runRc"]&#13;
var myStatus = dataSetRow["status"]&#13;
if (myStatus == "COMPLETED" ) {&#13;
&#13;
switch (myRc) {&#13;
 case "0":&#13;
 "Success"&#13;
 break;&#13;
&#13;
  case "4":&#13;
 if (dataSetRow["jobType"] == "CONDENSE") "Failed"&#13;
 else  "Partial"&#13;
 break;&#13;
&#13;
  case "8":&#13;
  case "16":&#13;
 "Failed"&#13;
 break;&#13;
&#13;
  case "1":&#13;
 "Cancelled"&#13;
 break;&#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
"Failed";&#13;
 }&#13;
}&#13;
&#13;
else {&#13;
switch (myStatus) {&#13;
 case "SUSPENDED":&#13;
     if ( dataSetRow["jobState"]  == "USER HOLD"){&#13;
     "Held"&#13;
     }&#13;
     else {  &#13;
     "Suspended"&#13;
     }&#13;
 break;&#13;
&#13;
  case "HELD":&#13;
 "Held"&#13;
 break;&#13;
&#13;
 case "NOT_RUN":&#13;
 "Waiting"&#13;
 break;&#13;
  &#13;
  case "RUNNING":&#13;
 "Running"&#13;
 break;&#13;
&#13;
 case "ABORTED":&#13;
 "Aborted"&#13;
 break;&#13;
  &#13;
  case "CANCELLING":&#13;
 "Cancelling"&#13;
 break;&#13;
 &#13;
 //UNHANDLED &#13;
default:&#13;
 myStatus;&#13;
 }&#13;
&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">JobStartTime</property>
                                <expression name="expression" type="javascript">if (dataSetRow["name"] != null){&#13;
if (dataSetRow["id"] != "0"){ &#13;
//var myDate = new Date((parseFloat(row["id"])*1000)).toLocaleDateString()&#13;
//var myTime = new Date((parseFloat(row["id"])*1000)).toLocaleTimeString()&#13;
//myDate+"\n"+myTime&#13;
&#13;
new Date((parseFloat(row["id"])*1000)).toLocaleString();&#13;
  }&#13;
 }&#13;
&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">JobEndTime</property>
                                <expression name="expression" type="javascript">if(row["endTime"] != "0") {&#13;
//var myDate = new Date(parseFloat(row["endTime"])).toLocaleDateString()&#13;
//var myTime = new Date(parseFloat(row["endTime"])).toLocaleTimeString()&#13;
//myDate+"\n"+myTime&#13;
new Date(parseFloat(row["endTime"])).toLocaleString();&#13;
}&#13;
&#13;
else if (dataSetRow["status"] == "RUNNING"){&#13;
  "" &#13;
  }&#13;
&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">status</property>
                                <text-property name="displayName">status</text-property>
                                <expression name="expression" type="javascript">dataSetRow["status"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">JobStartTimeStr</property>
                                <expression name="expression" type="javascript">var myStr = row["JobStartTime"];&#13;
if (myStr == null)  "N/A"&#13;
else myStr</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobRetention_1</property>
                                <text-property name="displayName">jobRetention</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobRetention"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">StartTime</property>
                                <text-property name="displayName">StartTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["StartTime"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">EndTime</property>
                                <text-property name="displayName">EndTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["EndTime"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobInstanceCount</property>
                                <text-property name="displayName">jobInstanceCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobInstanceCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">duration</property>
                                <text-property name="displayName">duration</text-property>
                                <expression name="expression" type="javascript">dataSetRow["duration"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">ReportDays</property>
                                <text-property name="displayName">ReportDays</text-property>
                                <expression name="expression" type="javascript">dataSetRow["ReportDays"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">TableSortKey</property>
                                <text-property name="displayName">TableSortKey</text-property>
                                <expression name="expression" type="javascript">dataSetRow["TableSortKey"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">jobState</property>
                                <text-property name="displayName">jobState</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobState"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">StatusPlusRC</property>
                                <text-property name="displayName">StatusPlusRC</text-property>
                                <expression name="expression" type="javascript">dataSetRow["StatusPlusRC"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">TEST</property>
                                <text-property name="displayName">TEST</text-property>
                                <expression name="expression" type="javascript">dataSetRow["TEST"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">InstanceCountGrouped</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>GroupByMaster</value>
                                </simple-property-list>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["name"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="pageBreakInterval">10000</property>
                        <list-property name="sort">
                            <structure>
                                <expression name="key" type="javascript">row["TableSortKey"]</expression>
                                <property name="direction">desc</property>
                                <property name="strength">-1</property>
                            </structure>
                            <structure>
                                <expression name="key" type="javascript">row["name"]</expression>
                                <property name="direction">asc</property>
                                <property name="strength">-1</property>
                            </structure>
                        </list-property>
                        <column id="8510">
                            <property name="width">17%</property>
                        </column>
                        <column id="8511">
                            <property name="width">8%</property>
                        </column>
                        <column id="8512">
                            <property name="width">13%</property>
                        </column>
                        <column id="8513">
                            <property name="width">14%</property>
                        </column>
                        <column id="8514">
                            <property name="width">14%</property>
                        </column>
                        <column id="8515">
                            <property name="width">13%</property>
                        </column>
                        <column id="8516">
                            <property name="width">11%</property>
                        </column>
                        <column id="8517">
                            <property name="width">11%</property>
                        </column>
                        <header>
                            <row id="7990">
                                <property name="backgroundColor">#23282C</property>
                                <property name="color">#ECF1F7</property>
                                <property name="verticalAlign">top</property>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (params["MasterServer"].value != "(All)") {&#13;
false &#13;
}&#13;
else true</expression>
                                    </structure>
                                </list-property>
                                <cell id="7993">
                                    <property name="colSpan">8</property>
                                    <property name="rowSpan">1</property>
                                    <property name="verticalAlign">top</property>
                                    <text-data name="msIdGroupHeader1" id="8295">
                                        <property name="fontSize">0.9em</property>
                                        <property name="fontWeight">bold</property>
                                        <property name="color">white</property>
                                        <property name="paddingTop">4pt</property>
                                        <property name="paddingLeft">7px</property>
                                        <property name="paddingBottom">4pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <property name="textAlign">left</property>
                                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#23282c"
this.getStyle().fontSize = "1.2em"
this.getStyle().textAlign = "left"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"]]></method>
                                        <expression name="valueExpr">var key  = params["MasterServer"].value;&#13;
var myLabel=reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());&#13;
myLabel+" "+ msName[key];</expression>
                                        <property name="contentType">auto</property>
                                    </text-data>
                                </cell>
                            </row>
                        </header>
                        <group id="8482">
                            <property name="groupName">GroupByMaster</property>
                            <expression name="keyExpr" type="javascript">row["dpxId"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["dpxId"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="8042">
                                    <property name="backgroundColor">#23282C</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">if (params["MasterServer"].value == "(All)") {&#13;
false &#13;
}&#13;
else true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="8043">
                                        <property name="colSpan">8</property>
                                        <property name="rowSpan">1</property>
                                        <text-data name="msIdGroupHeader" id="5927">
                                            <property name="fontSize">0.9em</property>
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <property name="paddingTop">4pt</property>
                                            <property name="paddingLeft">7px</property>
                                            <property name="paddingBottom">4pt</property>
                                            <property name="paddingRight">0pt</property>
                                            <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = "#23282c"
this.getStyle().fontSize = "1.2em"
this.getStyle().textAlign = "left"
this.getStyle().paddingTop = "7px"
this.getStyle().paddingBottom = "7px"
this.getStyle().paddingLeft = "7px"
this.getStyle().fontWeight = "bold"
this.getStyle().color = "white"]]></method>
                                            <expression name="valueExpr">var key  = row["dpxId"];&#13;
var myLabel=reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());&#13;
myLabel+" "+ msName[key];</expression>
                                            <property name="contentType">auto</property>
                                        </text-data>
                                    </cell>
                                </row>
                                <row id="8097">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="color">white</property>
                                    <property name="verticalAlign">top</property>
                                    <cell id="8098">
                                        <label id="8105">
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text" key="JobName">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8252">
                                        <label id="8483">
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">4pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="JobStatusFilter">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8099">
                                        <label id="8484">
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <text-property name="text" key="JobType">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8100">
                                        <label id="8485">
                                            <property name="paddingTop">2pt</property>
                                            <text-property name="text">Job Start Time</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8234">
                                        <label id="8486">
                                            <property name="paddingTop">2pt</property>
                                            <text-property name="text" key="JobEndTime">Job End Time</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8102">
                                        <property name="paddingTop">0pt</property>
                                        <label name="jDur2" id="8487">
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="JobDuration">Job Duration</text-property>
                                        </label>
                                        <label id="8488">
                                            <property name="paddingTop">0pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text">(dd hh:mm:ss)</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8225">
                                        <label name="jRet2" id="8489">
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="JobRetention">Job Retention</text-property>
                                        </label>
                                        <label name="days2" id="8490">
                                            <property name="paddingTop">0pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text">(Days)</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8104">
                                        <label name="jExpires2" id="8491">
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="JobExpiration">Job Expiration</text-property>
                                        </label>
                                        <label name="Date2" id="8492">
                                            <property name="paddingTop">0pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="Date">Date</text-property>
                                        </label>
                                    </cell>
                                </row>
                            </header>
                            <footer>
                                <row id="8047">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="8048">
                                        <property name="colSpan">8</property>
                                        <property name="rowSpan">1</property>
                                        <text name="NoData1" id="8289">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">black</property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">1px</property>
                                            <property name="paddingTop">7pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">7pt</property>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<b>
 <VALUE-OF format="HTML">reportContext.getMessage("DPxNoJobInstanceData", reportContext.getLocale());</VALUE-OF>
</b>]]></text-property>
                                        </text>
                                    </cell>
                                </row>
                            </footer>
                        </group>
                        <detail>
                            <row id="8493">
                                <method name="onCreate"><![CDATA[reportContext.setPersistentGlobalVariable("myMaster", this.getRowData().getExpressionValue("row[dpxId]"))
reportContext.setPersistentGlobalVariable("myJobId", this.getRowData().getExpressionValue("row[id]"))]]></method>
                                <list-property name="highlightRules">
                                    <structure>
                                        <property name="operator">eq</property>
                                        <property name="backgroundColor">#ECF1F7</property>
                                        <expression name="testExpr" type="javascript">row.__rownum%2</expression>
                                        <simple-property-list name="value1">
                                            <value type="javascript">0</value>
                                        </simple-property-list>
                                    </structure>
                                </list-property>
                                <cell id="8494">
                                    <data id="8495">
                                        <property name="paddingLeft">7pt</property>
                                        <method name="onCreate"><![CDATA[var myJobId = this.getRowData().getExpressionValue("row[id]");
this.helpText = "Job Id: "+myJobId+"\n"+"Job Log: "+parseInt(myJobId).toString(16).toUpperCase()+".log";

]]></method>
                                        <property name="resultSetColumn">name</property>
                                    </data>
                                </cell>
                                <cell id="8496">
                                    <property name="paddingTop">0pt</property>
                                    <property name="paddingRight">7pt</property>
                                    <data id="8497">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">4pt</property>
                                        <property name="paddingBottom">0pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <property name="textAlign">left</property>
                                        <method name="onCreate"><![CDATA[ 					if( this.getValue() == "Success" ){
					   this.getStyle().backgroundColor = "#A1D490";
					   this.getStyle().color = "white";
					    }
					    
					 else if(this.getValue() == "Partial" ){
						this.getStyle().backgroundColor = "#FCD474";
						this.getStyle().color = "white";
					    }
					      
					 else if(this.getValue() == "Aborted" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }	
					    				    
					 else if(this.getValue() == "Waiting" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }  
	                 else if(this.getValue() == "Cancelled" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }     
					    
	                 else if(this.getValue() == "Cancelling" ){
						this.getStyle().backgroundColor = "#FCD474";
						this.getStyle().color = "white";
					    }					      
					 else if(this.getValue() == "Suspended" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    } 
					 
					 else if(this.getValue() == "Held" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }					 
					 
					 else if(this.getValue() == "Running" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }       
					     
					 else if(this.getValue() == "Failed" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }
   ]]></method>
                                        <property name="resultSetColumn">runRcStr</property>
                                    </data>
                                </cell>
                                <cell id="8498">
                                    <data id="8499">
                                        <property name="paddingLeft">10pt</property>
                                        <property name="resultSetColumn">JobTypeStr</property>
                                    </data>
                                </cell>
                                <cell id="8500">
                                    <data id="8501">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy hh:mm a</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="50px"
}]]></method>
                                        <property name="resultSetColumn">StartTime</property>
                                    </data>
                                </cell>
                                <cell id="8502">
                                    <data id="8503">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy hh:mm a</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="50px"
}]]></method>
                                        <property name="resultSetColumn">EndTime</property>
                                    </data>
                                </cell>
                                <cell id="8504">
                                    <data id="8505">
                                        <method name="onRender"><![CDATA[if (this.getValue() == "-"){
this.getStyle().paddingLeft ="30px"
}]]></method>
                                        <property name="resultSetColumn">duration</property>
                                    </data>
                                </cell>
                                <cell id="8506">
                                    <data id="8507">
                                        <property name="paddingLeft">7pt</property>
                                        <property name="textAlign">left</property>
                                        <method name="onRender"><![CDATA[if (this.getValue() == "-"){
this.getStyle().paddingLeft ="10px"
}]]></method>
                                        <property name="resultSetColumn">jobRetention</property>
                                    </data>
                                </cell>
                                <cell id="8508">
                                    <data id="8509">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="25px"
}]]></method>
                                        <property name="resultSetColumn">ExpirationDate</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="8024">
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">if (row["InstanceCount"] &lt; 1){&#13;
   false&#13;
   }&#13;
 else true</expression>
                                    </structure>
                                </list-property>
                                <cell id="8026">
                                    <property name="colSpan">8</property>
                                    <property name="rowSpan">1</property>
                                    <text name="NoData11" id="8296">
                                        <property name="fontWeight">bold</property>
                                        <property name="color">black</property>
                                        <property name="borderTopStyle">solid</property>
                                        <property name="borderTopWidth">1px</property>
                                        <property name="paddingTop">7pt</property>
                                        <property name="paddingLeft">7pt</property>
                                        <property name="paddingBottom">7pt</property>
                                        <property name="contentType">html</property>
                                        <text-property name="content"><![CDATA[<b>
 <VALUE-OF format="HTML">reportContext.getMessage("DPxNoJobInstanceData", reportContext.getLocale());</VALUE-OF>
</b>]]></text-property>
                                    </text>
                                </cell>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
            <row id="6074">
                <list-property name="visibility">
                    <structure>
                        <property name="format">all</property>
                        <expression name="valueExpr" type="javascript">if (params["Interactive Table"].value == "No"){&#13;
true&#13;
}&#13;
else false;</expression>
                    </structure>
                </list-property>
                <cell id="6075">
                    <table name="JobInstanceTable" id="7989">
                        <property name="color">black</property>
                        <property name="dataSet">dpxProviderJobDataSet</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">if (!row["rowCount"]){&#13;
true&#13;
}&#13;
else false</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">dpxId</property>
                                <text-property name="displayName">dpxId</text-property>
                                <expression name="expression" type="javascript">dataSetRow["dpxId"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">name</property>
                                <text-property name="displayName">name</text-property>
                                <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">id</property>
                                <text-property name="displayName">id</text-property>
                                <expression name="expression" type="javascript">dataSetRow["id"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">jobType</property>
                                <text-property name="displayName">jobType</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobType"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">runRc</property>
                                <text-property name="displayName">runRc</text-property>
                                <expression name="expression" type="javascript">dataSetRow["runRc"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">errorMessage</property>
                                <text-property name="displayName">errorMessage</text-property>
                                <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">msCount</property>
                                <text-property name="displayName">msCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">exception Count</property>
                                <text-property name="displayName">exception Count</text-property>
                                <expression name="expression" type="javascript">dataSetRow["exception Count"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">JobTypeStr</property>
                                <expression name="expression" type="javascript">var myStr = dataSetRow["jobType"];&#13;
var myJobName = dataSetRow["name"];&#13;
switch (myStr) {&#13;
 //FILE BACKUP TYPES&#13;
 case "BACKUP_FILE":&#13;
 "File"&#13;
 break;&#13;
&#13;
  case "BACKUP_BASE":&#13;
 "File Base"&#13;
 break;&#13;
&#13;
  case "BACKUP_INCR":&#13;
 "File Incr"&#13;
 break;&#13;
&#13;
  case "BACKUP_DIFR":&#13;
 "File Difr"&#13;
 break;&#13;
 &#13;
   case "BACKUP_CATALOG":&#13;
 "Backup Catalog"&#13;
 break;&#13;
 &#13;
    case "BACKUP_OBEX":&#13;
 "Oracle"&#13;
 break;&#13;
 &#13;
   case "CONDENSE":&#13;
 "Condense Catalog"&#13;
 break; &#13;
 &#13;
    case "COPY":&#13;
 "Copy"&#13;
 break; &#13;
 &#13;
 //IMAGE&#13;
  case "BACKUP_IMAGE":&#13;
    {&#13;
      if (myJobName.search(/^dp\d{10}/) >= 0 ) {&#13;
      "Archive"&#13;
      }    &#13;
      else "Image"&#13;
     }  &#13;
 break;&#13;
 //NDMP&#13;
  case "BACKUP_NDMP":&#13;
 "NDMP"&#13;
 break;&#13;
&#13;
  case "BACKUP_ADS":&#13;
 "NDMP Base"&#13;
 break;&#13;
 &#13;
   case "BACKUP_NDMP":&#13;
 "NDMP Base"&#13;
 break;&#13;
 &#13;
   case "BACKUP_ADS_INCR":&#13;
 "NDMP Incr"&#13;
 break;&#13;
&#13;
   case "BACKUP_ADS_DIFR":&#13;
 "NDMP Difr"&#13;
 break;&#13;
&#13;
 &#13;
  case "BACKUP_BLOCK":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
 //SNAPVAULT &#13;
  case "BACKUP_SNAPVAULT":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_SNAPVAULT_INCR":&#13;
 "Block"&#13;
 break;&#13;
 &#13;
   case "BACKUP_VIRTUALIZATION":&#13;
  "Agentless"&#13;
 break;&#13;
 &#13;
 //VIRTUALIZATION&#13;
    case "BACKUP_VIRTUALIZATION_INCR":&#13;
  "Agentless"&#13;
 break;&#13;
  &#13;
case "DUPLICATE":&#13;
    {&#13;
      if (myJobName.search(/^am\d{10}/) >= 0 ) {&#13;
      //"Automigration"&#13;
      "Migration"&#13;
      }    &#13;
      else "Duplicate"&#13;
     }  &#13;
 break;&#13;
 &#13;
  //RESTORE_SNAPVAULT&#13;
  &#13;
//odv1469732027 "On Demand Verification"&#13;
//sdv "Deferred Verification"&#13;
   case "RESTORE_SNAPVAULT":&#13;
    {&#13;
      if (myJobName.search(/^sdv\d{10}/) >= 0 ) {&#13;
      "Verification"&#13;
      } &#13;
      else if (myJobName.search(/^odv\d{10}/) >= 0 ) {&#13;
      //"On-demand Verification"&#13;
      "Verification"&#13;
      }  &#13;
      else "Restore Snapvault"&#13;
     }  &#13;
 break; &#13;
  &#13;
case "RESTORE":&#13;
  "Restore File"&#13;
 break;  &#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
dataSetRow["jobType"];&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">JobInstances</property>
                                <property name="dataType">integer</property>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["id"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">OldestBackup</property>
                                <property name="dataType">decimal</property>
                                <property name="aggregateFunction">MIN</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["id"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">runDate</property>
                                <expression name="expression" type="javascript">var myDate = new Date((parseFloat(row["id"])*1000)).toLocaleString()&#13;
//var myTime = new Date((parseFloat(row["id"])*1000)).toLocaleTimeString()&#13;
myDate&#13;
/////////////&#13;
//LastBackupTime&#13;
if (row["id"].length > 0){&#13;
var myDate = new Date((parseFloat(row["id"])*1000));&#13;
var myHours=myDate.getHours(); //localtime is displayed&#13;
var myMinutes=myDate.getMinutes();&#13;
if (myHours &lt; 10){&#13;
   myHours = "0"+myHours&#13;
   }&#13;
 &#13;
if (myMinutes &lt; 10){&#13;
   myMinutes = "0"+myMinutes&#13;
   }&#13;
myDate.toLocaleDateString()+" "+myHours+":"+myMinutes&#13;
&#13;
} &#13;
else 0</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">NewestBackupDate</property>
                                <expression name="expression" type="javascript">new Date((parseFloat(row["id"])*1000)).toLocaleDateString()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">InstanceCount</property>
                                <property name="dataType">integer</property>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">dataSetRow["name"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobRetention</property>
                                <text-property name="displayName">jobRetention</text-property>
                                <expression name="expression" type="javascript">//for completed jobs&#13;
&#13;
if ((dataSetRow["runRc"] == "1")||(dataSetRow["runRc"] == "8")||(dataSetRow["runRc"] == "16")||(dataSetRow["status"] == "SUSPENDED") ){&#13;
    "-"&#13;
}&#13;
else if (dataSetRow["jobRetention"] > 0){&#13;
dataSetRow["jobRetention"]&#13;
}&#13;
&#13;
else "-"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">endTime</property>
                                <text-property name="displayName">endTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["endTime"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">runTime</property>
                                <text-property name="displayName">runTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["runTime"]</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobId2Date</property>
                                <expression name="expression" type="javascript">new Date((parseFloat(row["id"])*1000)).toLocaleDateString()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">sec2hhmmss</property>
                                <expression name="expression" type="javascript">if (parseInt(dataSetRow["runTime"]) > 0){&#13;
var seconds = dataSetRow["runTime"];&#13;
// multiply by 1000 because Date() requires miliseconds&#13;
var date = new Date(seconds * 1000);&#13;
var hh = date.getUTCHours();&#13;
var mm = date.getUTCMinutes();&#13;
var ss = date.getSeconds();&#13;
//&#13;
if (hh &lt; 10) {hh = "0"+hh;}&#13;
if (mm &lt; 10) {mm = "0"+mm;}&#13;
if (ss &lt; 10) {ss = "0"+ss;}&#13;
&#13;
hh+":"+mm+":"+ss;&#13;
} &#13;
else "N/A"</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">ExpirationDate</property>
                                <expression name="expression" type="javascript">dataSetRow["ExpirationDate"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">runRcStr</property>
                                <expression name="expression" type="javascript">var myRc = dataSetRow["runRc"]&#13;
var myStatus = dataSetRow["status"]&#13;
if (myStatus == "COMPLETED" ) {&#13;
&#13;
switch (myRc) {&#13;
 case "0":&#13;
 "Success"&#13;
 break;&#13;
&#13;
  case "4":&#13;
 if (dataSetRow["jobType"] == "CONDENSE") "Failed"&#13;
 else  "Partial"&#13;
 break;&#13;
&#13;
  case "8":&#13;
  case "16":&#13;
 "Failed"&#13;
 break;&#13;
&#13;
  case "1":&#13;
 "Cancelled"&#13;
 break;&#13;
  &#13;
 //UNHANDLED &#13;
default:&#13;
"Failed";&#13;
 }&#13;
}&#13;
&#13;
else {&#13;
switch (myStatus) {&#13;
 case "SUSPENDED":&#13;
     if ( dataSetRow["jobState"]  == "USER HOLD"){&#13;
     "Held"&#13;
     }&#13;
     else {  &#13;
     "Suspended"&#13;
     }&#13;
 break;&#13;
&#13;
  case "HELD":&#13;
 "Held"&#13;
 break;&#13;
&#13;
 case "NOT_RUN":&#13;
 "Waiting"&#13;
 break;&#13;
  &#13;
  case "RUNNING":&#13;
 "Running"&#13;
 break;&#13;
&#13;
 case "ABORTED":&#13;
 "Aborted"&#13;
 break;&#13;
  &#13;
  case "CANCELLING":&#13;
 "Cancelling"&#13;
 break;&#13;
 &#13;
 //UNHANDLED &#13;
default:&#13;
 myStatus;&#13;
 }&#13;
&#13;
}</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">JobStartTime</property>
                                <expression name="expression" type="javascript">if (dataSetRow["name"] != null){&#13;
if (dataSetRow["id"] != "0"){ &#13;
//var myDate = new Date((parseFloat(row["id"])*1000)).toLocaleDateString()&#13;
//var myTime = new Date((parseFloat(row["id"])*1000)).toLocaleTimeString()&#13;
//myDate+"\n"+myTime&#13;
&#13;
new Date((parseFloat(row["id"])*1000)).toLocaleString();&#13;
  }&#13;
 }&#13;
&#13;
else ""</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">status</property>
                                <text-property name="displayName">status</text-property>
                                <expression name="expression" type="javascript">dataSetRow["status"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">JobStartTimeStr</property>
                                <expression name="expression" type="javascript">var myStr = row["JobStartTime"];&#13;
if (myStr == null)  "N/A"&#13;
else myStr</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobRetention_1</property>
                                <text-property name="displayName">jobRetention</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobRetention"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">StartTime</property>
                                <text-property name="displayName">StartTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["StartTime"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">EndTime</property>
                                <text-property name="displayName">EndTime</text-property>
                                <expression name="expression" type="javascript">dataSetRow["EndTime"]</expression>
                                <property name="dataType">date-time</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">jobInstanceCount</property>
                                <text-property name="displayName">jobInstanceCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobInstanceCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">duration</property>
                                <text-property name="displayName">duration</text-property>
                                <expression name="expression" type="javascript">dataSetRow["duration"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">ReportDays</property>
                                <text-property name="displayName">ReportDays</text-property>
                                <expression name="expression" type="javascript">dataSetRow["ReportDays"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">TableSortKey</property>
                                <text-property name="displayName">TableSortKey</text-property>
                                <expression name="expression" type="javascript">dataSetRow["TableSortKey"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">jobState</property>
                                <text-property name="displayName">jobState</text-property>
                                <expression name="expression" type="javascript">dataSetRow["jobState"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">StatusPlusRC</property>
                                <text-property name="displayName">StatusPlusRC</text-property>
                                <expression name="expression" type="javascript">dataSetRow["StatusPlusRC"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">InstanceCountGrouped</property>
                                <property name="dataType">integer</property>
                                <simple-property-list name="aggregateOn">
                                    <value>GroupByMaster</value>
                                </simple-property-list>
                                <property name="aggregateFunction">COUNT</property>
                                <list-property name="arguments">
                                    <structure>
                                        <property name="name">Expression</property>
                                        <expression name="value" type="javascript">row["name"]</expression>
                                    </structure>
                                </list-property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">Ms</property>
                                <expression name="expression" type="javascript">var myLabel=reportContext.getMessage("DPxMasterServerNode", reportContext.getLocale());&#13;
myLabel+" "+ msName[dataSetRow["dpxId"]];</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">TEST</property>
                                <text-property name="displayName">TEST</text-property>
                                <expression name="expression" type="javascript">dataSetRow["TEST"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">rowCount</property>
                                <text-property name="displayName">rowCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["rowCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                        </list-property>
                        <expression name="bookmark" type="javascript">"__JobInstanceTable"</expression>
                        <property name="pageBreakInterval">10000</property>
                        <column id="8034">
                            <property name="width">17%</property>
                        </column>
                        <column id="8528"/>
                        <column id="8074"/>
                        <column id="8083">
                            <property name="width">14%</property>
                        </column>
                        <column id="8238">
                            <property name="width">14%</property>
                        </column>
                        <column id="8036">
                            <property name="width">13%</property>
                        </column>
                        <column id="8229">
                            <property name="width">11%</property>
                        </column>
                        <column id="8094">
                            <property name="width">11%</property>
                        </column>
                        <column id="8389">
                            <property name="width">0%</property>
                        </column>
                        <column id="8536">
                            <property name="width">0%</property>
                        </column>
                        <header>
                            <row id="8305">
                                <property name="backgroundColor">white</property>
                                <property name="color">white</property>
                                <property name="verticalAlign">top</property>
                                <cell id="8306">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label id="8370">
                                        <property name="color">white</property>
                                        <property name="paddingTop">2pt</property>
                                        <property name="paddingLeft">7pt</property>
                                        <property name="paddingBottom">2pt</property>
                                        <text-property name="text" key="JobName">name</text-property>
                                    </label>
                                </cell>
                                <cell id="8524">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label id="8529">
                                        <property name="color">white</property>
                                        <property name="paddingTop">2pt</property>
                                        <property name="paddingLeft">4pt</property>
                                        <property name="paddingBottom">0pt</property>
                                        <text-property name="text" key="JobStatusFilter">name</text-property>
                                    </label>
                                </cell>
                                <cell id="8308">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label id="8147">
                                        <property name="color">white</property>
                                        <property name="paddingTop">2pt</property>
                                        <property name="paddingLeft">7pt</property>
                                        <property name="paddingBottom">2pt</property>
                                        <text-property name="text">JobType</text-property>
                                    </label>
                                </cell>
                                <cell id="8309">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label id="8146">
                                        <property name="color">white</property>
                                        <property name="paddingTop">2pt</property>
                                        <property name="paddingBottom">2pt</property>
                                        <text-property name="text">Job Start Time</text-property>
                                    </label>
                                </cell>
                                <cell id="8310">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label id="8239">
                                        <property name="color">white</property>
                                        <property name="paddingTop">2pt</property>
                                        <text-property name="text">Job End Time</text-property>
                                    </label>
                                </cell>
                                <cell id="8311">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label name="jDur" id="8216">
                                        <property name="color">white</property>
                                        <text-property name="text">Job Duration</text-property>
                                    </label>
                                    <label id="8273">
                                        <property name="color">white</property>
                                        <text-property name="text">(dd hh:mm:ss)</text-property>
                                    </label>
                                </cell>
                                <cell id="8312">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label name="jRet" id="8230">
                                        <property name="color">white</property>
                                        <text-property name="text">Job Retention</text-property>
                                    </label>
                                    <label name="days" id="8272">
                                        <property name="color">white</property>
                                        <text-property name="text">(Days)</text-property>
                                    </label>
                                </cell>
                                <cell id="8313">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">5pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                    <label name="jExpires" id="8162">
                                        <property name="color">white</property>
                                        <text-property name="text">Job Expiration</text-property>
                                    </label>
                                    <label name="Date" id="8274">
                                        <property name="color">white</property>
                                        <text-property name="text">Date</text-property>
                                    </label>
                                </cell>
                                <cell id="8385">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">#23282C</property>
                                    <property name="paddingTop">0pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                </cell>
                                <cell id="8532">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">white</property>
                                    <property name="paddingTop">0pt</property>
                                    <property name="paddingLeft">0pt</property>
                                    <property name="paddingBottom">0pt</property>
                                    <property name="verticalAlign">top</property>
                                </cell>
                            </row>
                        </header>
                        <group id="8041">
                            <property name="groupName">GroupByMaster</property>
                            <expression name="keyExpr" type="javascript">row["dpxId"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["dpxId"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <header>
                                <row id="8360">
                                    <property name="backgroundColor">#696969</property>
                                    <property name="color">white</property>
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">true</expression>
                                        </structure>
                                    </list-property>
                                    <cell id="8362">
                                        <label id="8371">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text" key="JobName">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8525">
                                        <property name="fontWeight">bold</property>
                                        <label id="8530">
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">4pt</property>
                                            <property name="paddingBottom">0pt</property>
                                            <text-property name="text" key="JobStatusFilter">name</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8364">
                                        <property name="fontWeight">bold</property>
                                        <label id="8373">
                                            <property name="color">white</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingLeft">7pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text">JobType</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8365">
                                        <property name="fontWeight">bold</property>
                                        <label id="8374">
                                            <property name="color">white</property>
                                            <property name="paddingTop">2pt</property>
                                            <property name="paddingBottom">2pt</property>
                                            <text-property name="text">Job Start Time</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8366">
                                        <property name="fontWeight">bold</property>
                                        <label id="8375">
                                            <property name="color">white</property>
                                            <property name="paddingTop">2pt</property>
                                            <text-property name="text">Job End Time</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8367">
                                        <label name="jDur1" id="8377">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">Job Duration</text-property>
                                        </label>
                                        <label id="8376">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">(dd hh:mm:ss)</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8368">
                                        <label name="jRet1" id="8378">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">Job Retention</text-property>
                                        </label>
                                        <label name="days1" id="8379">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">(Days)</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8369">
                                        <label name="jExpires1" id="8380">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">Job Expiration</text-property>
                                        </label>
                                        <label name="Date1" id="8381">
                                            <property name="fontWeight">bold</property>
                                            <property name="color">white</property>
                                            <text-property name="text">Date</text-property>
                                        </label>
                                    </cell>
                                    <cell id="8386"/>
                                    <cell id="8533"/>
                                </row>
                            </header>
                        </group>
                        <detail>
                            <row id="8163">
                                <property name="borderBottomColor">#E5E5E5</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">1px</property>
                                <property name="borderLeftColor">#E5E5E5</property>
                                <property name="borderLeftStyle">solid</property>
                                <property name="borderLeftWidth">1px</property>
                                <property name="borderRightColor">#E5E5E5</property>
                                <property name="borderRightStyle">solid</property>
                                <property name="borderRightWidth">1px</property>
                                <property name="borderTopColor">#E5E5E5</property>
                                <property name="borderTopStyle">solid</property>
                                <property name="borderTopWidth">1px</property>
                                <cell id="8164">
                                    <property name="borderLeftStyle">solid</property>
                                    <property name="borderLeftWidth">1px</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8011">
                                        <property name="paddingLeft">7pt</property>
                                        <method name="onCreate"><![CDATA[var myJobId = this.getRowData().getExpressionValue("row[id]");
this.helpText = "Job Id: "+myJobId+"\n"+"Job Log: "+parseInt(myJobId).toString(16).toUpperCase()+".log";

]]></method>
                                        <property name="resultSetColumn">name</property>
                                    </data>
                                </cell>
                                <cell id="8526">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8531">
                                        <property name="fontWeight">bold</property>
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">4pt</property>
                                        <property name="paddingBottom">0pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <property name="textAlign">left</property>
                                        <method name="onCreate"><![CDATA[ 					this.getStyle().paddingTop="7px";
 					this.getStyle().paddingBottom="7px";
 					
 					
 					if( this.getValue() == "Success" ){
					   this.getStyle().backgroundColor = "#A1D490";
					   this.getStyle().color = "white";
					    }
					    
					 else if(this.getValue() == "Partial" ){
						this.getStyle().backgroundColor = "#FCD474";
						this.getStyle().color = "white";
					    }
					      
					 else if(this.getValue() == "Aborted" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }	
					    				    
					 else if(this.getValue() == "Waiting" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }  
	                 else if(this.getValue() == "Cancelled" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }     
					    
	                 else if(this.getValue() == "Cancelling" ){
						this.getStyle().backgroundColor = "#FCD474";
						this.getStyle().color = "white";
					    }					      
					 else if(this.getValue() == "Suspended" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    } 
					 
					 else if(this.getValue() == "Held" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }					 
					 
					 else if(this.getValue() == "Running" ){
						this.getStyle().backgroundColor = "#808080";
						this.getStyle().color = "white";
					    }       
					     
					 else if(this.getValue() == "Failed" ){
						this.getStyle().backgroundColor = "#FF616B";
						this.getStyle().color = "white";
					    }
   ]]></method>
                                        <property name="resultSetColumn">runRcStr</property>
                                    </data>
                                </cell>
                                <cell id="8165">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8015">
                                        <property name="paddingLeft">10pt</property>
                                        <property name="resultSetColumn">JobTypeStr</property>
                                    </data>
                                </cell>
                                <cell id="8166">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8290">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy hh:mm a</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="50px"
}]]></method>
                                        <property name="resultSetColumn">StartTime</property>
                                    </data>
                                </cell>
                                <cell id="8235">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8291">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy hh:mm a</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="50px"
}]]></method>
                                        <property name="resultSetColumn">EndTime</property>
                                    </data>
                                </cell>
                                <cell id="8168">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8171">
                                        <method name="onRender"><![CDATA[if (this.getValue() == "-"){
this.getStyle().paddingLeft ="30px"
}]]></method>
                                        <property name="resultSetColumn">duration</property>
                                    </data>
                                </cell>
                                <cell id="8226">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8231">
                                        <property name="paddingLeft">7pt</property>
                                        <property name="textAlign">left</property>
                                        <method name="onRender"><![CDATA[if (this.getValue() == "-"){
this.getStyle().paddingLeft ="10px"
}]]></method>
                                        <property name="resultSetColumn">jobRetention</property>
                                    </data>
                                </cell>
                                <cell id="8170">
                                    <property name="borderRightColor">#E5E5E5</property>
                                    <property name="borderRightStyle">solid</property>
                                    <property name="borderRightWidth">1px</property>
                                    <data id="8292">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Custom</property>
                                            <property name="pattern">MM/dd/yy</property>
                                        </structure>
                                        <method name="onRender"><![CDATA[if (this.getValue() == null){
this.setDisplayValue("-");
this.getStyle().paddingLeft ="25px"
}]]></method>
                                        <property name="resultSetColumn">ExpirationDate</property>
                                    </data>
                                </cell>
                                <cell id="8387">
                                    <data id="8390">
                                        <property name="resultSetColumn">TableSortKey</property>
                                    </data>
                                </cell>
                                <cell id="8534">
                                    <data id="8347">
                                        <property name="resultSetColumn">Ms</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="8350">
                                <property name="backgroundColor">#696969</property>
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">doc</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">docx</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">odp</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">ods</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">odt</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">pdf</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">postscript</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">ppt</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">pptx</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">xls</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">xls_spudsoft</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                    <structure>
                                        <property name="format">xlsx</property>
                                        <expression name="valueExpr" type="javascript">true</expression>
                                    </structure>
                                </list-property>
                                <cell id="8352"/>
                                <cell id="8527"/>
                                <cell id="8354"/>
                                <cell id="8355"/>
                                <cell id="8356"/>
                                <cell id="8357"/>
                                <cell id="8358"/>
                                <cell id="8359"/>
                                <cell id="8388"/>
                                <cell id="8535"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
            <row id="8287">
                <list-property name="visibility">
                    <structure>
                        <property name="format">all</property>
                        <expression name="valueExpr" type="javascript">if (params["Interactive Table"].value == "No"){&#13;
true&#13;
}&#13;
else false</expression>
                    </structure>
                </list-property>
                <cell id="8288">
                    <text name="NoRegistration" id="8286">
                        <property name="fontWeight">bold</property>
                        <property name="color">black</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">1px</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">1px</property>
                        <property name="paddingTop">7pt</property>
                        <property name="paddingLeft">7pt</property>
                        <property name="paddingBottom">7pt</property>
                        <property name="dataSet">dpxProviderJobDataSet</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">if (row["msCount"] > 0) {&#13;
   true&#13;
   }&#13;
 if (!row["errorMessage"]){&#13;
   true //all records are blocked by filer &#13;
   }  &#13;
   else {&#13;
      false&#13;
      }</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">msCount</property>
                                <text-property name="displayName">msCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["msCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">errorMessage</property>
                                <text-property name="displayName">errorMessage</text-property>
                                <expression name="expression" type="javascript">dataSetRow["errorMessage"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">exception Count</property>
                                <text-property name="displayName">exception Count</text-property>
                                <expression name="expression" type="javascript">dataSetRow["exception Count"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<b>
 <VALUE-OF format="HTML">reportContext.getMessage("DPxError3", reportContext.getLocale());</VALUE-OF>
</b>]]></text-property>
                    </text>
                    <text name="NoData" id="8538">
                        <property name="fontWeight">bold</property>
                        <property name="color">black</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">1px</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">1px</property>
                        <property name="paddingTop">7pt</property>
                        <property name="paddingLeft">7pt</property>
                        <property name="paddingBottom">7pt</property>
                        <property name="dataSet">dpxProviderJobDataSet</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">if (row["rowCount"]){&#13;
true&#13;
}&#13;
else false</expression>
                            </structure>
                        </list-property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">rowCount</property>
                                <text-property name="displayName">rowCount</text-property>
                                <expression name="expression" type="javascript">dataSetRow["rowCount"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<b>
 <VALUE-OF format="HTML">reportContext.getMessage("DPxNoJobInstanceData", reportContext.getLocale());</VALUE-OF>
</b>]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
        <text name="DataTables" id="4819">
            <expression name="bookmark" type="javascript">"__JobInstanceTable"</expression>
            <property name="contentType">html</property>
            <text-property name="content"><![CDATA[<script type="text/javascript" src="/portal/reports/js/head.min.js">
</script>
<script>

//This is where DataTable is built

var buildDataTable=function(options){
  var id=options.id, 
  	  header=$vui("<thead/>").prependTo(id),
  	  foot=$vui("<tfoot/>").appendTo(id);
  	    	  
  $vui(id+" tbody tr").slice(0,1).appendTo(header);
  $vui(id+" tbody tr").slice(-1).appendTo(foot);

if(id=="#__JobInstanceTable"){
 
var dt=$vui(id).addClass("display cell-border").show().DataTable({
     autoWidth: false,
//	 columnDefs start here 
      'columnDefs': [
    { "orderData": [ 9, 0 ],    "targets": 0 },
    { "orderData": [ 9, 1 ],    "targets": 1 },
    { "orderData": [ 9, 2 ],    "targets": 2 },
    { "orderData": [ 9, 8 ],    "targets": 3 },
    { "orderData": [ 9, 4 ],    "targets": 4 },
    { "orderData": [ 9, 5 ],    "targets": 5 },         
    { "orderData": [ 9, 7 ],    "targets": 7 },
                          
                  {
                    "targets": [ 1 ],
                     "width": '2em',
                    "searchable": true
                    },
              

              
                 {
                    "targets": [ 8 ],
                    "visible": false,
                    "searchable": true
                    },                  
                 
                 {
                    "targets": [ 9 ],
                    "visible": false,
                    "searchable": true
                    }
     ],  
  
//   columnDefs end  here      
//      colReorder: true,
        "order": [[ 9, 'asc' ], [ 8, 'desc' ]],
      //  "displayLength": 25,
        fixedHeader: true,            	        
  			select: {
            	style: 'os',
            	selector: '*'
        	},
 
            "orderClasses": false,
        	"paging": false,
          	"scrollY": '70vh',
        	"scrollCollapse": true,
////////////////////////////////////////////  
// Grouping happens here           
            "drawCallback": function ( settings ) {
            var api = this.api();
            var rows = api.rows( {page:'current'} ).nodes();
            var last=null; 
            api.column(9, {page:'current'} ).data().each( function ( group, i ) 
            {
                if ( last !== group ) {
                    $(rows).eq( i ).before(
                        '<tr class="group"><td colspan="9">'+group+'</td></tr>'                       
                    ); 
                    last = group;
                }
            } );
        },           
/////////////////////////////////////////            

    
            
/////////////////////////////////////////            
            "bStateSave": true,
            "fnStateSave": function (oSettings, oData) {
            localStorage.setItem( 'DataTables', JSON.stringify(oData) );
            },
            "fnStateLoad": function (oSettings) {
            return JSON.parse( localStorage.getItem('DataTables') );
            }
      });
    }
};

//Request jquery for Eclipse designer: following section is useless in Visioneo portlet
if (typeof($vui)!="function" ){
	head.load(
		"/portal/reports/js/jquery.min.js",
		function(){
			console.log("jQuery loaded...");
			$.noConflict();
			$vui=jQuery;
		}
	);
}else{
  jQuery=$vui;
}


//Requests datatable framework and build the table:
head.load(
	"/portal/reports/css/jquery.dataTables.min.css",
	"/portal/reports/js/jquery.dataTables.min.js",
	"/portal/reports/js/jquery-1.12.0.min.js",
	"/portal/reports/js/dataTables.colReorder.min.js",
	"/portal/reports/js/dataTables.select.min.js",
	"/portal/reports/js/dataTables.fixedHeader.min.js",
	"/portal/reports/css/fixedHeader.dataTables.min.css",

	function(){
		head.ready(
			function(){
  				console.log("Datatable requirements are ready...");
  				 				buildDataTable({id:"#<VALUE-OF>vars['namespace']</VALUE-OF>__JobInstanceTable"})
  				
  			}
  		);
	}
	
);

</script>]]></text-property>
        </text>
    </body>
    <property name="pageVariables">
        <variable-element name="namespace">
            <expression name="value" type="javascript">var ns=reportContext.getAppContext().get("visioneo.report.namespace");&#13;
(ns==null)?"":ns+"_";</expression>
            <property name="type">report</property>
        </variable-element>
    </property>
</report>
